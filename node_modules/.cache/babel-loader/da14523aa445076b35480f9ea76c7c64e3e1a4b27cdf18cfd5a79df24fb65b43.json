{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/ssGame/SSGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport SSWindow from '../../../components/gameWindow/ssWindow/SSWindow';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport { samplingFromList } from '../../../uitls/main';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet progressBarElement;\n\n//Test parameters\nconst flashDuration = 250;\nconst flashInterval = 750;\nconst initialSpan = 2;\nconst probeNumber = 6;\nconst allProbe = [1, 2, 3, 4, 5, 6];\nconst probeAngularPosition = [45, 90, 135, 225, 270, 315];\nconst probeShape = 'circle';\nconst probeParams = 'radius';\nconst radius = getComputedStyle(document.documentElement).getPropertyValue('--cir-base-unit') + \" / 2 \";\nlet cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\nlet cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\nconst restColor = getComputedStyle(document.documentElement).getPropertyValue('--ss-rest-color').trim();\nconst restBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--rest-border-color').trim();\nconst rampingCorrectCount = 3;\nconst maxFailStreakCount = 2;\nconst maxFailCount = 1;\n\n// Initaial values\nlet trialNumber;\nlet currSpan = initialSpan;\nlet currTrial = 0;\nlet allSpan = [];\nlet spanSizeAndDirection = [];\nlet spanInCorrectAns = [];\nlet allSeq = [];\nlet genSeq = [];\nlet currSeq = [];\nlet allAns = [];\nlet currAns = [];\nlet correctCount = 0;\nlet failCount = 0;\nlet failStreakCount = 0;\nlet checkAns = [];\nlet enterStruggleTimeCount = 0;\nlet struggleTime = false;\nlet isTest = false;\nlet allReactionTime = [];\nlet reactionTime = [];\nlet allReactionTrial = [];\nlet answerTimePerTrial = [];\nlet latestRtIndex = 0;\nlet hitRt = [];\nlet sumHitRt;\nlet avgHitRt;\nlet hit2SpanSizeRtForward = [];\nlet hit3SpanSizeRtForward = [];\nlet hit4SpanSizeRtForward = [];\nlet hit5SpanSizeRtForward = [];\nlet hit2SpanSizeRtBackward = [];\nlet hit3SpanSizeRtBackward = [];\nlet hit4SpanSizeRtBackward = [];\nlet hit5SpanSizeRtBackward = [];\nlet avgHit2SpanSizeRtForward;\nlet avgHit3SpanSizeRtForward;\nlet avgHit4SpanSizeRtForward;\nlet avgHit5SpanSizeRtForward;\nlet avgHit2SpanSizeRtBackward;\nlet avgHit3SpanSizeRtBackward;\nlet avgHit4SpanSizeRtBackward;\nlet avgHit5SpanSizeRtBackward;\nlet hitAccuracy2SpanSizeForward;\nlet hitAccuracy3SpanSizeForward;\nlet hitAccuracy4SpanSizeForward;\nlet hitAccuracy5SpanSizeForward;\nlet hitAccuracy2SpanSizeBackward;\nlet hitAccuracy3SpanSizeBackward;\nlet hitAccuracy4SpanSizeBackward;\nlet hitAccuracy5SpanSizeBackward;\nlet latestIndex = 0;\nlet scorePerTrial = [];\nlet spanMultiplier = 1000;\nlet summaryCorrect = 0;\nlet sumScores = 0;\nlet score;\nlet trialStruct = [];\nlet cueStartTime = [];\nlet cueEndTime = [];\nlet startTime = 0;\nlet timeoutList = [];\nlet cueDataResult = [];\nlet probeDataResult = [];\nlet answerDataResult = [];\nlet trialDataResult = [];\nlet gameLogicSchemeResult;\nlet scoringDataResult = [];\nlet metricDataResult = [];\nlet directionMode = [];\nlet postEntryResult;\nfunction SSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const inputRef = useRef(null);\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [progressValue, setProgressValue] = useState(0);\n  const [isItDone, setIsItDone] = useState(false);\n  useEffect(() => {\n    initiateData();\n    createPseudorandomStimuli();\n    gameLogicSchemeResult = gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount);\n    progressBarElement = document.getElementById(\"progressBar\");\n    seqGenerator();\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (inputRef.current != null) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const checkSeq = event => {\n    if (isTest === true) {\n      let end = endTime();\n      reactionTime.push(end - startTime);\n      answerTimePerTrial.push(thisTime());\n      //   clickSound();\n    }\n\n    if (event.currentTarget.classList.contains('1')) {\n      currAns.push(1);\n      $('#cirButton1').addClass('clicked');\n      $('#border1').addClass('clicked');\n      $('#cirButton1').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton1').removeClass('clicked');\n        $('#border1').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('2')) {\n      currAns.push(2);\n      $('#cirButton2').addClass('clicked');\n      $('#border2').addClass('clicked');\n      $('#cirButton2').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton2').removeClass('clicked');\n        $('#border2').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('3')) {\n      currAns.push(3);\n      $('#cirButton3').addClass('clicked');\n      $('#border3').addClass('clicked');\n      $('#cirButton3').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton3').removeClass('clicked');\n        $('#border3').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('4')) {\n      currAns.push(4);\n      $('#cirButton4').addClass('clicked');\n      $('#border4').addClass('clicked');\n      $('#cirButton4').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton4').removeClass('clicked');\n        $('#border4').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('5')) {\n      currAns.push(5);\n      $('#cirButton5').addClass('clicked');\n      $('#border5').addClass('clicked');\n      $('#cirButton5').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton5').removeClass('clicked');\n        $('#border5').removeClass('clicked');\n      }, 150));\n    } else {\n      currAns.push(6);\n      $('#cirButton6').addClass('clicked');\n      $('#border6').addClass('clicked');\n      $('#cirButton6').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton6').removeClass('clicked');\n        $('#border6').removeClass('clicked');\n      }, 150));\n    }\n    if (currAns.length === spanSizeAndDirection[currTrial][0]) {\n      $('.cirButton').removeClass('hoverDisabled');\n      $('.cirButton').addClass('hoverDisabled');\n      cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime);\n      probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition);\n      answerData(currAns, answerTimePerTrial);\n      timeoutList.push(setTimeout(function () {\n        $('.cirButton').removeClass('clicked');\n      }, 150));\n      $('#goSignal').html(\"\");\n      $('.cirButton').removeClass('readyToClick');\n      allAns.push(currAns.toString());\n      const equalCheck = (currAns, currSeq) => currAns.length === currSeq.length && currAns.every((value, index) => value === currSeq[index]);\n      if (spanSizeAndDirection[currTrial][1] === 1) {\n        currAns.reverse();\n      }\n      if (equalCheck(currAns, currSeq)) {\n        $('#goSignal').html(\"ถูก\");\n        checkHitSpanSize();\n        setProgressValue(progressValue + 1);\n        //   combo2Sound();\n        currSeq = [];\n        genSeq = [];\n        currTrial++;\n        checkAns.push(1);\n        failCount = 0;\n        correctCount++;\n        if (correctCount === rampingCorrectCount) {\n          currSpan++;\n          correctCount = 0;\n        }\n        if (struggleTime === true) {\n          struggleTime = false;\n          enterStruggleTimeCount++;\n          correctCount = 0;\n          failStreakCount++;\n          if (failStreakCount === maxFailStreakCount) {\n            currSpan--;\n            if (currSpan < initialSpan) {\n              currSpan = initialSpan;\n            }\n            failStreakCount = 0;\n          }\n        } else {\n          failStreakCount = 0;\n        }\n        timeoutList.push(setTimeout(function () {\n          seqGenerator();\n        }, flashDuration + flashInterval));\n      } else {\n        $('#goSignal').html(\"ผิด\");\n        //   losingSound();\n        struggleTime = true;\n        currSeq = [];\n        checkAns.push(0);\n        correctCount = 0;\n        failCount++;\n        if (failCount === maxFailCount) {\n          setProgressValue(progressValue + 1);\n          currTrial++;\n          genSeq = [];\n          failCount = 0;\n          struggleTime = false;\n          enterStruggleTimeCount++;\n          failStreakCount++;\n          if (failStreakCount === maxFailStreakCount) {\n            currSpan--;\n            if (currSpan < initialSpan) {\n              currSpan = initialSpan;\n            }\n            failStreakCount = 0;\n          }\n        }\n        timeoutList.push(setTimeout(function () {\n          seqGenerator();\n        }, flashDuration + flashInterval));\n      }\n      allReactionTime.push(reactionTime.toString());\n      let lastReaction = reactionTime[reactionTime.length - 1];\n      allReactionTrial.push(lastReaction);\n      reactionTime = [];\n    }\n    if (currTrial === trialNumber) {\n      summarySpanSize();\n      summaryScore();\n      runIsOver();\n    }\n  };\n  function checkHitSpanSize() {\n    let reactionTimePerClick = [];\n    // push in 1st index to the reactionTimePerClick array\n    reactionTimePerClick.push(reactionTime[0]);\n    for (let clickIndex = 0; clickIndex < reactionTime.length; clickIndex++) {\n      // currClick = the present time in present index (where we started)\n      let currClick = reactionTime[clickIndex];\n      // nextClick = the next time in next index (the 2nd 3rd and so on clicked)\n      let nextClick;\n      if (clickIndex < reactionTime.length - 1) {\n        nextClick = reactionTime[clickIndex + 1];\n      }\n\n      // this condition prevent NaN because there is nothing beyond the last index so it 'undefined'\n      if (nextClick !== undefined) {\n        // push every time that nextClick !== undefined\n        reactionTimePerClick.push(nextClick - currClick);\n      }\n    }\n    let avgTrialReactionTime = reactionTimePerClick.reduce((sum, time) => {\n      return sum + time;\n    }) / reactionTimePerClick.length;\n    hitRt.push(avgTrialReactionTime);\n    // check if forward or backward mode \n    if (spanSizeAndDirection[currTrial][1] === 0) {\n      // forward\n      // check span size \n      if (spanSizeAndDirection[currTrial][0] === 2) {\n        hit2SpanSizeRtForward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 3) {\n        hit3SpanSizeRtForward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 4) {\n        hit4SpanSizeRtForward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 5) {\n        hit5SpanSizeRtForward.push(avgTrialReactionTime);\n      }\n    } else {\n      // backward\n      // check span size \n      if (spanSizeAndDirection[currTrial][0] === 2) {\n        hit2SpanSizeRtBackward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 3) {\n        hit3SpanSizeRtBackward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 4) {\n        hit4SpanSizeRtBackward.push(avgTrialReactionTime);\n      } else if (spanSizeAndDirection[currTrial][0] === 5) {\n        hit5SpanSizeRtBackward.push(avgTrialReactionTime);\n      }\n    }\n  }\n  function initiateData() {\n    allSpan = [];\n    allSeq = [];\n    genSeq = [];\n    currSeq = [];\n    allAns = [];\n    currAns = [];\n    correctCount = 0;\n    failCount = 0;\n    checkAns = [];\n    struggleTime = false;\n    isTest = false;\n    allReactionTime = [];\n    reactionTime = [];\n    allReactionTrial = [];\n    latestIndex = 0;\n    scorePerTrial = [];\n    summaryCorrect = 0;\n    sumScores = 0;\n    currTrial = 0;\n    hit2SpanSizeRtForward = [];\n    hit3SpanSizeRtForward = [];\n    hit4SpanSizeRtForward = [];\n    hit5SpanSizeRtForward = [];\n    hit2SpanSizeRtBackward = [];\n    hit3SpanSizeRtBackward = [];\n    hit4SpanSizeRtBackward = [];\n    hit5SpanSizeRtBackward = [];\n  }\n  function gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount) {\n    gameLogicSchemeResult = {\n      \"game\": \"spatial-span\",\n      \"schemeName\": \"default\",\n      \"version\": 1.0,\n      \"variant\": \"main\",\n      \"parameters\": {\n        \"trialNumber\": {\n          \"value\": trialNumber,\n          \"unit\": null,\n          \"description\": \"Total number of trial in the test\"\n        },\n        \"flashDuration\": {\n          \"value\": flashDuration,\n          \"unit\": \"ms\",\n          \"description\": \"Duration of color flash signal\"\n        },\n        \"flashInterval\": {\n          \"value\": flashInterval,\n          \"unit\": \"ms\",\n          \"description\": \"Duration between the end-to-beginning of signal flash\"\n        },\n        \"initialSpan\": {\n          \"value\": initialSpan,\n          \"unit\": null,\n          \"description\": \"Initial span size at the first trial\"\n        },\n        \"probeNumber\": {\n          \"value\": probeNumber,\n          \"unit\": null,\n          \"description\": \"Number of probe (constant) in test\"\n        },\n        \"probeAngularPosition\": {\n          \"value\": probeAngularPosition,\n          \"unit\": \"degree\",\n          \"description\": \"Probe angular position\"\n        },\n        \"rampingCorrectCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Correct count before increase of sequence size\"\n        },\n        \"maxFailStreakCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Fail count before decrease of sequence size\"\n        },\n        \"maxFailCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Maximum fail count in struggle loop\"\n        }\n      },\n      \"description\": \"Spatial span default scheme\"\n    };\n    return gameLogicSchemeResult;\n  }\n  function createPseudorandomStimuli() {\n    let allSpanSizeRange = [2, 3, 4, 5];\n    let trialsPerSpanSize = 10;\n    let sequenceDirection = 2; // forward and backward\n    let trialsPerDirection = trialsPerSpanSize / sequenceDirection;\n    for (let iSpanSize = 0; iSpanSize < allSpanSizeRange.length; iSpanSize++) {\n      for (let iRep = 0; iRep < trialsPerDirection; iRep++) {\n        for (let iDirection = 0; iDirection < sequenceDirection; iDirection++) {\n          spanSizeAndDirection.push([allSpanSizeRange[iSpanSize], iDirection]);\n        }\n      }\n    }\n    shuffleWithCondition();\n    trialNumber = trialsPerSpanSize * allSpanSizeRange.length;\n  }\n  function shuffleWithCondition() {\n    // condition: prevent repetition 4 times in the row in every modes\n    let conditionUnsatisfied = true;\n\n    // this while loop will be continue till the conditionUnsatisfied turns to false\n    while (conditionUnsatisfied) {\n      let allDirection = [];\n      let reShuffle = false;\n      Shuffle(spanSizeAndDirection);\n      for (let i = 0; i < spanSizeAndDirection.length; i++) {\n        // push only direction mode into allDirection array\n        allDirection.push(spanSizeAndDirection[i][1]);\n\n        // check this array for mode value(0 or 1) 4 times repetition in the row \n        if (allDirection[i] === allDirection[i - 1] && allDirection[i] === allDirection[i - 2] && allDirection[i] === allDirection[i - 3]) {\n          // when the loop found 4 times repetition, change the reShuffle = true\n          reShuffle = true;\n        }\n      }\n\n      // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n      if (reShuffle === false) {\n        // change conditionUnsatisfied = false to end the while loop\n        conditionUnsatisfied = false;\n      }\n    }\n  }\n  function colorGenerator() {\n    if (parseInt(props.userId) % 2 == 0) {\n      // check if userId was even or odd number\n      // even number section\n      if (spanSizeAndDirection[currTrial][1] === 0) {\n        // forward : blue\n        document.documentElement.style.setProperty('--cue-color', '#0072ff');\n        document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n      } else {\n        // backward : orange\n        document.documentElement.style.setProperty('--cue-color', '#fc9036');\n        document.documentElement.style.setProperty('--cue-border-color', '#fc9036');\n        // backward : yellow\n        document.documentElement.style.setProperty('--cue-color', '#ffc837');\n        document.documentElement.style.setProperty('--cue-border-color', '#ffc837');\n      }\n    } else {\n      // odd number section\n      if (spanSizeAndDirection[currTrial][1] === 0) {\n        // forward : orange\n        document.documentElement.style.setProperty('--cue-color', '#fc9036');\n        document.documentElement.style.setProperty('--cue-border-color', '#fc9036');\n        // forward : yellow\n        document.documentElement.style.setProperty('--cue-color', '#ffc837');\n        document.documentElement.style.setProperty('--cue-border-color', '#ffc837');\n      } else {\n        // backward : blue\n        document.documentElement.style.setProperty('--cue-color', '#0072ff');\n        document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n      }\n      cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\n      cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\n    }\n  }\n  function seqGenerator() {\n    if (currTrial !== trialNumber) {\n      allSpan.push(spanSizeAndDirection[currTrial][0]);\n      if (genSeq.length === 0) {\n        let trialSeqGenerator = samplingFromList(allProbe, spanSizeAndDirection[currTrial][0], false);\n        genSeq = trialSeqGenerator;\n        if (spanSizeAndDirection[currTrial][1] === 0) {\n          directionMode.push('forward');\n        } else {\n          directionMode.push('backward');\n        }\n        timeIntervalPerTrial();\n      }\n    }\n  }\n  function timeIntervalPerTrial() {\n    $('.cirButton').addClass('hoverDisabled');\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"3\");\n    }, 100));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"2\");\n    }, 400));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"1\");\n    }, 700));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      if (spanSizeAndDirection[currTrial][1] === 0) {\n        $('#goSignal').html(\"ตามลำดับ\");\n      } else {\n        $('#goSignal').html(\"ย้อนกลับ\");\n      }\n      colorGenerator();\n    }, 1000));\n    timeoutList.push(setTimeout(function () {\n      popCircleButton();\n    }, 2000));\n  }\n  function popCircleButton() {\n    let popTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : flashDuration;\n    let intervalTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : flashInterval;\n    let locationPop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : allSeq;\n    isTest = false;\n    currAns = [];\n    cueStartTime = [];\n    cueEndTime = [];\n    answerTimePerTrial = [];\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"ตาคุณ\");\n      startTime = timeStart();\n      $('.cirButton').removeClass('hoverDisabled');\n      $('.cirButton').addClass('readyToClick');\n      isTest = true;\n    }, spanSizeAndDirection[currTrial][0] * (popTime / 5 + intervalTime)));\n    for (let i = 0; i < spanSizeAndDirection[currTrial][0]; i++) {\n      if (genSeq[i] === 1) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton1').addClass('pop');\n          currSeq.push(1);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton1').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 2) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton2').addClass('pop');\n          currSeq.push(2);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton2').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 3) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton3').addClass('pop');\n          currSeq.push(3);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton3').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 4) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton4').addClass('pop');\n          currSeq.push(4);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton4').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 5) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton5').addClass('pop');\n          currSeq.push(5);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton5').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 6) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton6').addClass('pop');\n          currSeq.push(6);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton6').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n    }\n    allSeq.push(genSeq.toString());\n  }\n  function runIsOver() {\n    timeoutList.push(setTimeout(function () {\n      let currTrialStruct = {\n        allSeq: allSeq,\n        allAns: allAns,\n        allSpan: allSpan,\n        checkAns: checkAns,\n        allReactionTime: allReactionTime,\n        allReactionTrial: allReactionTrial\n      };\n      trialStruct.push(currTrialStruct);\n      Done();\n    }));\n  }\n  function Done() {\n    setIsItDone(true);\n    let end = endTime();\n    score = Math.round(sumScores);\n    trialDataResult = trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode);\n    scoringDataResult = scoringData(trialNumber, spanMultiplier, score);\n    metricDataResult = metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount);\n    postEntryResult = postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/spatial_span', postEntryResult).then(function (postEntryResult) {\n      console.log(postEntryResult);\n    }).catch(function (error) {\n      console.log('error');\n    });\n    saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_spatialspan_hard_session${props.userSession}_${thisTime().toString()}`);\n  }\n  function cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime) {\n    let obj_in_trial = [];\n    for (let i = 0; i < currSeq.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"probeID\": currSeq[i],\n        \"color\": cueColor,\n        \"borderColor\": cueBorderColor,\n        \"cueStart\": cueStartTime[i],\n        \"cueEnd\": cueEndTime[i],\n        \"cueDescription\": 'color flash signal that randomly appear'\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    cueDataResult.push(obj_in_trial);\n    return cueDataResult;\n  }\n  function probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition) {\n    let obj_in_trial = [];\n    for (let i = 0; i < probeNumber; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"probeID\": allProbe[i],\n        \"restColor\": restColor,\n        \"borderColor\": restBorderColor,\n        \"shape\": probeShape,\n        \"shapeParams\": [{\n          \"parameterName\": probeParams,\n          \"value\": radius,\n          \"unit\": 'px'\n        }],\n        \"angularPosition\": probeAngularPosition[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    probeDataResult.push(obj_in_trial);\n    return probeDataResult;\n  }\n  function answerData(currAns, answerTimePerTrial) {\n    let obj_in_trial = [];\n    for (let i = 0; i < currAns.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"answer\": currAns[i],\n        \"timestamp\": answerTimePerTrial[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    answerDataResult.push(obj_in_trial);\n    return answerDataResult;\n  }\n  function trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode) {\n    for (let i = 0; i < trialNumber; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"spanSize\": spanSizeAndDirection[i][0],\n        \"cueData\": cueDataResult[i],\n        \"probeData\": probeDataResult[i],\n        \"answerData\": answerDataResult[i],\n        \"mode\": directionMode[i]\n      };\n      trialDataResult.push(obj_to_append);\n    }\n    return trialDataResult;\n  }\n  function scoringData(trialNumber, spanMultiplier, score) {\n    scoringDataResult = [{\n      \"scoringModel\": {\n        \"scoringName\": \"default\",\n        \"parameters\": {\n          \"trialNumber\": {\n            \"value\": trialNumber,\n            \"unit\": null,\n            \"description\": \"Total number of trial in the test\"\n          },\n          \"spanMultiplier\": {\n            \"value\": spanMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for size of span\"\n          }\n        },\n        \"description\": `score = sum of the scorePerTrial (allSpan[i] * spanMultiplier)`\n      },\n      \"score\": score\n    }];\n    return scoringDataResult;\n  }\n  function metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount) {\n    spanInCorrectAns.sort((a, b) => a - b);\n    let metricName = ['correctCount', 'incorrectCount', 'struggleTimeCount', 'highestSpan', 'averageHitReactionTime', 'hitAccuracyForward2SS', 'avgHitReactionTimeForward2SS', 'hitAccuracyForward3SS', 'avgHitReactionTimeForward3SS', 'hitAccuracyForward4SS', 'avgHitReactionTimeForward4SS', 'hitAccuracyForward5SS', 'avgHitReactionTimeForward5SS', 'hitAccuracyBackward2SS', 'avgHitReactionTimeBackward2SS', 'hitAccuracyBackward3SS', 'avgHitReactionTimeBackward3SS', 'hitAccuracyBackward4SS', 'avgHitReactionTimeBackward4SS', 'hitAccuracyBackward5SS', 'avgHitReactionTimeBackward5SS'];\n    let metricValue = [summaryCorrect, trialNumber - summaryCorrect, null, spanInCorrectAns[spanInCorrectAns.length - 1], avgHitRt, hitAccuracy2SpanSizeForward, avgHit2SpanSizeRtForward, hitAccuracy3SpanSizeForward, avgHit3SpanSizeRtForward, hitAccuracy4SpanSizeForward, avgHit4SpanSizeRtForward, hitAccuracy5SpanSizeForward, avgHit5SpanSizeRtForward, hitAccuracy2SpanSizeBackward, avgHit2SpanSizeRtBackward, hitAccuracy3SpanSizeBackward, avgHit3SpanSizeRtBackward, hitAccuracy4SpanSizeBackward, avgHit4SpanSizeRtBackward, hitAccuracy5SpanSizeBackward, avgHit5SpanSizeRtBackward];\n    let metricUnit = [null, null, null, null, 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's'];\n    let metricDescription = ['Total number of correct trials', 'Total number of incorrect trials', 'Total number of entered struggle loop', 'The highest span that user reached', 'The average of all hit reaction time', 'The accuracy of 2 span size hit in forward mode', 'The average reaction time of all 2 span size hit in forward mode', 'The accuracy of 3 span size hit in forward mode', 'The average reaction time of all 3 span size hit in forward mode', 'The accuracy of 4 span size hit in forward mode', 'The average reaction time of all 4 span size hit in forward mode', 'The accuracy of 5 span size hit in forward mode', 'The average reaction time of all 5 span size hit in forward mode', 'The accuracy of 2 span size hit in backward mode', 'The average reaction time of all 2 span size hit in backward mode', 'The accuracy of 3 span size hit in backward mode', 'The average reaction time of all 3 span size hit in backward mode', 'The accuracy of 4 span size hit in backward mode', 'The average reaction time of all 4 span size hit in backward mode', 'The accuracy of 5 span size hit in backward mode', 'The average reaction time of all 5 span size hit in backward mode'];\n    for (let i = 0; i < metricName.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"metricName\": metricName[i],\n        \"value\": metricValue[i],\n        \"unit\": metricUnit[i],\n        \"description\": metricDescription[i]\n      };\n      metricDataResult.push(obj_to_append);\n    }\n    return metricDataResult;\n  }\n  function postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult) {\n    postEntryResult = {\n      \"date\": `${thisTime().toString()}`,\n      \"userId\": props.userId,\n      \"userPhone\": props.userPhone,\n      \"userSession\": props.userSession,\n      \"data\": {\n        \"rawData\": {\n          \"trialData\": trialDataResult,\n          \"description\": 'all important data per trial'\n        },\n        \"gameLogicScheme\": gameLogicSchemeResult,\n        \"scoringData\": scoringDataResult,\n        \"metricData\": metricDataResult\n      }\n    };\n    return postEntryResult;\n  }\n  function summarySpanSize() {\n    let sumHit2SpanSizeRtForward;\n    let sumHit3SpanSizeRtForward;\n    let sumHit4SpanSizeRtForward;\n    let sumHit5SpanSizeRtForward;\n    let sumHit2SpanSizeRtBackward;\n    let sumHit3SpanSizeRtBackward;\n    let sumHit4SpanSizeRtBackward;\n    let sumHit5SpanSizeRtBackward;\n    let forwardOrBackwardCondition = 2; // forward or backward\n    let spanSizeCondition = 4; // [2, 3, 4, 5] span size\n    let trialNumberPerCondition = spanSizeAndDirection.length / (forwardOrBackwardCondition * spanSizeCondition);\n\n    // forward section\n    // 2 span size section\n    hitAccuracy2SpanSizeForward = hit2SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit2SpanSizeRtForward.length !== 0) {\n      sumHit2SpanSizeRtForward = hit2SpanSizeRtForward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit2SpanSizeRtForward.push(0);\n      sumHit2SpanSizeRtForward = hit2SpanSizeRtForward;\n    }\n    avgHit2SpanSizeRtForward = sumHit2SpanSizeRtForward / 1000 / hit2SpanSizeRtForward.length;\n\n    // 3 span size section\n    hitAccuracy3SpanSizeForward = hit3SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit3SpanSizeRtForward.length !== 0) {\n      sumHit3SpanSizeRtForward = hit3SpanSizeRtForward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit3SpanSizeRtForward.push(0);\n      sumHit3SpanSizeRtForward = hit3SpanSizeRtForward;\n    }\n    avgHit3SpanSizeRtForward = sumHit3SpanSizeRtForward / 1000 / hit3SpanSizeRtForward.length;\n\n    // 4 span size section\n    hitAccuracy4SpanSizeForward = hit4SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit4SpanSizeRtForward.length !== 0) {\n      sumHit4SpanSizeRtForward = hit4SpanSizeRtForward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit4SpanSizeRtForward.push(0);\n      sumHit4SpanSizeRtForward = hit4SpanSizeRtForward;\n    }\n    avgHit4SpanSizeRtForward = sumHit4SpanSizeRtForward / 1000 / hit4SpanSizeRtForward.length;\n\n    // 5 span size section\n    hitAccuracy5SpanSizeForward = hit5SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit5SpanSizeRtForward.length !== 0) {\n      sumHit5SpanSizeRtForward = hit5SpanSizeRtForward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit5SpanSizeRtForward.push(0);\n      sumHit5SpanSizeRtForward = hit5SpanSizeRtForward;\n    }\n    avgHit5SpanSizeRtForward = sumHit5SpanSizeRtForward / 1000 / hit5SpanSizeRtForward.length;\n\n    // backward section\n    // 2 span size section\n    hitAccuracy2SpanSizeBackward = hit2SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit2SpanSizeRtBackward.length !== 0) {\n      sumHit2SpanSizeRtBackward = hit2SpanSizeRtBackward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit2SpanSizeRtBackward.push(0);\n      sumHit2SpanSizeRtBackward = hit2SpanSizeRtBackward;\n    }\n    avgHit2SpanSizeRtBackward = sumHit2SpanSizeRtBackward / 1000 / hit2SpanSizeRtBackward.length;\n\n    // 3 span size section\n    hitAccuracy3SpanSizeBackward = hit3SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit3SpanSizeRtBackward.length !== 0) {\n      sumHit3SpanSizeRtBackward = hit3SpanSizeRtBackward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit3SpanSizeRtBackward.push(0);\n      sumHit3SpanSizeRtBackward = hit3SpanSizeRtBackward;\n    }\n    avgHit3SpanSizeRtBackward = sumHit3SpanSizeRtBackward / 1000 / hit3SpanSizeRtBackward.length;\n\n    // 4 span size section\n    hitAccuracy4SpanSizeBackward = hit4SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit4SpanSizeRtBackward.length !== 0) {\n      sumHit4SpanSizeRtBackward = hit4SpanSizeRtBackward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit4SpanSizeRtBackward.push(0);\n      sumHit4SpanSizeRtBackward = hit4SpanSizeRtBackward;\n    }\n    avgHit4SpanSizeRtBackward = sumHit4SpanSizeRtBackward / 1000 / hit4SpanSizeRtBackward.length;\n\n    // 5 span size section\n    hitAccuracy5SpanSizeBackward = hit5SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit5SpanSizeRtBackward.length !== 0) {\n      sumHit5SpanSizeRtBackward = hit5SpanSizeRtBackward.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hit5SpanSizeRtBackward.push(0);\n      sumHit5SpanSizeRtBackward = hit5SpanSizeRtBackward;\n    }\n    avgHit5SpanSizeRtBackward = sumHit5SpanSizeRtBackward / 1000 / hit5SpanSizeRtBackward.length;\n  }\n  function summaryScore() {\n    for (let correctIndex = latestIndex; correctIndex < checkAns.length; correctIndex++) {\n      latestIndex = correctIndex;\n      if (checkAns[correctIndex] === 1) {\n        scorePerTrial.push(allSpan[correctIndex] * spanMultiplier);\n        summaryCorrect++;\n        spanInCorrectAns.push(allSpan[correctIndex]);\n      }\n    }\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, time) => {\n        return sum + time;\n      });\n    } else {\n      hitRt.push(0);\n      sumHitRt = hitRt;\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, time) => {\n        return sum + time;\n      });\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (scorePerTrial.length !== 0) {\n      sumScores = scorePerTrial.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      scorePerTrial.push(0);\n    }\n    return sumScores;\n  }\n  function timeStart() {\n    let startTime = new Date();\n    return startTime.getTime();\n  }\n  function refreshPage() {\n    window.location.reload();\n  }\n  function backToLandingPage() {\n    navigate('/landing');\n    refreshPage();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(BreadCrumb, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"SSGameBody\",\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameBodyProgressBar\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            progressValue: progressValue,\n            trialNumber: trialNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameWindow\",\n          children: /*#__PURE__*/_jsxDEV(SSWindow, {\n            checkSeq: checkSeq\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameEnterButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 9\n    }, this), isItDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ScoreSummaryOverlay, {\n        accuracy: summaryCorrect / trialNumber * 100,\n        avgHitRt: avgHitRt,\n        refreshPage: refreshPage,\n        backToLandingPage: backToLandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(RotateAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1154,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1134,\n    columnNumber: 5\n  }, this);\n}\n_s(SSGame, \"6/IlpRsWre1q5vpZScfshLUD+ns=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = SSGame;\nexport default SSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"SSGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","BreadCrumb","SSWindow","ProgressBar","ScoreSummaryOverlay","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","$","moment","RotateAlert","Shuffle","saveJSONDataToClientDevice","samplingFromList","axios","jsxDEV","_jsxDEV","progressBarElement","flashDuration","flashInterval","initialSpan","probeNumber","allProbe","probeAngularPosition","probeShape","probeParams","radius","getComputedStyle","document","documentElement","getPropertyValue","cueColor","trim","cueBorderColor","restColor","restBorderColor","rampingCorrectCount","maxFailStreakCount","maxFailCount","trialNumber","currSpan","currTrial","allSpan","spanSizeAndDirection","spanInCorrectAns","allSeq","genSeq","currSeq","allAns","currAns","correctCount","failCount","failStreakCount","checkAns","enterStruggleTimeCount","struggleTime","isTest","allReactionTime","reactionTime","allReactionTrial","answerTimePerTrial","latestRtIndex","hitRt","sumHitRt","avgHitRt","hit2SpanSizeRtForward","hit3SpanSizeRtForward","hit4SpanSizeRtForward","hit5SpanSizeRtForward","hit2SpanSizeRtBackward","hit3SpanSizeRtBackward","hit4SpanSizeRtBackward","hit5SpanSizeRtBackward","avgHit2SpanSizeRtForward","avgHit3SpanSizeRtForward","avgHit4SpanSizeRtForward","avgHit5SpanSizeRtForward","avgHit2SpanSizeRtBackward","avgHit3SpanSizeRtBackward","avgHit4SpanSizeRtBackward","avgHit5SpanSizeRtBackward","hitAccuracy2SpanSizeForward","hitAccuracy3SpanSizeForward","hitAccuracy4SpanSizeForward","hitAccuracy5SpanSizeForward","hitAccuracy2SpanSizeBackward","hitAccuracy3SpanSizeBackward","hitAccuracy4SpanSizeBackward","hitAccuracy5SpanSizeBackward","latestIndex","scorePerTrial","spanMultiplier","summaryCorrect","sumScores","score","trialStruct","cueStartTime","cueEndTime","startTime","timeoutList","cueDataResult","probeDataResult","answerDataResult","trialDataResult","gameLogicSchemeResult","scoringDataResult","metricDataResult","directionMode","postEntryResult","SSGame","props","_s","navigate","inputRef","clickSound","combo2Sound","losingSound","progressValue","setProgressValue","isItDone","setIsItDone","initiateData","createPseudorandomStimuli","gameLogicScheme","getElementById","seqGenerator","forEach","tm","clearTimeout","current","focus","checkSeq","event","end","endTime","push","thisTime","currentTarget","classList","contains","addClass","setTimeout","removeClass","length","cueData","probeData","answerData","html","toString","equalCheck","every","value","index","reverse","checkHitSpanSize","lastReaction","summarySpanSize","summaryScore","runIsOver","reactionTimePerClick","clickIndex","currClick","nextClick","undefined","avgTrialReactionTime","reduce","sum","time","allSpanSizeRange","trialsPerSpanSize","sequenceDirection","trialsPerDirection","iSpanSize","iRep","iDirection","shuffleWithCondition","conditionUnsatisfied","allDirection","reShuffle","i","colorGenerator","parseInt","userId","style","setProperty","trialSeqGenerator","timeIntervalPerTrial","popCircleButton","popTime","arguments","intervalTime","locationPop","timeStart","currTrialStruct","Done","Math","round","trialData","scoringData","metricData","postEntry","post","then","console","log","catch","error","userSession","obj_in_trial","obj_to_append","sort","a","b","metricName","metricValue","metricUnit","metricDescription","userPhone","sumHit2SpanSizeRtForward","sumHit3SpanSizeRtForward","sumHit4SpanSizeRtForward","sumHit5SpanSizeRtForward","sumHit2SpanSizeRtBackward","sumHit3SpanSizeRtBackward","sumHit4SpanSizeRtBackward","sumHit5SpanSizeRtBackward","forwardOrBackwardCondition","spanSizeCondition","trialNumberPerCondition","correctIndex","Date","getTime","refreshPage","window","location","reload","backToLandingPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","accuracy","_c","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/ssGame/SSGame.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport SSWindow from '../../../components/gameWindow/ssWindow/SSWindow';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3'\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport { saveDataToClientDevice, saveDataToIndexedDB, saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport { samplingFromList } from '../../../uitls/main';\nimport axios from 'axios';\n\nlet progressBarElement: HTMLProgressElement;\n\n//Test parameters\nconst flashDuration: number = 250;\nconst flashInterval: number = 750;\nconst initialSpan: number = 2;\nconst probeNumber: number = 6;\nconst allProbe: number[] = [1,2,3,4,5,6];\nconst probeAngularPosition: number[] = [45, 90, 135, 225, 270, 315];\nconst probeShape: string = 'circle';\nconst probeParams: string = 'radius'; \nconst radius: string = (getComputedStyle(document.documentElement).getPropertyValue('--cir-base-unit') + \" / 2 \" );\nlet cueColor: string = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\nlet cueBorderColor: string = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\nconst restColor: string = getComputedStyle(document.documentElement).getPropertyValue('--ss-rest-color').trim();\nconst restBorderColor: string = getComputedStyle(document.documentElement).getPropertyValue('--rest-border-color').trim();\nconst rampingCorrectCount: number = 3;\nconst maxFailStreakCount: number = 2;\nconst maxFailCount: number = 1; \n\n// Initaial values\nlet trialNumber;\nlet currSpan = initialSpan;\nlet currTrial: number = 0;\nlet allSpan: number[] = [];\nlet spanSizeAndDirection: number[][] = [];\nlet spanInCorrectAns: any[] = [];\nlet allSeq: string[] = [];\nlet genSeq: number[] = [];\nlet currSeq: number[] = [];\nlet allAns: string[] = [];\nlet currAns: number[] = [];\nlet correctCount: number = 0;\nlet failCount: number = 0;\nlet failStreakCount: number = 0;\nlet checkAns: number[]  = [];\nlet enterStruggleTimeCount: number = 0;\nlet struggleTime: boolean = false;\nlet isTest: boolean = false;\nlet allReactionTime: string[]  = [];\nlet reactionTime: number[] = [];\nlet allReactionTrial: number[] = [];\nlet answerTimePerTrial: any[] = [];\nlet latestRtIndex = 0;\nlet hitRt: number[] = [];\nlet sumHitRt;\nlet avgHitRt;\nlet hit2SpanSizeRtForward: number[] = [];\nlet hit3SpanSizeRtForward: number[] = [];\nlet hit4SpanSizeRtForward: number[] = [];\nlet hit5SpanSizeRtForward: number[] = [];\nlet hit2SpanSizeRtBackward: number[] = [];\nlet hit3SpanSizeRtBackward: number[] = [];\nlet hit4SpanSizeRtBackward: number[] = [];\nlet hit5SpanSizeRtBackward: number[] = [];\nlet avgHit2SpanSizeRtForward;\nlet avgHit3SpanSizeRtForward;\nlet avgHit4SpanSizeRtForward;\nlet avgHit5SpanSizeRtForward;\nlet avgHit2SpanSizeRtBackward;\nlet avgHit3SpanSizeRtBackward;\nlet avgHit4SpanSizeRtBackward;\nlet avgHit5SpanSizeRtBackward;\nlet hitAccuracy2SpanSizeForward;\nlet hitAccuracy3SpanSizeForward;\nlet hitAccuracy4SpanSizeForward;\nlet hitAccuracy5SpanSizeForward;\nlet hitAccuracy2SpanSizeBackward;\nlet hitAccuracy3SpanSizeBackward;\nlet hitAccuracy4SpanSizeBackward;\nlet hitAccuracy5SpanSizeBackward;\nlet latestIndex: number = 0;\nlet scorePerTrial: number[] = [];\nlet spanMultiplier: number = 1000;\nlet summaryCorrect: number = 0;\nlet sumScores: number  = 0;\nlet score: number;\nlet trialStruct: any[] = [];\nlet cueStartTime: any[] = [];\nlet cueEndTime: any[] = [];\nlet startTime : number = 0;\nlet timeoutList: any[] = []; \nlet cueDataResult: any[] = [];\nlet probeDataResult: any[] = [];\nlet answerDataResult: any[] = [];\nlet trialDataResult: any[] = [];\nlet gameLogicSchemeResult: { game: string; schemeName: string; version: number; variant: string; parameters: { trialNumber: { value: any; unit: null; description: string }; flashDuration: { value: any; unit: string; description: string }; flashInterval: { value: any; unit: string; description: string }; initialSpan: { value: any; unit: null; description: string }; probeNumber: { value: any; unit: null; description: string }; probeAngularPosition: { value: any; unit: string; description: string }; rampingCorrectCount: { value: any; unit: null; description: string }; maxFailStreakCount: { value: any; unit: null; description: string }; maxFailCount: { value: any; unit: null; description: string } }; description: string };\nlet scoringDataResult: any[] = [];\nlet metricDataResult: any[] = [];\nlet directionMode: string[] = [];\nlet postEntryResult;\n\nfunction SSGame(props) {\n  const navigate = useNavigate();\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [progressValue, setProgressValue] = useState(0);\n  const [isItDone, setIsItDone] = useState(false);\n\n  useEffect(() => {\n      initiateData();\n      createPseudorandomStimuli();\n      gameLogicSchemeResult = gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount);\n      progressBarElement = document.getElementById(\"progressBar\") as HTMLProgressElement;\n      seqGenerator();\n\n      return () => {\n        timeoutList.forEach(tm => {\n            clearTimeout(tm);\n        })\n      };\n  }, [])\n  \n  useEffect(() => {\n      if (inputRef.current != null) {\n          inputRef.current.focus();\n      }\n  }, []);\n\n  const checkSeq = (event: { currentTarget: { classList: { contains: (arg0: string) => any } } }) => {\n      if (isTest === true) {\n          let end : number = endTime();\n          reactionTime.push(end - startTime);\n          answerTimePerTrial.push(thisTime());\n        //   clickSound();\n      }\n\n      if (event.currentTarget.classList.contains('1')) {\n        currAns.push(1);\n        ($('#cirButton1').addClass('clicked'));\n        ($('#border1').addClass('clicked'));\n        ($('#cirButton1').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton1').removeClass('clicked');\n                $('#border1').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('2')) {\n        currAns.push(2);\n        ($('#cirButton2').addClass('clicked'));\n        ($('#border2').addClass('clicked'));\n        ($('#cirButton2').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton2').removeClass('clicked');\n                $('#border2').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('3')) {\n        currAns.push(3);\n        ($('#cirButton3').addClass('clicked'));\n        ($('#border3').addClass('clicked'));\n        ($('#cirButton3').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton3').removeClass('clicked')\n                $('#border3').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('4')) { \n        currAns.push(4);\n        ($('#cirButton4').addClass('clicked'));\n        ($('#border4').addClass('clicked'));\n        ($('#cirButton4').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton4').removeClass('clicked');\n                $('#border4').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('5')) {\n        currAns.push(5);\n        ($('#cirButton5').addClass('clicked'));\n        ($('#border5').addClass('clicked'));\n        ($('#cirButton5').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton5').removeClass('clicked');\n                $('#border5').removeClass('clicked');\n            }, 150)\n        )\n    } else {\n        currAns.push(6);\n        ($('#cirButton6').addClass('clicked'));\n        ($('#border6').addClass('clicked'));\n        ($('#cirButton6').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton6').removeClass('clicked');\n                $('#border6').removeClass('clicked');\n            }, 150)\n        )\n    }\n\n      if (currAns.length === spanSizeAndDirection[currTrial][0]) {\n          $('.cirButton').removeClass('hoverDisabled'); \n          $('.cirButton').addClass('hoverDisabled'); \n          cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime);\n          probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition);\n          answerData(currAns, answerTimePerTrial);\n          timeoutList.push(\n              setTimeout(function() {\n                  $('.cirButton').removeClass('clicked'); \n              }, 150)\n          )\n\n          $('#goSignal').html(\"\");\n          $('.cirButton').removeClass('readyToClick');\n          allAns.push(currAns.toString());\n          \n          const equalCheck = (currAns: any[], currSeq: string | any[]) => \n              currAns.length === currSeq.length && currAns.every((value, index) => value === currSeq[index]);\n\n            if (spanSizeAndDirection[currTrial][1] === 1){\n                currAns.reverse();\n            } \n\n          if (equalCheck(currAns, currSeq)) {\n              $('#goSignal').html(\"ถูก\");\n              checkHitSpanSize();\n              setProgressValue(progressValue + 1);\n            //   combo2Sound();\n              currSeq = [];\n              genSeq = [];\n              currTrial++;\n              checkAns.push(1);\n              failCount = 0;\n              correctCount++;\n              if (correctCount === rampingCorrectCount) {\n                  currSpan++;\n                  correctCount = 0;\n              }\n\n              if (struggleTime === true) {\n                  struggleTime = false;\n                  enterStruggleTimeCount++;\n                  correctCount = 0;\n                  failStreakCount++;\n                  if (failStreakCount === maxFailStreakCount) {\n                      currSpan--;\n                          if (currSpan < initialSpan) {\n                              currSpan = initialSpan;\n                          }\n                      failStreakCount = 0;\n                  }\n              } else {\n                  failStreakCount = 0;\n              }\n              \n              timeoutList.push(\n                  setTimeout(function() {\n                      seqGenerator();\n                  }, (flashDuration + flashInterval))\n              )\n          } else {\n              $('#goSignal').html(\"ผิด\");\n            //   losingSound();\n              struggleTime = true;\n              currSeq = [];\n              checkAns.push(0);\n              correctCount = 0;\n              failCount++;\n              if (failCount === maxFailCount) {\n                  setProgressValue(progressValue + 1);\n                  currTrial++;\n                  genSeq = [];\n                  failCount = 0;\n                  struggleTime = false;\n                  enterStruggleTimeCount++;\n                  failStreakCount++;\n                  if (failStreakCount === maxFailStreakCount) {\n                      currSpan--;\n                          if (currSpan < initialSpan) {\n                              currSpan = initialSpan;\n                          }\n                      failStreakCount = 0;\n                  }\n              }\n              \n              timeoutList.push(\n                  setTimeout(function() {\n                      seqGenerator();\n                  }, (flashDuration + flashInterval))\n              )\n          }\n          \n          allReactionTime.push(reactionTime.toString());\n          let lastReaction = reactionTime[reactionTime.length - 1];\n          allReactionTrial.push(lastReaction);\n          reactionTime = [];\n      }\n\n      if (currTrial === trialNumber){\n          summarySpanSize();\n          summaryScore();\n          runIsOver();\n      }\n  };\n\n  function checkHitSpanSize() {\n    let reactionTimePerClick: number[] = [];\n    // push in 1st index to the reactionTimePerClick array\n    reactionTimePerClick.push(reactionTime[0]);\n    for (let clickIndex = 0; clickIndex < reactionTime.length; clickIndex++){\n        // currClick = the present time in present index (where we started)\n        let currClick = reactionTime[clickIndex];\n        // nextClick = the next time in next index (the 2nd 3rd and so on clicked)\n        let nextClick;\n        if (clickIndex < reactionTime.length - 1){\n            nextClick = reactionTime[clickIndex + 1];\n        }\n\n        // this condition prevent NaN because there is nothing beyond the last index so it 'undefined'\n        if (nextClick !== undefined){ // push every time that nextClick !== undefined\n            reactionTimePerClick.push(nextClick - currClick);\n        }\n    }\n    let avgTrialReactionTime = reactionTimePerClick.reduce((sum, time) => {return sum + time}) / reactionTimePerClick.length;\n    hitRt.push(avgTrialReactionTime);\n    // check if forward or backward mode \n    if (spanSizeAndDirection[currTrial][1] === 0){\n        // forward\n        // check span size \n        if (spanSizeAndDirection[currTrial][0] === 2){\n            hit2SpanSizeRtForward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 3){\n            hit3SpanSizeRtForward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 4){\n            hit4SpanSizeRtForward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 5){\n            hit5SpanSizeRtForward.push(avgTrialReactionTime);\n        }\n    } else {\n        // backward\n        // check span size \n        if (spanSizeAndDirection[currTrial][0] === 2){\n            hit2SpanSizeRtBackward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 3){\n            hit3SpanSizeRtBackward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 4){\n            hit4SpanSizeRtBackward.push(avgTrialReactionTime);\n        } else if (spanSizeAndDirection[currTrial][0] === 5){\n            hit5SpanSizeRtBackward.push(avgTrialReactionTime);\n        }\n    }\n  }\n\n  function initiateData() {\n      allSpan = []; \n      allSeq = [];\n      genSeq = [];\n      currSeq = [];\n      allAns = [];\n      currAns = [];\n      correctCount = 0;\n      failCount = 0;\n      checkAns = [];\n      struggleTime = false;\n      isTest = false; \n      allReactionTime = [];\n      reactionTime = [];\n      allReactionTrial = [];\n      latestIndex = 0;\n      scorePerTrial = [];\n      summaryCorrect = 0;\n      sumScores = 0;\n      currTrial = 0;\n      hit2SpanSizeRtForward = [];\n      hit3SpanSizeRtForward = [];\n      hit4SpanSizeRtForward = [];\n      hit5SpanSizeRtForward = [];\n      hit2SpanSizeRtBackward = [];\n      hit3SpanSizeRtBackward = [];\n      hit4SpanSizeRtBackward = [];\n      hit5SpanSizeRtBackward = [];\n  }\n\n    function gameLogicScheme(trialNumber: number, flashDuration: number, flashInterval: number, initialSpan: number, probeNumber: number, probeAngularPosition: number[], rampingCorrectCount: number, maxFailStreakCount: number, maxFailCount: number) {\n      gameLogicSchemeResult = {\n          \"game\": \"spatial-span\",\n          \"schemeName\" : \"default\",\n          \"version\" : 1.0,\n          \"variant\": \"main\",\n          \"parameters\" : {\n              \"trialNumber\": {\n                  \"value\": trialNumber,\n                  \"unit\": null,\n                  \"description\": \"Total number of trial in the test\"\n              },\n              \"flashDuration\": {\n                  \"value\": flashDuration,\n                  \"unit\": \"ms\",\n                  \"description\": \"Duration of color flash signal\"\n              },\n              \"flashInterval\" : {\n                  \"value\": flashInterval,\n                  \"unit\": \"ms\",\n                  \"description\" : \"Duration between the end-to-beginning of signal flash\"\n              },\n              \"initialSpan\": {\n                  \"value\": initialSpan,\n                  \"unit\": null,\n                  \"description\": \"Initial span size at the first trial\"\n              },\n              \"probeNumber\" : {\n                  \"value\" : probeNumber,\n                  \"unit\" : null,\n                  \"description\" : \"Number of probe (constant) in test\"\n              },\n              \"probeAngularPosition\" : {\n                  \"value\" : probeAngularPosition,\n                  \"unit\" : \"degree\",\n                  \"description\" : \"Probe angular position\"\n              },\n              \"rampingCorrectCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Correct count before increase of sequence size\"\n              },\n              \"maxFailStreakCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Fail count before decrease of sequence size\"\n              },\n              \"maxFailCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Maximum fail count in struggle loop\"\n              }\n          },\n          \"description\": \"Spatial span default scheme\"\n      }\n      return gameLogicSchemeResult;\n  }\n\n  function createPseudorandomStimuli() {\n    let allSpanSizeRange = [2, 3, 4, 5];\n    let trialsPerSpanSize = 10;  \n    let sequenceDirection = 2; // forward and backward\n    let trialsPerDirection = trialsPerSpanSize / sequenceDirection; \n\n    for (let iSpanSize = 0; iSpanSize < allSpanSizeRange.length; iSpanSize++) {\n        for (let iRep = 0; iRep < trialsPerDirection; iRep++) {\n            for (let iDirection = 0; iDirection < sequenceDirection; iDirection++) {\n                spanSizeAndDirection.push([allSpanSizeRange[iSpanSize],iDirection]);\n            }\n        }\n    }\n    shuffleWithCondition();\n    trialNumber = trialsPerSpanSize * allSpanSizeRange.length;\n    }\n\n    function shuffleWithCondition() { \n        // condition: prevent repetition 4 times in the row in every modes\n        let conditionUnsatisfied: boolean = true;\n        \n        // this while loop will be continue till the conditionUnsatisfied turns to false\n        while (conditionUnsatisfied) { \n            let allDirection: number[] = [];\n            let reShuffle: boolean = false;\n            Shuffle(spanSizeAndDirection); \n\n            for (let i = 0; i < spanSizeAndDirection.length; i++){\n                // push only direction mode into allDirection array\n                allDirection.push(spanSizeAndDirection[i][1]); \n                        \n                // check this array for mode value(0 or 1) 4 times repetition in the row \n                if (allDirection[i] === allDirection[i - 1] && \n                    allDirection[i] === allDirection[i - 2] && \n                    allDirection[i] === allDirection[i - 3]){\n                    // when the loop found 4 times repetition, change the reShuffle = true\n                    reShuffle = true;\n                } \n            }\n            \n            // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n            if (reShuffle === false) {\n                // change conditionUnsatisfied = false to end the while loop\n                conditionUnsatisfied = false;\n            }\n        }\n    }\n\n  function colorGenerator() {\n    if (parseInt(props.userId) % 2 == 0){ // check if userId was even or odd number\n            // even number section\n            if (spanSizeAndDirection[currTrial][1] === 0){\n                // forward : blue\n                document.documentElement.style.setProperty('--cue-color', '#0072ff'); \n                document.documentElement.style.setProperty('--cue-border-color', '#0072ff'); \n            } else {\n                // backward : orange\n                document.documentElement.style.setProperty('--cue-color', '#fc9036'); \n                document.documentElement.style.setProperty('--cue-border-color', '#fc9036'); \n                // backward : yellow\n                document.documentElement.style.setProperty('--cue-color', '#ffc837'); \n                document.documentElement.style.setProperty('--cue-border-color', '#ffc837'); \n            }\n        } else {\n            // odd number section\n            if (spanSizeAndDirection[currTrial][1] === 0){\n                // forward : orange\n                document.documentElement.style.setProperty('--cue-color', '#fc9036'); \n                document.documentElement.style.setProperty('--cue-border-color', '#fc9036'); \n                // forward : yellow\n                document.documentElement.style.setProperty('--cue-color', '#ffc837'); \n                document.documentElement.style.setProperty('--cue-border-color', '#ffc837'); \n            } else {\n                // backward : blue\n                document.documentElement.style.setProperty('--cue-color', '#0072ff'); \n                document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n            }\n            cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\n            cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\n        }\n    } \n\n    function seqGenerator() {\n        if (currTrial !== trialNumber) {\n            allSpan.push(spanSizeAndDirection[currTrial][0]);\n            if (genSeq.length === 0) {\n                let trialSeqGenerator: number[] = samplingFromList(allProbe, spanSizeAndDirection[currTrial][0], false);\n                genSeq = trialSeqGenerator;\n                \n                if (spanSizeAndDirection[currTrial][1] === 0){\n                    directionMode.push('forward');\n                } else {\n                    directionMode.push('backward');\n                }\n\n                timeIntervalPerTrial();\n            }\n        } \n    }\n\n  function timeIntervalPerTrial() {\n    $('.cirButton').addClass('hoverDisabled');\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"3\");\n        }, 100) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"2\");\n        }, 400)\n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"1\");\n        }, 700) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            if (spanSizeAndDirection[currTrial][1] === 0){\n                $('#goSignal').html(\"ตามลำดับ\");\n            } else {\n                $('#goSignal').html(\"ย้อนกลับ\");\n            }\n            colorGenerator();\n        }, 1000) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            popCircleButton();\n        }, 2000) \n    )\n}\n  \n  function popCircleButton(popTime = flashDuration, intervalTime = flashInterval, locationPop = allSeq) {\n      isTest = false;\n      currAns = [];\n      cueStartTime = [];\n      cueEndTime = [];\n      answerTimePerTrial = [];\n      \n      timeoutList.push(\n          setTimeout(function () {\n              $('#goSignal').html(\"\");\n              $('#goSignal').html(\"ตาคุณ\");\n              startTime = timeStart();\n              $('.cirButton').removeClass('hoverDisabled');\n              $('.cirButton').addClass('readyToClick');\n              isTest = true;\n          }, spanSizeAndDirection[currTrial][0] * ((popTime/5) + (intervalTime))) \n      )\n  \n      for (let i = 0; i < spanSizeAndDirection[currTrial][0]; i++) {\n          if (genSeq[i] === 1) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton1').addClass('pop');\n                      currSeq.push(1);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton1').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 2) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton2').addClass('pop');\n                      currSeq.push(2);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton2').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 3) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton3').addClass('pop');\n                      currSeq.push(3);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton3').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 4) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton4').addClass('pop');\n                      currSeq.push(4);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton4').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 5) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton5').addClass('pop');\n                      currSeq.push(5); \n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton5').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 6) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton6').addClass('pop');\n                      currSeq.push(6);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton6').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          } \n      }\n      allSeq.push(genSeq.toString());\n  }\n\n  function runIsOver() {\n      timeoutList.push(\n          setTimeout(function () {\n              let currTrialStruct = {\n                  allSeq: allSeq,\n                  allAns: allAns,\n                  allSpan: allSpan,\n                  checkAns: checkAns,\n                  allReactionTime: allReactionTime,\n                  allReactionTrial: allReactionTrial,\n              }\n              trialStruct.push(currTrialStruct);\n              Done();\n          }, )\n      )\n  }\n\n  function Done() {\n      setIsItDone(true);\n      let end = endTime();\n      score = Math.round(sumScores);\n      trialDataResult = trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode);\n      scoringDataResult = scoringData(trialNumber, spanMultiplier, score);\n      metricDataResult = metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount);\n      postEntryResult = postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n      axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/spatial_span', postEntryResult)\n            .then(function (postEntryResult) {\n                console.log(postEntryResult)\n            })\n            .catch(function (error) {\n                console.log('error')\n            });\n      saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_spatialspan_hard_session${props.userSession}_${thisTime().toString()}`);\n  }\n\n  function cueData(currSeq: string | any[], cueColor: string, cueBorderColor: string, cueStartTime: any[], cueEndTime: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < currSeq.length; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"probeID\" : currSeq[i],\n              \"color\" : cueColor,\n              \"borderColor\" : cueBorderColor,\n              \"cueStart\" : cueStartTime[i],\n              \"cueEnd\" : cueEndTime[i],\n              \"cueDescription\" : 'color flash signal that randomly appear'\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      cueDataResult.push(obj_in_trial);\n      return cueDataResult;\n  }\n\n  function probeData(probeNumber: number, allProbe: any[], restColor: string, restBorderColor: string, probeShape: string, probeParams: string, radius: string, probeAngularPosition: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < probeNumber; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"probeID\" : allProbe[i],\n              \"restColor\" : restColor,\n              \"borderColor\" : restBorderColor,\n              \"shape\" : probeShape,\n              \"shapeParams\" : [{\n                  \"parameterName\" : probeParams,\n                  \"value\" : radius,\n                  \"unit\" : 'px'\n              }],\n              \"angularPosition\" : probeAngularPosition[i]\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      probeDataResult.push(obj_in_trial);\n      return probeDataResult;\n  }\n\n  function answerData(currAns: string | any[], answerTimePerTrial: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < currAns.length; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"answer\" : currAns[i],\n              \"timestamp\" : answerTimePerTrial[i]\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      answerDataResult.push(obj_in_trial);\n      return answerDataResult;\n  }\n\n  function trialData(spanSizeAndDirection: number[][], cueDataResult: any[], probeDataResult: any[], answerDataResult: any[], directionMode: string[]){\n      \n      for (let i = 0; i < trialNumber; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"spanSize\" : spanSizeAndDirection[i][0],\n              \"cueData\" : cueDataResult[i],\n              \"probeData\" : probeDataResult[i],\n              \"answerData\" : answerDataResult[i],\n              \"mode\" : directionMode[i]\n          }\n          trialDataResult.push(obj_to_append);\n      }\n      return trialDataResult;\n  }\n\n  function scoringData(trialNumber: number, spanMultiplier: number, score: number){\n      scoringDataResult = [{\n          \"scoringModel\" : {\n              \"scoringName\" : \"default\",\n              \"parameters\" : {\n                  \"trialNumber\" : {\n                      \"value\" : trialNumber,\n                      \"unit\" : null,\n                      \"description\" : \"Total number of trial in the test\"\n                  },\n                  \"spanMultiplier\" : {\n                      \"value\" : spanMultiplier,\n                      \"unit\" : null,\n                      \"description\" : \"Multiplier for size of span\"\n                  }\n\n              },\n              \"description\" : `score = sum of the scorePerTrial (allSpan[i] * spanMultiplier)`\n          },\n          \"score\" : score\n      }]\n      return scoringDataResult;\n  }\n\n  function metricData(trialNumber: number, summaryCorrect: number, spanInCorrectAns: any[], enterStruggleTimeCount: number){\n      spanInCorrectAns.sort((a,b) => a-b);\n      let metricName \n          = ['correctCount', \n              'incorrectCount', \n              'struggleTimeCount', \n              'highestSpan',\n              'averageHitReactionTime',\n              'hitAccuracyForward2SS',\n              'avgHitReactionTimeForward2SS',\n              'hitAccuracyForward3SS',\n              'avgHitReactionTimeForward3SS',\n              'hitAccuracyForward4SS',\n              'avgHitReactionTimeForward4SS',\n              'hitAccuracyForward5SS',\n              'avgHitReactionTimeForward5SS',\n              'hitAccuracyBackward2SS',\n              'avgHitReactionTimeBackward2SS',\n              'hitAccuracyBackward3SS',\n              'avgHitReactionTimeBackward3SS',\n              'hitAccuracyBackward4SS',\n              'avgHitReactionTimeBackward4SS',\n              'hitAccuracyBackward5SS',\n              'avgHitReactionTimeBackward5SS',];\n      let metricValue \n          = [summaryCorrect, \n              trialNumber - summaryCorrect, \n              null, \n              spanInCorrectAns[spanInCorrectAns.length - 1],\n              avgHitRt,\n              hitAccuracy2SpanSizeForward,\n              avgHit2SpanSizeRtForward,\n              hitAccuracy3SpanSizeForward,\n              avgHit3SpanSizeRtForward,\n              hitAccuracy4SpanSizeForward,\n              avgHit4SpanSizeRtForward,\n              hitAccuracy5SpanSizeForward,\n              avgHit5SpanSizeRtForward,\n              hitAccuracy2SpanSizeBackward,\n              avgHit2SpanSizeRtBackward,\n              hitAccuracy3SpanSizeBackward,\n              avgHit3SpanSizeRtBackward,\n              hitAccuracy4SpanSizeBackward,\n              avgHit4SpanSizeRtBackward,\n              hitAccuracy5SpanSizeBackward,\n              avgHit5SpanSizeRtBackward,];\n      let metricUnit = [null, null, null, null, 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's'];\n      let metricDescription \n          = ['Total number of correct trials', \n              'Total number of incorrect trials', \n              'Total number of entered struggle loop', \n              'The highest span that user reached',\n              'The average of all hit reaction time',\n              'The accuracy of 2 span size hit in forward mode',\n              'The average reaction time of all 2 span size hit in forward mode',\n              'The accuracy of 3 span size hit in forward mode',\n              'The average reaction time of all 3 span size hit in forward mode',\n              'The accuracy of 4 span size hit in forward mode',\n              'The average reaction time of all 4 span size hit in forward mode',\n              'The accuracy of 5 span size hit in forward mode',\n              'The average reaction time of all 5 span size hit in forward mode',\n              'The accuracy of 2 span size hit in backward mode',\n              'The average reaction time of all 2 span size hit in backward mode',\n              'The accuracy of 3 span size hit in backward mode',\n              'The average reaction time of all 3 span size hit in backward mode',\n              'The accuracy of 4 span size hit in backward mode',\n              'The average reaction time of all 4 span size hit in backward mode',\n              'The accuracy of 5 span size hit in backward mode',\n              'The average reaction time of all 5 span size hit in backward mode',];\n      for (let i = 0; i < metricName.length; i++){\n          let obj_to_append\n          obj_to_append = {\n              \"metricName\" : metricName[i],\n              \"value\" : metricValue[i],\n              \"unit\" : metricUnit[i],\n              \"description\" : metricDescription[i]\n          }\n          metricDataResult.push(obj_to_append);\n      }    \n      return metricDataResult;\n  }\n\n  function postEntry(trialDataResult: any[], gameLogicSchemeResult: { game: string; schemeName: string; version: number; variant: string; parameters: { trialNumber: { value: any; unit: null; description: string }; flashDuration: { value: any; unit: string; description: string }; flashInterval: { value: any; unit: string; description: string }; initialSpan: { value: any; unit: null; description: string }; probeNumber: { value: any; unit: null; description: string }; probeAngularPosition: { value: any; unit: string; description: string }; rampingCorrectCount: { value: any; unit: null; description: string }; maxFailStreakCount: { value: any; unit: null; description: string }; maxFailCount: { value: any; unit: null; description: string } }; description: string }, scoringDataResult: any[], metricDataResult: any[]){\n      postEntryResult = {\n          \"date\" : `${thisTime().toString()}`,\n          \"userId\" : props.userId,\n          \"userPhone\" : props.userPhone,\n          \"userSession\" : props.userSession,\n          \"data\" : {\n              \"rawData\" : {\n                  \"trialData\" : trialDataResult,\n                  \"description\" : 'all important data per trial'\n              },\n              \"gameLogicScheme\" : gameLogicSchemeResult,\n              \"scoringData\" : scoringDataResult,\n              \"metricData\" : metricDataResult\n          }\n      }\n      return postEntryResult;\n  }\n\n  function summarySpanSize() {\n    let sumHit2SpanSizeRtForward;\n    let sumHit3SpanSizeRtForward;\n    let sumHit4SpanSizeRtForward;\n    let sumHit5SpanSizeRtForward;\n    let sumHit2SpanSizeRtBackward;\n    let sumHit3SpanSizeRtBackward;\n    let sumHit4SpanSizeRtBackward;\n    let sumHit5SpanSizeRtBackward;\n    let forwardOrBackwardCondition = 2; // forward or backward\n    let spanSizeCondition = 4; // [2, 3, 4, 5] span size\n    let trialNumberPerCondition = spanSizeAndDirection.length / (forwardOrBackwardCondition * spanSizeCondition);\n\n    // forward section\n    // 2 span size section\n    hitAccuracy2SpanSizeForward = hit2SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit2SpanSizeRtForward.length !== 0){\n        sumHit2SpanSizeRtForward = hit2SpanSizeRtForward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit2SpanSizeRtForward.push(0);\n        sumHit2SpanSizeRtForward = hit2SpanSizeRtForward;\n    }\n\n    avgHit2SpanSizeRtForward = sumHit2SpanSizeRtForward / 1000 / hit2SpanSizeRtForward.length;\n\n    // 3 span size section\n    hitAccuracy3SpanSizeForward = hit3SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit3SpanSizeRtForward.length !== 0){\n        sumHit3SpanSizeRtForward = hit3SpanSizeRtForward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit3SpanSizeRtForward.push(0);\n        sumHit3SpanSizeRtForward = hit3SpanSizeRtForward;\n    }\n\n    avgHit3SpanSizeRtForward = sumHit3SpanSizeRtForward / 1000 / hit3SpanSizeRtForward.length;\n\n    // 4 span size section\n    hitAccuracy4SpanSizeForward = hit4SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit4SpanSizeRtForward.length !== 0){\n        sumHit4SpanSizeRtForward = hit4SpanSizeRtForward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit4SpanSizeRtForward.push(0);\n        sumHit4SpanSizeRtForward = hit4SpanSizeRtForward;\n    }\n\n    avgHit4SpanSizeRtForward = sumHit4SpanSizeRtForward / 1000 / hit4SpanSizeRtForward.length;\n\n    // 5 span size section\n    hitAccuracy5SpanSizeForward = hit5SpanSizeRtForward.length / trialNumberPerCondition * 100;\n    if (hit5SpanSizeRtForward.length !== 0){\n        sumHit5SpanSizeRtForward = hit5SpanSizeRtForward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit5SpanSizeRtForward.push(0);\n        sumHit5SpanSizeRtForward = hit5SpanSizeRtForward;\n    }\n\n    avgHit5SpanSizeRtForward = sumHit5SpanSizeRtForward / 1000 / hit5SpanSizeRtForward.length;\n\n    // backward section\n    // 2 span size section\n    hitAccuracy2SpanSizeBackward = hit2SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit2SpanSizeRtBackward.length !== 0){\n        sumHit2SpanSizeRtBackward = hit2SpanSizeRtBackward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit2SpanSizeRtBackward.push(0);\n        sumHit2SpanSizeRtBackward = hit2SpanSizeRtBackward;\n    }\n\n    avgHit2SpanSizeRtBackward = sumHit2SpanSizeRtBackward / 1000 / hit2SpanSizeRtBackward.length;\n\n    // 3 span size section\n    hitAccuracy3SpanSizeBackward = hit3SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit3SpanSizeRtBackward.length !== 0){\n        sumHit3SpanSizeRtBackward = hit3SpanSizeRtBackward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit3SpanSizeRtBackward.push(0);\n        sumHit3SpanSizeRtBackward = hit3SpanSizeRtBackward;\n    }\n\n    avgHit3SpanSizeRtBackward = sumHit3SpanSizeRtBackward / 1000 / hit3SpanSizeRtBackward.length;\n\n    // 4 span size section\n    hitAccuracy4SpanSizeBackward = hit4SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit4SpanSizeRtBackward.length !== 0){\n        sumHit4SpanSizeRtBackward = hit4SpanSizeRtBackward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit4SpanSizeRtBackward.push(0);\n        sumHit4SpanSizeRtBackward = hit4SpanSizeRtBackward;\n    }\n\n    avgHit4SpanSizeRtBackward = sumHit4SpanSizeRtBackward / 1000 / hit4SpanSizeRtBackward.length;\n\n    // 5 span size section\n    hitAccuracy5SpanSizeBackward = hit5SpanSizeRtBackward.length / trialNumberPerCondition * 100;\n    if (hit5SpanSizeRtBackward.length !== 0){\n        sumHit5SpanSizeRtBackward = hit5SpanSizeRtBackward.reduce((sum, time) => {\n          return sum + time;\n        });\n    } else {\n        hit5SpanSizeRtBackward.push(0);\n        sumHit5SpanSizeRtBackward = hit5SpanSizeRtBackward;\n    }\n\n    avgHit5SpanSizeRtBackward = sumHit5SpanSizeRtBackward / 1000 / hit5SpanSizeRtBackward.length;\n  }\n\n  function summaryScore() {\n      for (let correctIndex = latestIndex; correctIndex < checkAns.length; correctIndex++) {\n          latestIndex = correctIndex;\n  \n          if (checkAns[correctIndex] === 1) {\n              scorePerTrial.push(allSpan[correctIndex] * spanMultiplier);\n              summaryCorrect++;\n              spanInCorrectAns.push(allSpan[correctIndex]);\n          } \n      }\n\n      if (hitRt.length !== 0){\n          sumHitRt = hitRt.reduce((sum, time) => {\n            return sum + time;\n            });\n      } else {\n        hitRt.push(0);\n        sumHitRt = hitRt;\n      }\n\n        avgHitRt = sumHitRt / 1000 / hitRt.length;\n      \n      if (hitRt.length !== 0){\n\n        sumHitRt = hitRt.reduce((sum, time) => {\n          return sum + time;\n          });\n      }\n\n      avgHitRt = sumHitRt / 1000 / hitRt.length;\n\n      if (scorePerTrial.length !== 0){\n          sumScores = scorePerTrial.reduce((sum, score) => {\n            return sum + score;\n          });\n      } else {\n        scorePerTrial.push(0);\n      }\n      \n      return sumScores;\n  }\n  \n  function timeStart() : number{\n      let startTime = new Date();\n      return startTime.getTime();\n  }\n\n  function refreshPage(){\n    window.location.reload();\n  } \n\n  function backToLandingPage() {\n    navigate('/landing');\n    refreshPage();\n  }\n\n  return (\n    <div className='container-fluid'>\n        <div className='row'>\n            <div className='py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md'>\n              {<BreadCrumb />}\n            </div>\n            <div id='SSGameBody' className='col'>\n            <div className=\"SSGameBodyProgressBar\">\n              {<ProgressBar progressValue={progressValue} trialNumber={trialNumber}/>}\n            </div>\n              <div className=\"SSGameWindow\">\n                {<SSWindow checkSeq={checkSeq}/>}\n              </div>\n              <div className=\"SSGameEnterButton\"></div>\n            </div>\n        </div>\n        {isItDone ? \n        <div>\n            {<ScoreSummaryOverlay accuracy={(summaryCorrect / trialNumber) * 100} avgHitRt={avgHitRt} refreshPage={refreshPage} backToLandingPage={backToLandingPage}/>}\n        </div>\n        : null}\n        {<RotateAlert />}\n    </div>\n  )\n}\n\nexport default SSGame;\n\nfunction endTime() { \n  let d = new Date();\n  return d.getTime();\n}\n\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}