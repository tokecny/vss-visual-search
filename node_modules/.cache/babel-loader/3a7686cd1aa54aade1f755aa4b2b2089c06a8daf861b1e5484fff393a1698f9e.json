{"ast":null,"code":"import { saveDataToIndexedDB } from \"./offline\";\nfunction generateRandomString(length) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n  return result;\n}\nfunction generateRandomIntegerSequence(length, min, max) {\n  const result = [];\n  for (let i = length; i > 0; --i) result.push(Math.floor(Math.random() * (max - min + 1)) + min);\n  return result;\n}\nfunction randomSequenceFromList(list) {\n  const result = list.slice();\n  for (let i = result.length - 1; i > 0; --i) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]];\n  }\n  return result;\n}\nfunction samplingFromList(list, num, replace) {\n  if (replace) {\n    return generateRandomIntegerSequence(num, 0, list.length - 1).map(index => list[index]);\n  } else {\n    return randomSequenceFromList(list.slice()).slice(0, num);\n  }\n}\nfunction saveDataToClientDevice(data, filename) {\n  const blob = new Blob([data], {\n    type: 'text/plain'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.setAttribute('download', filename);\n  a.setAttribute('href', url);\n  a.click();\n}\nfunction saveJSONDataToClientDevice(data, filename) {\n  saveDataToIndexedDB(data, \"offline\");\n  saveDataToClientDevice(JSON.stringify(data), filename);\n}\nfunction preventZoomWithKeyboard() {\n  document.addEventListener('keydown', event => {\n    if ((event.ctrlKey || event.metaKey) && (event.key === '+' || event.key === '-' || event.key === '0')) {\n      event.preventDefault();\n    }\n  });\n}\nexport { generateRandomString, generateRandomIntegerSequence, randomSequenceFromList, samplingFromList, saveDataToClientDevice, saveJSONDataToClientDevice, preventZoomWithKeyboard };","map":{"version":3,"names":["saveDataToIndexedDB","generateRandomString","length","chars","result","i","Math","floor","random","generateRandomIntegerSequence","min","max","push","randomSequenceFromList","list","slice","j","samplingFromList","num","replace","map","index","saveDataToClientDevice","data","filename","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","setAttribute","click","saveJSONDataToClientDevice","JSON","stringify","preventZoomWithKeyboard","addEventListener","event","ctrlKey","metaKey","key","preventDefault"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/uitls/main.ts"],"sourcesContent":["import { saveDataToIndexedDB } from \"./offline\";\n\ntype integer = number;\n\nfunction generateRandomString(length: number): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n  return result;\n}\n\nfunction generateRandomIntegerSequence(length: number, min: number, max: number): Array<number> {\n  const result : number[] = [];\n  for (let i = length; i > 0; --i) result.push(Math.floor(Math.random() * (max - min + 1)) + min);\n  return result;\n}\n\nfunction randomSequenceFromList<T>(list: Array<T>): Array<T> {\n    const result = list.slice();\n    for (let i = result.length - 1; i > 0; --i) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [result[i], result[j]] = [result[j], result[i]];\n    }\n    return result;\n}\n\nfunction samplingFromList<T>(list: Array<T>,num: integer, replace:boolean) {\n    if (replace) {\n        return generateRandomIntegerSequence(num, 0, list.length - 1).map((index) => list[index]);\n    } else {\n        return randomSequenceFromList(list.slice()).slice(0, num);\n    }\n}\n\nfunction saveDataToClientDevice(data: any, filename: string) {\n    const blob = new Blob([data], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.setAttribute('download', filename);\n    a.setAttribute('href', url);\n    a.click();\n}\n\nfunction saveJSONDataToClientDevice(data: any, filename: string) {\n    saveDataToIndexedDB(data, \"offline\");\n    saveDataToClientDevice(JSON.stringify(data), filename);\n}\n\nfunction preventZoomWithKeyboard(): void {\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      if ((event.ctrlKey || event.metaKey) && (event.key === '+' || event.key === '-' || event.key === '0')) {\n        event.preventDefault();\n      }\n    });\n}\n\nexport {\n    generateRandomString,\n    generateRandomIntegerSequence,\n    randomSequenceFromList,\n    samplingFromList,\n    saveDataToClientDevice,\n    saveJSONDataToClientDevice,\n    preventZoomWithKeyboard\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}