{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myCanvas;\nlet canvasContext;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#0072FF', '#FFC837'];\nlet searchTargetList = [[{\n  description: 'สี่เหลี่ยมสีฟ้า',\n  color: 'blue',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมเหลือง',\n  color: 'yellow',\n  shape: 'square'\n}], [{\n  description: 'วงกลมสีฟ้า',\n  color: 'blue',\n  shape: 'circle'\n}, {\n  description: 'วงกลมเหลือง',\n  color: 'yellow',\n  shape: 'circle'\n}]];\nlet canvasWidth = 800;\nlet canvasHeight = 800;\nlet squareWidth = 55;\nlet squareHeight = 55;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX;\nlet centerY;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X;\nlet Y;\nlet Xs = [];\nlet Ys = [];\nlet Xtemps = [];\nlet Ytemps = [];\nlet posId = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet allSetsizeAndTarget = [];\nlet change = NaN;\nlet shapeRand = [];\nlet ori;\nlet col;\nlet oris = [];\nlet cols = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns = [];\nlet thatRight = '';\nlet responseText = '';\nlet timeoutList = [];\nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt = [];\nlet sumHitRt;\nlet hitRt = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness = '';\nlet total = 0;\nlet score;\nlet targetMatch = [];\nlet allStartTime = [];\nlet allClickTime = [];\nlet allCurrSS = [];\nlet gameLogicSchemeResult;\nlet trialDataResult = [];\nlet stimulusDataResult = [];\nlet targetDataResult;\nlet scoringDataResult = [];\nlet timeLimitRecord = [];\nlet setSizeRecord = [];\nlet setSizeInCorrectAns = [];\nlet metricDataResult = [];\nlet postEntryResult;\nfunction CJSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [searchTarget, setSearchTarget] = useState();\n  const [progressValue, setProgressValue] = useState(0);\n  const [disabledButton, setDisabledButton] = useState(false);\n  const [isItDone, setIsItDone] = useState(false);\n  useEffect(() => {\n    initiateData();\n    setSearchTarget({\n      shape: Math.random() > 0.5 ? 1 : 0,\n      col: Math.random() > 0.5 ? 1 : 0\n    });\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (searchTarget) {\n      oris = [];\n      cols = [];\n      for (let j = 0; j < maxSS; j++) {\n        oris.push(0);\n        oris.push(0);\n      }\n      ;\n      if (searchTarget.shape === 1) {\n        shapeRand = [1];\n      } else {\n        shapeRand = [0];\n      }\n      if (searchTarget.col === 1) {\n        for (let k = 0; k < maxSS; k++) {\n          cols.push(0);\n          cols.push(0);\n        }\n        ;\n      } else {\n        for (let k = 0; k < maxSS; k++) {\n          cols.push(1);\n          cols.push(1);\n        }\n        ;\n      }\n      createTargetCanvas();\n      createPseudorandomStimuli();\n      createCanvas();\n      gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize);\n    }\n  }, [searchTarget]);\n  function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize) {\n    gameLogicSchemeResult = {\n      \"game\": \"conjunction-search\",\n      \"schemeName\": \"default\",\n      \"version\": \"1.0\",\n      \"variant\": \"main\",\n      \"parameters\": {\n        \"trialNumber\": {\n          \"value\": trialNumber,\n          \"unit\": null,\n          \"description\": \"Total number of trials\"\n        },\n        \"backgroundColor\": {\n          \"value\": backgroundColor,\n          \"unit\": null,\n          \"description\": \"Background color of test canvas\"\n        },\n        \"stimulusShape\": {\n          \"value\": [{\n            \"shapeName\": \"square\",\n            \"parameters\": {\n              \"squareWidth\": {\n                \"value\": squareWidth,\n                \"unit\": \"px\",\n                \"description\": \"Square stimulus width\"\n              }\n            },\n            \"description\": \"Square stimulus\"\n          }, {\n            \"shapeName\": \"circle\",\n            \"parameters\": {\n              \"radius\": {\n                \"value\": radius,\n                \"unit\": \"px\",\n                \"description\": \"Circle stimulus radius\"\n              }\n            },\n            \"description\": \"Circle stimulus\"\n          }],\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus shape\"\n        },\n        \"stimulusColor\": {\n          \"value\": stimulusColor,\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus color\"\n        },\n        \"positionJitter\": {\n          \"value\": positionJitter,\n          \"unit\": \"px\",\n          \"description\": \"Amplitude of spatial jittering in each axis\"\n        },\n        \"XblockNumber\": {\n          \"value\": XblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of horizontal blocks composing the canvas\"\n        },\n        \"YblockNumber\": {\n          \"value\": YblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of vertical blocks composing the canvas\"\n        },\n        \"ceilingTimeLimit\": {\n          \"value\": ceilingTimeLimit,\n          \"unit\": \"ms\",\n          \"description\": \"Maximum(&initial) time limit of answer time in each trial\"\n        },\n        \"timeLimitDeclineStep\": {\n          \"value\": timeLimitDeclineStep,\n          \"unit\": \"ms\",\n          \"description\": \"Time limit declination step size at the maximum span\"\n        },\n        \"timeLimitInclineStep\": {\n          \"value\": timeLimitInclineStep,\n          \"unit\": \"ms\",\n          \"description\": \"Time limit inclination step size at the maximum span\"\n        },\n        \"canvasProperty\": {\n          \"canvasHeight\": {\n            \"value\": canvasHeight,\n            \"unit\": \"px\",\n            \"description\": \"Height of canvas\"\n          },\n          \"canvasWidth\": {\n            \"value\": canvasWidth,\n            \"unit\": \"px\",\n            \"description\": \"Width of canvas\"\n          }\n        },\n        \"initialSetSize\": {\n          \"value\": initialSetSize,\n          \"unit\": null,\n          \"description\": \"Initial set size\"\n        }\n      },\n      \"description\": \"Conjunction search default scheme\"\n    };\n    return gameLogicSchemeResult;\n  }\n  function initiateData() {\n    hitRt = [];\n    allRt = [];\n    currSS = 2;\n    ceilingSS = 0;\n    latestHitRtIndex = 0;\n    comboCount = [];\n    correctButLateCount = 0;\n    incorrectCount = 0;\n    count = 0;\n    currTrial = 0;\n    Xtemps = [];\n    Xs = [];\n    Ytemps = [];\n    Ys = [];\n    posId = [];\n  }\n  function createTargetCanvas() {\n    let cv = document.getElementById(\"target-canvas\");\n    if (cv) {\n      let ctx = cv.getContext(\"2d\");\n      let xOffset = cv.width / 2;\n      if ((searchTarget === null || searchTarget === void 0 ? void 0 : searchTarget.col) === 1) {\n        ctx.strokeStyle = '#FFC837';\n        ctx.fillStyle = '#FFC837';\n      } else if ((searchTarget === null || searchTarget === void 0 ? void 0 : searchTarget.col) === 0) {\n        ctx.strokeStyle = '#0072FF';\n        ctx.fillStyle = '#0072FF';\n      }\n      if ((searchTarget === null || searchTarget === void 0 ? void 0 : searchTarget.shape) === 0) {\n        ctx.rect(xOffset - 10, cv.height - 21, 20, 20);\n      } else if ((searchTarget === null || searchTarget === void 0 ? void 0 : searchTarget.shape) === 1) {\n        ctx.arc(xOffset, cv.height - 11, 10, 0, 2 * Math.PI);\n      }\n      ctx.stroke();\n      ctx.fill();\n    }\n  }\n  function createPseudorandomStimuli() {\n    let allSetsizeRange = [2, 6, 12, 24, 44];\n    let trialsPerSetsize = 16;\n    let targetCondition = 2; // target appear or disappear\n    let trialsPerCondition = trialsPerSetsize / targetCondition;\n    for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n      for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n        for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n          allSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget]);\n        }\n      }\n    }\n    Shuffle(allSetsizeAndTarget);\n    trialNumber = trialsPerSetsize * allSetsizeRange.length;\n  }\n  function createCanvas() {\n    myCanvas = document.getElementById(\"myCanvas\");\n    canvasContext = myCanvas.getContext(\"2d\");\n    centerX = myCanvas.width / 2;\n    centerY = myCanvas.height / 2;\n    for (var ix = 0; ix < XblockNumber; ix++) {\n      Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n    }\n    for (var iy = 0; iy < YblockNumber; iy++) {\n      Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n    }\n    for (ix = 0; ix < XblockNumber; ix++) {\n      for (iy = 0; iy < YblockNumber; iy++) {\n        Xs.push(Xtemps[ix]);\n        Ys.push(Ytemps[iy]);\n        posId.push(count);\n        count++;\n      }\n    }\n    myCanvas.hidden = false;\n    initialT(0, allSetsizeAndTarget[currTrial][0]);\n  }\n  function initialT(_waittime, SS) {\n    setDisabledButton(false);\n    setSizeRecord.push(ceilingSS);\n    timeLimitRecord.push(timeLimit);\n    if (!ceilingSS) {\n      ceilingSS = SS + 1;\n    }\n    ;\n    vismem.erase(canvasContext);\n    vismem.clear();\n    allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n    shuffleSS(SS);\n    targetData(squareWidth, ori, col);\n    makeBackground(backgroundColor);\n    makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n    stimulusData(realX, realY, squareWidth, ori, col);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let dT = new Date();\n    STT = dT.getTime();\n    allStartTime.push(thisTime());\n  }\n  function shuffleSS(setSize) {\n    Shuffle(posId);\n    X = [];\n    for (let ix = 0; ix < setSize + 1; ix++) {\n      X.push(Xs[posId[ix]]);\n    }\n    ;\n    Y = [];\n    for (let iy = 0; iy < setSize + 1; iy++) {\n      Y.push(Ys[posId[iy]]);\n    }\n    ;\n    ori = [];\n    for (let j = 0; j < setSize; j++) {\n      ori.push(oris[j]);\n    }\n    ;\n    col = [];\n    for (let j = 0; j < setSize; j++) {\n      col.push(stimulusColor[cols[j]]);\n    }\n    ;\n    // add the target or not\n    if (allSetsizeAndTarget[currTrial][1] === 0) {\n      ori.push(oris[setSize]);\n      col.push(stimulusColor[cols[setSize]]);\n    } else {\n      ori.push(1 - oris[setSize]);\n      col.push(stimulusColor[1 - cols[setSize]]);\n    }\n  }\n  function makeBackground(backgroundColor) {\n    // Fill background\n    vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n  }\n  let realX = [];\n  let realY = [];\n  function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n    for (let i = 0; i < orienVec.length; i++) {\n      if (orienVec[i] === shapeRand[0]) {\n        vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n      } else {\n        vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n      }\n      realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n      realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n    }\n    if (searchTarget) {\n      // Find Target from Object\n      let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col]);\n      change = find ? 1 : 0;\n      targetMatch.push(find ? true : false);\n    }\n  }\n  function targetData(width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    let obj_to_append;\n    if (shapeRand[0] === 1) {\n      thisShape = \"circle\";\n      thisParameterName = \"radius\";\n      thisValue = radius;\n    } else {\n      thisShape = \"square\";\n      thisParameterName = \"width\";\n      thisValue = width;\n    }\n    if (searchTarget) {\n      obj_to_append = {\n        \"shape\": thisShape,\n        \"shapeParams\": {\n          \"parameterName\": thisParameterName,\n          \"value\": thisValue,\n          \"unit\": \"px\"\n        },\n        \"color\": stimulusColor[searchTarget.col]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n    return targetDataResult;\n  }\n  function stimulusData(x, y, width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    for (let i = 0; i < col.length; i++) {\n      let obj_to_append;\n      if (shapeRand[0] === 0) {\n        thisShape = \"circle\";\n        thisParameterName = \"radius\";\n        thisValue = radius;\n      } else {\n        thisShape = \"square\";\n        thisParameterName = \"width\";\n        thisValue = width;\n      }\n      obj_to_append = {\n        \"type\": \"distractor\",\n        \"display\": {\n          \"shape\": thisShape,\n          \"shapeParams\": {\n            \"parameterName\": thisParameterName,\n            \"value\": thisValue,\n            \"unit\": \"px\"\n          },\n          \"color\": col[i]\n        },\n        \"position\": {\n          \"x\": {\n            \"value\": x[i],\n            \"unit\": \"px\"\n          },\n          \"y\": {\n            \"value\": y[i],\n            \"unit\": \"px\"\n          }\n        }\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n    if (targetMatch[currTrial] === true) {\n      if (obj_in_trial[obj_in_trial.length - 1].display.shape === \"circle\") {\n        obj_in_trial[obj_in_trial.length - 1].display.shape = \"square\";\n      } else {\n        obj_in_trial[obj_in_trial.length - 1].display.shape = \"circle\";\n      }\n    }\n    stimulusDataResult.push(obj_in_trial);\n    return stimulusDataResult;\n  }\n  function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult) {\n    let thisAns;\n    let obj_in_trial = [];\n    for (let i = 0; i < targetMatch.length; i++) {\n      let obj_to_append;\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        thisAns = true;\n      } else {\n        thisAns = false;\n      }\n      obj_to_append = {\n        \"hasTarget\": targetMatch[i],\n        \"startTime\": allStartTime[i],\n        \"setSize\": allCurrSS[i],\n        \"answerTime\": allClickTime[i],\n        \"hasTargetAnswerBool\": thisAns,\n        \"stimulusData\": stimulusDataResult[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n    return trialDataResult;\n  }\n  function checkResp(foo) {\n    setProgressValue(progressValue + 1);\n    // clickSound();\n    let dT2 = new Date();\n    ET = dT2.getTime();\n    allClickTime.push(thisTime());\n    let rt = ET - STT;\n    allRt.push(rt);\n    if (change === foo) {\n      // combo2Sound();\n      if (rt < timeLimit) {\n        trackRecord = trackRecord + 1;\n        thatRight = 'right';\n        checkAns.push(thatRight);\n        hitRt.push(rt);\n        if (levelUpCount === 0) {\n          comboCount.push(0);\n        } else if (levelUpCount === 1) {\n          comboCount.push(1);\n        } else if (levelUpCount === 2) {\n          comboCount.push(2);\n        } else if (levelUpCount === 3) {\n          comboCount.push(3);\n        } else if (levelUpCount === 4) {\n          comboCount.push(4);\n        } else if (levelUpCount === 5) {\n          comboCount.push(5);\n        }\n      } else {\n        // combo2Sound();\n        thatRight = 'late';\n        trackRecord = 0;\n        checkAns.push(thatRight);\n        correctButLateCount++;\n      }\n    } else {\n      // losingSound();\n      thatRight = 'wrong';\n      trackRecord = 0;\n      checkAns.push(thatRight);\n      incorrectCount++;\n    }\n    trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult);\n    trialIsOver();\n  }\n  function trialIsOver() {\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    if (trackRecord >= NupNdown) {\n      if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n        // currSS = currSS + 2;\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        if (levelUpCount === 5) {\n          levelUpCount = 5;\n        } else {\n          levelUpCount++;\n        }\n      } else {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        timeLimit = timeLimit - timeLimitDeclineStep;\n      }\n    }\n    if (trackRecord === 0 && currSS > 4) {\n      // currSS = currSS - 2;\n      timeLimit = timeLimit + timeLimitInclineStep;\n      if (timeLimit > ceilingTimeLimit) {\n        timeLimit = ceilingTimeLimit;\n      }\n    }\n    currTrial = currTrial + 1;\n    if (currTrial >= trialNumber) {\n      summaryScore();\n      Done();\n    } else {\n      trialConclude();\n    }\n  }\n  function trialConclude() {\n    setDisabledButton(true);\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let textHeight = 0;\n    if (thatRight === 'wrong') {\n      responseText = \"ผิด\";\n      textHeight = 36;\n    } else {\n      responseText = \"ถูก\";\n      textHeight = 20;\n    }\n    canvasContext.font = \"120px Sarabun\";\n    let textWidth = canvasContext.measureText(responseText).width;\n    timeoutList.push(setTimeout(function () {\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 100), setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 600), setTimeout(function () {\n      initialT(0, allSetsizeAndTarget[currTrial][0]);\n    }, 900));\n  }\n  function summaryScore() {\n    for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n      latestHitRtIndex = correctIndex;\n      let rtScore = rtBound - hitRt[correctIndex];\n      let comboMultiplier = 0;\n      if (comboCount[correctIndex] === 0) {\n        comboMultiplier = 1;\n      } else if (comboCount[correctIndex] === 1) {\n        comboMultiplier = 1.05;\n      } else if (comboCount[correctIndex] === 2) {\n        comboMultiplier = 1.10;\n      } else if (comboCount[correctIndex] === 3) {\n        comboMultiplier = 1.20;\n      } else if (comboCount[correctIndex] === 4) {\n        comboMultiplier = 1.50;\n      } else if (comboCount[correctIndex] === 5) {\n        comboMultiplier = 2.00;\n      }\n      rtScore *= comboMultiplier;\n      scorePerTrial.push(rtScore);\n    }\n    sumScores = scorePerTrial.reduce((sum, score) => {\n      return sum + score;\n    });\n    sumRt = allRt.reduce((sum, scores) => {\n      return sum + scores;\n    });\n    sumHitRt = hitRt.reduce((sum, score) => {\n      return sum + score;\n    });\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (avgHitRt < 1) {\n      swiftness = \"เร็วมาก\";\n    } else if (avgHitRt < 2) {\n      swiftness = \"เร็ว\";\n    } else {\n      swiftness = \"ปานกลาง\";\n    }\n    total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n    return total;\n  }\n  function Done() {\n    setIsItDone(true);\n    score = total;\n    hightestSetSizeCheck(checkAns, setSizeRecord);\n    scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n    metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n    postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    axios.post('https://hwsrv-1063269.hostwindsdns.com/exercise-api-hard/conjunction-search', postEntryResult).then(function (postEntryResult) {\n      console.log(postEntryResult);\n    }).catch(function (error) {\n      console.log('error');\n    });\n    saveJSONDataToClientDevice(postEntryResult, `CJS_${props.userPhone}_${thisTime().toString()}`);\n  }\n  function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total) {\n    scoringDataResult = [{\n      \"scoringModel\": {\n        \"scoringName\": \"default\",\n        \"parameters\": {\n          \"rtBound\": {\n            \"value\": rtBound,\n            \"unit\": null,\n            \"description\": \"rtBound - hitRt = rtScore\"\n          },\n          \"incorrectMultiplier\": {\n            \"value\": incorrectMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for incorrectCount\"\n          },\n          \"lateMultiplier\": {\n            \"value\": lateMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for correctButLateCount\"\n          },\n          \"scoresMultiplier\": {\n            \"value\": scoresMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for total score\"\n          },\n          \"trialNumber\": {\n            \"value\": trialNumber,\n            \"unit\": null,\n            \"description\": \"Total number of trials\"\n          }\n        },\n        \"description\": `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n      },\n      \"score\": total\n    }];\n    return scoringDataResult;\n  }\n  function hightestSetSizeCheck(checkAns, setSizeRecord) {\n    for (let i = 0; i < checkAns.length; i++) {\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        setSizeInCorrectAns.push(setSizeRecord[i]);\n      }\n    }\n    setSizeInCorrectAns.sort((a, b) => a - b);\n    return setSizeInCorrectAns;\n  }\n  function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness) {\n    timeLimitRecord.sort((a, b) => a - b);\n    hitRt.sort((a, b) => a - b);\n    let metricName = ['correctCount', 'incorrectCount', 'correctButLateCount', 'highestSetSize', 'lowestTimeLimit', 'fastestHitReactionTime', 'averageHitReactionTime', 'swiftness'];\n    let metricValue = [trialNumber - incorrectCount, incorrectCount, correctButLateCount, setSizeInCorrectAns[setSizeInCorrectAns.length - 1], timeLimitRecord[1], hitRt[0], avgHitRt, swiftness];\n    let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null];\n    let metricDescription = ['Total number of correct trials', 'Total number of incorrect trials', 'Total number of correct but late trials', 'The highest set size that user reached', 'The lowest time limit for trials that user reached', 'The fastest hit reaction time that user reached', 'The average of all hit reaction time', 'The quality of all hit reaction time'];\n    for (let i = 0; i < metricName.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"metricName\": metricName[i],\n        \"value\": metricValue[i],\n        \"unit\": metricUnit[i],\n        \"description\": metricDescription[i]\n      };\n      metricDataResult.push(obj_to_append);\n    }\n    return metricDataResult;\n  }\n  function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult) {\n    postEntryResult = {\n      \"userId\": props.userId,\n      \"userPhone\": props.userPhone,\n      \"data\": {\n        \"rawData\": {\n          \"target\": targetDataResult,\n          \"trialData\": trialDataResult\n        },\n        \"gameLogicScheme\": gameLogicSchemeResult,\n        \"scoringData\": scoringDataResult,\n        \"metricData\": metricDataResult\n      }\n    };\n    return postEntryResult;\n  }\n  function touchStart(event) {\n    event.target.classList.add('clicked');\n  }\n  function touchEnd(event) {\n    event.target.classList.remove('clicked');\n  }\n  function refreshPage() {\n    window.location.reload();\n  }\n  function backToLandingPage() {\n    navigate('/landing');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(BreadCrumb, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"CJSGameBody\",\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CJSGameBodyProgressBar\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            progressValue: progressValue,\n            trialNumber: trialNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CJSGameWindow\",\n          children: /*#__PURE__*/_jsxDEV(CJSWindow, {\n            searchTarget: searchTarget,\n            searchTargetList: searchTargetList,\n            canvasWidth: canvasWidth,\n            canvasHeight: canvasHeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CJSGameEnterButton\",\n          children: /*#__PURE__*/_jsxDEV(CJSButton, {\n            searchTarget: searchTarget,\n            disabledButton: disabledButton,\n            checkResp: checkResp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 9\n    }, this), isItDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ScoreSummaryOverlay, {\n        accuracy: (trialNumber - incorrectCount) / trialNumber * 100,\n        avgHitRt: avgHitRt,\n        refreshPage: refreshPage,\n        backToLandingPage: backToLandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(RotateAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 828,\n    columnNumber: 6\n  }, this);\n}\n_s(CJSGame, \"+sJIq0+3HoeZEarSpvFcu+3HJK8=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = CJSGame;\nexport default CJSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"CJSGame\");","map":{"version":3,"names":["useEffect","useState","useNavigate","BreadCrumb","ProgressBar","CJSWindow","ScoreSummaryOverlay","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","moment","RotateAlert","Shuffle","vismem","CJSButton","saveJSONDataToClientDevice","axios","jsxDEV","_jsxDEV","myCanvas","canvasContext","trialNumber","currTrial","backgroundColor","stimulusColor","searchTargetList","description","color","shape","canvasWidth","canvasHeight","squareWidth","squareHeight","radius","positionJitter","centerX","centerY","Xspan","Yspan","XblockNumber","YblockNumber","Xblock","Yblock","X","Y","Xs","Ys","Xtemps","Ytemps","posId","maxSS","Math","floor","ceilingSS","currSS","initialSetSize","allSetsizeAndTarget","change","NaN","shapeRand","ori","col","oris","cols","ceilingTimeLimit","timeLimit","timeLimitDeclineStep","timeLimitInclineStep","checkAns","thatRight","responseText","timeoutList","count","NupNdown","trackRecord","levelUpCount","STT","ET","sumRt","allRt","sumHitRt","hitRt","latestHitRtIndex","correctButLateCount","lateMultiplier","incorrectCount","incorrectMultiplier","scorePerTrial","sumScores","scoresMultiplier","comboCount","rtBound","avgHitRt","swiftness","total","score","targetMatch","allStartTime","allClickTime","allCurrSS","gameLogicSchemeResult","trialDataResult","stimulusDataResult","targetDataResult","scoringDataResult","timeLimitRecord","setSizeRecord","setSizeInCorrectAns","metricDataResult","postEntryResult","CJSGame","props","_s","navigate","clickSound","combo2Sound","losingSound","searchTarget","setSearchTarget","progressValue","setProgressValue","disabledButton","setDisabledButton","isItDone","setIsItDone","initiateData","random","forEach","tm","clearTimeout","j","push","k","createTargetCanvas","createPseudorandomStimuli","createCanvas","gameLogicScheme","cv","document","getElementById","ctx","getContext","xOffset","width","strokeStyle","fillStyle","rect","height","arc","PI","stroke","fill","allSetsizeRange","trialsPerSetsize","targetCondition","trialsPerCondition","iSetsize","length","iRep","iTarget","ix","round","iy","hidden","initialT","_waittime","SS","erase","clear","shuffleSS","targetData","makeBackground","makeSearchArray","stimulusData","realX","realY","drawObjects","objects","dT","Date","getTime","thisTime","setSize","makeRectangle","numarrayX","numarrayY","orienVec","colorVec","i","makeCircle","find","x","id","thisShape","thisParameterName","thisValue","obj_in_trial","obj_to_append","y","type","display","trialData","thisAns","checkResp","foo","dT2","rt","trialIsOver","summaryScore","Done","trialConclude","textHeight","font","textWidth","measureText","setTimeout","text","makeText","drawText","correctIndex","rtScore","comboMultiplier","reduce","sum","scores","max","hightestSetSizeCheck","scoringData","metricData","postEntry","post","then","console","log","catch","error","userPhone","toString","sort","a","b","metricName","metricValue","metricUnit","metricDescription","userId","touchStart","event","target","classList","add","touchEnd","remove","refreshPage","window","location","reload","backToLandingPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accuracy","_c","endTime","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\n\nlet myCanvas: HTMLCanvasElement;\nlet canvasContext: CanvasRenderingContext2D;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#0072FF', '#FFC837']; \nlet searchTargetList: any[][] = [\n    [\n        { description: 'สี่เหลี่ยมสีฟ้า', color: 'blue', shape: 'square' },\n        { description: 'สี่เหลี่ยมเหลือง', color: 'yellow', shape: 'square' }\n    ],\n    [\n        { description: 'วงกลมสีฟ้า', color: 'blue', shape: 'circle' },\n        { description: 'วงกลมเหลือง', color: 'yellow', shape: 'circle' }\n    ]\n]\nlet canvasWidth = 800;\nlet canvasHeight = 800;\nlet squareWidth = 55;\nlet squareHeight = 55;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX: number;\nlet centerY: number;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X: number[]\nlet Y: number[]\nlet Xs: number[] = [];\nlet Ys: number[] = [];\nlet Xtemps: number[] = [];\nlet Ytemps: number[] = [];\nlet posId: number[] = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet allSetsizeAndTarget: number[][] = [];\nlet change = NaN;\nlet shapeRand: number[] = [];\nlet ori: number[]\nlet col: string[]\nlet oris: number[] = [];\nlet cols: number[] = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns: string[] = [];\nlet thatRight: string = '';\nlet responseText: string = '';\nlet timeoutList: any[] = []; \nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt: number[] = [];\nlet sumHitRt;\nlet hitRt: number[] = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores: number = 0;\nlet scoresMultiplier = 10;\nlet comboCount: number[] = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness: string = '';\nlet total: number = 0;\nlet score: number;\nlet targetMatch: boolean[] = [];\nlet allStartTime: string[] = [];\nlet allClickTime: string[] = [];\nlet allCurrSS: number[] = [];\nlet gameLogicSchemeResult;\nlet trialDataResult: any[] = [];\nlet stimulusDataResult: any[] = [];\nlet targetDataResult;\nlet scoringDataResult: any[] = [];\nlet timeLimitRecord: any[] = [];\nlet setSizeRecord: any[] = [];\nlet setSizeInCorrectAns: any[] = [];\nlet metricDataResult: any[] = [];\nlet postEntryResult;\n\nfunction CJSGame(props): any {\n    const navigate = useNavigate();\n    const [clickSound] = useSound(clickSoundSrc);\n    const [combo2Sound] = useSound(combo2SoundSrc);\n    const [losingSound] = useSound(losingSoundSrc);\n    const [searchTarget, setSearchTarget] = useState<{ shape: number, col: number }>();\n    const [progressValue, setProgressValue] = useState(0);\n    const [disabledButton, setDisabledButton] = useState(false);\n    const [isItDone, setIsItDone] = useState(false);\n\n        useEffect(() => {\n            initiateData();\n            setSearchTarget({ shape: (Math.random() > 0.5 ? 1 : 0), col: (Math.random() > 0.5 ? 1 : 0) });\n\n            return() => {\n                timeoutList.forEach(tm => {\n                    clearTimeout(tm);\n                })\n            };\n        }, [])\n\n        useEffect(() => {\n            if (searchTarget) {\n                oris = [];\n                cols = [];\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(0)};\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } else {\n                    shapeRand = [0];\n                }\n                if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n                } else {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n                }\n                createTargetCanvas();\n                createPseudorandomStimuli();\n                createCanvas();\n                gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize);\n            }\n        }, [searchTarget])\n\n    function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize){\n        gameLogicSchemeResult = {\n            \"game\" : \"conjunction-search\",\n            \"schemeName\" : \"default\",\n            \"version\" : \"1.0\",\n            \"variant\" : \"main\",\n            \"parameters\" : {\n                \"trialNumber\": {\n                    \"value\" : trialNumber,\n                    \"unit\" : null,\n                    \"description\" : \"Total number of trials\"\n                },\n                \"backgroundColor\": {\n                    \"value\": backgroundColor,\n                    \"unit\": null,\n                    \"description\" : \"Background color of test canvas\"\n                },\n                \"stimulusShape\" : {\n                    \"value\" : [\n                        {\n                            \"shapeName\": \"square\",\n                            \"parameters\": {\n                                \"squareWidth\" : {\n                                    \"value\": squareWidth,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Square stimulus width\"\n                                }\n                            },\n                            \"description\" : \"Square stimulus\"\n                        }, \n                        {\n                            \"shapeName\": \"circle\",\n                            \"parameters\": {\n                                \"radius\" : {\n                                    \"value\": radius,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Circle stimulus radius\"\n                                }\n                            },\n                            \"description\" : \"Circle stimulus\"\n                        }\n                    ],\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus shape\"\n                },\n                \"stimulusColor\": {\n                    \"value\" : stimulusColor,\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus color\"\n                },\n                \"positionJitter\" : {\n                    \"value\": positionJitter,\n                    \"unit\": \"px\",\n                    \"description\": \"Amplitude of spatial jittering in each axis\"\n                },\n                \"XblockNumber\": {\n                    \"value\": XblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of horizontal blocks composing the canvas\"\n                },\n                \"YblockNumber\": {\n                    \"value\": YblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of vertical blocks composing the canvas\"\n                },\n                \"ceilingTimeLimit\" : {\n                    \"value\" : ceilingTimeLimit,\n                    \"unit\": \"ms\",\n                    \"description\" : \"Maximum(&initial) time limit of answer time in each trial\"\n                },\n                \"timeLimitDeclineStep\" : {\n                    \"value\" : timeLimitDeclineStep,\n                    \"unit\" : \"ms\",\n                    \"description\" : \"Time limit declination step size at the maximum span\"\n                },\n                \"timeLimitInclineStep\" : {\n                    \"value\" : timeLimitInclineStep,\n                    \"unit\" : \"ms\",\n                    \"description\" : \"Time limit inclination step size at the maximum span\"\n                },\n                \"canvasProperty\" : {\n                    \"canvasHeight\" : {\n                        \"value\" : canvasHeight,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Height of canvas\"\n                    },\n                    \"canvasWidth\" : {\n                        \"value\" : canvasWidth,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Width of canvas\"\n                    }\n                },\n                \"initialSetSize\" : {\n                    \"value\": initialSetSize,\n                    \"unit\": null,\n                    \"description\" : \"Initial set size\"\n                }\n            },\n            \"description\" : \"Conjunction search default scheme\"\n        }\n        return gameLogicSchemeResult;\n    }\n\n    function initiateData() {\n        hitRt = [];\n        allRt = [];\n        currSS = 2;\n        ceilingSS = 0;\n        latestHitRtIndex = 0;\n        comboCount = [];\n        correctButLateCount = 0;\n        incorrectCount = 0;\n        count = 0;\n        currTrial = 0;\n        Xtemps = [];\n        Xs = [];\n        Ytemps = [];\n        Ys = [];\n        posId = [];\n    }\n\n    function createTargetCanvas() {\n        let cv: HTMLCanvasElement = document.getElementById(\"target-canvas\") as HTMLCanvasElement;\n        if (cv) {\n            let ctx: CanvasRenderingContext2D = cv.getContext(\"2d\") as CanvasRenderingContext2D;\n            let xOffset = cv.width / 2;\n            if (searchTarget?.col === 1) {\n                ctx.strokeStyle = '#FFC837'\n                ctx.fillStyle = '#FFC837';\n            } else if (searchTarget?.col === 0) {\n                ctx.strokeStyle = '#0072FF'\n                ctx.fillStyle = '#0072FF';\n            }\n            if (searchTarget?.shape === 0) {\n                ctx.rect(xOffset - 10, cv.height - 21, 20, 20);\n            } else if (searchTarget?.shape === 1) {\n                ctx.arc(xOffset, cv.height - 11, 10, 0, 2 * Math.PI);\n            } \n            ctx.stroke();\n            ctx.fill();\n        }\n    }\n\n    function createPseudorandomStimuli() {\n        let allSetsizeRange = [2, 6, 12, 24, 44];\n        let trialsPerSetsize = 16; \n        let targetCondition = 2; // target appear or disappear\n        let trialsPerCondition = trialsPerSetsize / targetCondition; \n\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n            for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n                for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n                    allSetsizeAndTarget.push([allSetsizeRange[iSetsize],iTarget])\n                }\n            }\n        }\n        Shuffle(allSetsizeAndTarget);\n        trialNumber = trialsPerSetsize * allSetsizeRange.length;\n    }\n    \n    function createCanvas() {\n        myCanvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n        canvasContext = myCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        centerX = myCanvas.width / 2;\n        centerY = myCanvas.height / 2;\n\n        for (var ix = 0; ix < XblockNumber; ix++) {\n            Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n        }\n\n        for (var iy = 0; iy < YblockNumber; iy++) {\n            Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n        }\n\n        for (ix = 0; ix < XblockNumber; ix++) {\n            for (iy = 0; iy < YblockNumber; iy++) {\n                Xs.push(Xtemps[ix]);\n                Ys.push(Ytemps[iy]);\n                posId.push(count);\n                count++;\n            }\n        }\n\n        myCanvas.hidden = false;\n        initialT(0, allSetsizeAndTarget[currTrial][0]);\n    }\n\n    function initialT(_waittime, SS) {\n        setDisabledButton(false);\n        setSizeRecord.push(ceilingSS);\n        timeLimitRecord.push(timeLimit);\n        if (!ceilingSS) {\n            ceilingSS = SS + 1;\n        };\n        vismem.erase(canvasContext);\n        vismem.clear();\n        allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n        shuffleSS(SS);\n        targetData(squareWidth, ori, col);\n        makeBackground(backgroundColor);\n        makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n        stimulusData(realX, realY, squareWidth, ori, col);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        let dT = new Date();\n        STT = dT.getTime();\n        allStartTime.push(thisTime());\n    }\n\n    function shuffleSS(setSize) {\n        Shuffle(posId);\n        X = []; for (let ix = 0; ix < setSize + 1; ix++) { X.push(Xs[posId[ix]]) };\n        Y = []; for (let iy = 0; iy < setSize + 1; iy++) { Y.push(Ys[posId[iy]]) };\n        ori = []; for (let j = 0; j < setSize; j++) { ori.push(oris[j]) };\n        col = []; for (let j = 0; j < setSize; j++) { col.push(stimulusColor[cols[j]]) };\n        // add the target or not\n        if (allSetsizeAndTarget[currTrial][1] === 0) {\n            ori.push(oris[setSize]);\n            col.push(stimulusColor[cols[setSize]]);\n        } else {\n            ori.push(1 - oris[setSize]);\n            col.push(stimulusColor[1 - cols[setSize]]);\n        }\n    }\n\n    function makeBackground(backgroundColor) {\n        // Fill background\n        vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n    }\n\n    let realX: number[] = [];\n    let realY: number[] = [];\n    function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n        for (let i = 0; i < orienVec.length; i++) {\n            if (orienVec[i] === shapeRand[0]) {\n                vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n            } else {\n                vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n            }\n            realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n            realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n        }\n        if (searchTarget) {\n            // Find Target from Object\n            let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col])\n            change = find ? 1 : 0\n            targetMatch.push(find ? true : false);\n        }\n    }\n    \n    function targetData(width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        let obj_to_append;\n        if (shapeRand[0] === 1) {\n            thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n\n            if (searchTarget) {\n                obj_to_append = {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : stimulusColor[searchTarget.col]\n                }\n                obj_in_trial.push(obj_to_append);\n            }\n        targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n        return targetDataResult;\n    }\n\n    function stimulusData(x, y, width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        \n        for (let i = 0; i < col.length; i++){\n            let obj_to_append;\n            if (shapeRand[0] === 0) {\n                thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n                obj_to_append = {\n                \"type\" : \"distractor\",\n                \"display\" : {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : col[i]\n                },\n                \"position\" : {\n                    \"x\" : {\n                        \"value\" : x[i],\n                        \"unit\" : \"px\"\n                    },\n                    \"y\" : {\n                        \"value\" : y[i],\n                        \"unit\" : \"px\"\n                    }\n                }\n            }   \n            obj_in_trial.push(obj_to_append);\n        }\n        obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n\n        if (targetMatch[currTrial] === true){\n            if (obj_in_trial[obj_in_trial.length - 1].display.shape  === \"circle\"){\n                obj_in_trial[obj_in_trial.length - 1].display.shape  = \"square\";\n            } else {\n                obj_in_trial[obj_in_trial.length - 1].display.shape  = \"circle\";\n            }\n        }\n        stimulusDataResult.push(obj_in_trial);\n        return stimulusDataResult;\n    }\n\n    function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult){\n        let thisAns;\n        let obj_in_trial: any[] = [];\n        for (let i = 0; i < targetMatch.length; i++){\n            let obj_to_append;\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                thisAns = true;\n            } else {\n                thisAns = false;\n            }\n            obj_to_append = {\n                \"hasTarget\" : targetMatch[i],\n                \"startTime\" : allStartTime[i],\n                \"setSize\" : allCurrSS[i],\n                \"answerTime\" : allClickTime[i],\n                \"hasTargetAnswerBool\" : thisAns,\n                \"stimulusData\" : stimulusDataResult[i]\n            }\n            obj_in_trial.push(obj_to_append);\n        }\n        trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n        return trialDataResult;\n    }\n    \n    function checkResp(foo) {\n        setProgressValue(progressValue + 1);\n        // clickSound();\n        let dT2 = new Date();\n        ET = dT2.getTime();\n        allClickTime.push(thisTime());\n        let rt = ET - STT;\n        allRt.push(rt);\n        if (change === foo) {\n            // combo2Sound();\n            if (rt < timeLimit) {\n                trackRecord = trackRecord + 1;\n                thatRight = 'right';\n                checkAns.push(thatRight);\n                hitRt.push(rt);\n                if (levelUpCount === 0) {\n                    comboCount.push(0);\n                } else if (levelUpCount === 1) {\n                    comboCount.push(1);\n                } else if (levelUpCount === 2) {\n                    comboCount.push(2);\n                } else if (levelUpCount === 3) {\n                    comboCount.push(3);\n                } else if (levelUpCount === 4) {\n                    comboCount.push(4);\n                } else if (levelUpCount === 5) {\n                    comboCount.push(5);\n                }\n            } else {\n                // combo2Sound();\n                thatRight = 'late';\n                trackRecord = 0;\n                checkAns.push(thatRight);\n                correctButLateCount++;\n            }\n        } else {\n            // losingSound();\n            thatRight = 'wrong';\n            trackRecord = 0;\n            checkAns.push(thatRight);\n            incorrectCount++;\n        }\n        trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult);\n        trialIsOver();\n    }\n\n    function trialIsOver() {\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor)\n        vismem.drawObjects(canvasContext, vismem.objects);\n        if (trackRecord >= NupNdown) {\n            if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n                // currSS = currSS + 2;\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                if (levelUpCount === 5) {\n                    levelUpCount = 5;\n                } else {\n                    levelUpCount++\n                }\n            } else {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                timeLimit = timeLimit - timeLimitDeclineStep;\n            }\n        }\n\n        if (trackRecord === 0 && currSS > 4) {\n            // currSS = currSS - 2;\n            timeLimit = timeLimit + timeLimitInclineStep;\n            if (timeLimit > ceilingTimeLimit) {\n                timeLimit = ceilingTimeLimit;\n            }\n        }\n        currTrial = currTrial + 1;\n        if (currTrial >= trialNumber) {\n            summaryScore();\n            Done();\n        } else {\n            trialConclude();\n        }\n    }\n\n    function trialConclude() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        let textHeight = 0;\n        if (thatRight === 'wrong'){\n            responseText = \"ผิด\";\n            textHeight = 36;\n        } else {\n            responseText = \"ถูก\";\n            textHeight = 20;\n        }\n\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(responseText).width;\n        timeoutList.push(\n            setTimeout(function() {\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 100),\n\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 600),\n\n            setTimeout(function() {\n                initialT(0, allSetsizeAndTarget[currTrial][0]);\n            }, 900)\n        )\n    }\n\n    function summaryScore() {\n        for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n            latestHitRtIndex = correctIndex;\n            let rtScore = rtBound - hitRt[correctIndex];\n            let comboMultiplier = 0;\n            if (comboCount[correctIndex] === 0) {\n                comboMultiplier = 1;\n            } else if (comboCount[correctIndex] === 1) {\n                comboMultiplier = 1.05;\n            } else if (comboCount[correctIndex] === 2) {\n                comboMultiplier = 1.10;\n            } else if (comboCount[correctIndex] === 3) {\n                comboMultiplier = 1.20;\n            } else if (comboCount[correctIndex] === 4) {\n                comboMultiplier = 1.50;\n            } else if (comboCount[correctIndex] === 5) {\n                comboMultiplier = 2.00;\n            }\n            rtScore *= comboMultiplier;\n            scorePerTrial.push(rtScore);\n        }\n        sumScores = scorePerTrial.reduce((sum, score) => {\n            return sum + score;\n        });\n\n        sumRt = allRt.reduce((sum, scores) => {\n            return sum + scores;\n        });\n\n        sumHitRt = hitRt.reduce((sum, score) => {\n            return sum + score;\n        });\n\n        avgHitRt = sumHitRt / 1000 / hitRt.length;\n        if (avgHitRt < 1) {\n            swiftness = \"เร็วมาก\";\n        }\n        else if (avgHitRt < 2) {\n            swiftness = \"เร็ว\";\n        }\n        else {\n            swiftness = \"ปานกลาง\";\n        }\n\n        total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n\n        return total;\n    }\n\n    function Done() {\n        setIsItDone(true);\n        score = total;\n        hightestSetSizeCheck(checkAns, setSizeRecord);\n        scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n        metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n        postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n        axios.post('https://hwsrv-1063269.hostwindsdns.com/exercise-api-hard/conjunction-search', postEntryResult)\n            .then(function (postEntryResult) {\n                console.log(postEntryResult)\n            })\n            .catch(function (error) {\n                console.log('error')\n            });\n        saveJSONDataToClientDevice(postEntryResult, `CJS_${props.userPhone}_${thisTime().toString()}`);\n    }\n\n    function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total){\n        scoringDataResult = [{\n            \"scoringModel\" : {\n                \"scoringName\" : \"default\",\n                \"parameters\" : {\n                    \"rtBound\" : {\n                        \"value\" : rtBound,\n                        \"unit\" : null,\n                        \"description\" : \"rtBound - hitRt = rtScore\"\n                    },\n                    \"incorrectMultiplier\" : {\n                        \"value\" : incorrectMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for incorrectCount\"\n                    },\n                    \"lateMultiplier\" : {\n                        \"value\" : lateMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for correctButLateCount\"\n                    },\n                    \"scoresMultiplier\" : {\n                        \"value\" : scoresMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for total score\"\n                    },\n                    \"trialNumber\" : {\n                        \"value\" : trialNumber,\n                        \"unit\" : null,\n                        \"description\" : \"Total number of trials\"\n                    }\n                },\n                \"description\" : `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n            },\n            \"score\" : total\n        }]\n        return scoringDataResult;\n    }\n\n    function hightestSetSizeCheck(checkAns, setSizeRecord){\n        for (let i = 0; i < checkAns.length; i++){\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                setSizeInCorrectAns.push(setSizeRecord[i])\n            } \n        }\n        setSizeInCorrectAns.sort((a,b) => a-b);\n        return setSizeInCorrectAns;\n    }\n\n    function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness){\n        timeLimitRecord.sort((a,b) => a-b);\n        hitRt.sort((a,b) => a-b);\n        let metricName \n            = ['correctCount', \n               'incorrectCount', \n               'correctButLateCount', \n               'highestSetSize', \n               'lowestTimeLimit', \n               'fastestHitReactionTime', \n               'averageHitReactionTime', \n               'swiftness'];\n        let metricValue \n            = [trialNumber - incorrectCount, \n               incorrectCount, \n               correctButLateCount, \n               setSizeInCorrectAns[setSizeInCorrectAns.length - 1], \n               timeLimitRecord[1], \n               hitRt[0], \n               avgHitRt, \n               swiftness];\n        let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null];\n        let metricDescription \n            = ['Total number of correct trials', \n               'Total number of incorrect trials', \n               'Total number of correct but late trials', \n               'The highest set size that user reached', \n               'The lowest time limit for trials that user reached', \n               'The fastest hit reaction time that user reached', \n               'The average of all hit reaction time', \n               'The quality of all hit reaction time'];\n        for (let i = 0; i < metricName.length; i++){\n            let obj_to_append\n            obj_to_append = {\n                \"metricName\" : metricName[i],\n                \"value\" : metricValue[i],\n                \"unit\" : metricUnit[i],\n                \"description\" : metricDescription[i]\n            }\n            metricDataResult.push(obj_to_append);\n        }    \n        return metricDataResult;\n    }\n\n    function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult){\n        postEntryResult = {\n            \"userId\" : props.userId,\n            \"userPhone\" : props.userPhone,\n            \"data\" : {\n                \"rawData\" : {\n                    \"target\" : targetDataResult,\n                    \"trialData\" : trialDataResult\n                },\n                \"gameLogicScheme\" : gameLogicSchemeResult,\n                \"scoringData\" : scoringDataResult,\n                \"metricData\" : metricDataResult\n            }\n        }\n        return postEntryResult;\n    }\n\n    function touchStart(event) {\n        event.target.classList.add('clicked');\n    }\n\n    function touchEnd(event) {\n        event.target.classList.remove('clicked');\n    }\n\n    function refreshPage(){\n        window.location.reload();\n    } \n\n    function backToLandingPage(){\n        navigate('/landing');\n    }\n\n    return (\n     <div className='container-fluid'>\n        <div className='row'>\n            <div className='py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md'>\n              {<BreadCrumb />}\n            </div>\n            <div id='CJSGameBody' className='col'>\n              <div className=\"CJSGameBodyProgressBar\">\n                {<ProgressBar progressValue={progressValue} trialNumber={trialNumber}/>}\n              </div>\n              <div className=\"CJSGameWindow\">\n                {<CJSWindow searchTarget={searchTarget} searchTargetList={searchTargetList} canvasWidth={canvasWidth} canvasHeight={canvasHeight}/>}\n              </div>\n              <div className=\"CJSGameEnterButton\">\n                {<CJSButton searchTarget={searchTarget} disabledButton={disabledButton} checkResp={checkResp}/>}\n              </div>\n            </div>\n        </div>\n        {isItDone ? \n        <div>\n            {<ScoreSummaryOverlay accuracy={((trialNumber - incorrectCount) / trialNumber) * 100} avgHitRt={avgHitRt} refreshPage={refreshPage} backToLandingPage={backToLandingPage}/>}\n        </div>\n        : null}\n        {<RotateAlert />}\n    </div>\n    )\n}\n\n\nexport default CJSGame;\n\nfunction endTime() { \n    let d = new Date();\n    return d.getTime();\n}\n\nfunction thisTime() {\n    let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n    return thisTime;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}