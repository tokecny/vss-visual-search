{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myCanvas;\nlet canvasContext;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B'];\nlet searchTargetList = [[{\n  description: 'สี่เหลี่ยมสีม่วง',\n  color: '#9370DB',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีเขียว',\n  color: '#B2D33D',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีส้ม',\n  color: '#F67E4B',\n  shape: 'square'\n}], [{\n  description: 'วงกลมสีม่วง',\n  color: '#9370DB',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีเขียว',\n  color: '#B2D33D',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีส้ม',\n  color: '#F67E4B',\n  shape: 'circle'\n}]];\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX;\nlet centerY;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X;\nlet Y;\nlet Xs = [];\nlet Ys = [];\nlet Xtemps = [];\nlet Ytemps = [];\nlet posId = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet preTestSetsizeAndTarget = [];\nlet postTestSetsizeAndTarget = [];\nlet middleSetsizeAndTarget = [];\nlet allSetsizeAndTarget = [];\nlet change = NaN;\nlet shapeRand = [];\nlet ori;\nlet col;\nlet oris = [];\nlet cols = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns = [];\nlet thatRight = '';\nlet responseText = '';\nlet timeoutList = [];\nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt = [];\nlet sumHitRt;\nlet hitRt = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness = '';\nlet total = 0;\nlet score;\nlet targetMatch = [];\nlet allStartTime = [];\nlet allClickTime = [];\nlet allCurrSS = [];\nlet gameLogicSchemeResult;\nlet trialDataResult = [];\nlet stimulusDataResult = [];\nlet targetDataResult;\nlet scoringDataResult = [];\nlet timeLimitRecord = [];\nlet setSizeRecord = [];\nlet setSizeInCorrectAns = [];\nlet metricDataResult = [];\nlet allSearchMode = [];\nlet version;\nlet postEntryResult;\nfunction CJSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [searchTarget, setSearchTarget] = useState();\n  const [progressValue, setProgressValue] = useState(0);\n  const [disabledButton, setDisabledButton] = useState(false);\n  const [isItDone, setIsItDone] = useState(false);\n  useEffect(() => {\n    initiateData();\n    checkStimuliColorSet();\n    createPseudorandomStimuli();\n    gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth);\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    switchSearchMode();\n  }, [searchTarget]);\n  function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth) {\n    gameLogicSchemeResult = {\n      \"game\": \"face-in-the-crowd \",\n      \"schemeName\": \"default\",\n      \"version\": \"1.0\",\n      \"variant\": \"main\",\n      \"parameters\": {\n        \"trialNumber\": {\n          \"value\": trialNumber,\n          \"unit\": null,\n          \"description\": \"Total number of trials\"\n        },\n        \"backgroundColor\": {\n          \"value\": backgroundColor,\n          \"unit\": null,\n          \"description\": \"Background color of test canvas\"\n        },\n        \"stimulusShape\": {\n          \"value\": [{\n            \"shapeName\": \"square\",\n            \"parameters\": {\n              \"squareWidth\": {\n                \"value\": squareWidth,\n                \"unit\": \"px\",\n                \"description\": \"Square stimulus width\"\n              }\n            },\n            \"description\": \"Square stimulus\"\n          }, {\n            \"shapeName\": \"circle\",\n            \"parameters\": {\n              \"radius\": {\n                \"value\": radius,\n                \"unit\": \"px\",\n                \"description\": \"Circle stimulus radius\"\n              }\n            },\n            \"description\": \"Circle stimulus\"\n          }],\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus shape\"\n        },\n        \"stimulusColor\": {\n          \"value\": stimulusColor,\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus color\"\n        },\n        \"positionJitter\": {\n          \"value\": positionJitter,\n          \"unit\": \"px\",\n          \"description\": \"Amplitude of spatial jittering in each axis\"\n        },\n        \"XblockNumber\": {\n          \"value\": XblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of horizontal blocks composing the canvas\"\n        },\n        \"YblockNumber\": {\n          \"value\": YblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of vertical blocks composing the canvas\"\n        },\n        \"canvasProperty\": {\n          \"canvasHeight\": {\n            \"value\": canvasHeight,\n            \"unit\": \"px\",\n            \"description\": \"Height of canvas\"\n          },\n          \"canvasWidth\": {\n            \"value\": canvasWidth,\n            \"unit\": \"px\",\n            \"description\": \"Width of canvas\"\n          }\n        }\n      },\n      \"description\": \"face-in-the-crowd-1.0 search default scheme\"\n    };\n    return gameLogicSchemeResult;\n  }\n  function initiateData() {\n    hitRt = [];\n    allRt = [];\n    currSS = 2;\n    ceilingSS = 0;\n    latestHitRtIndex = 0;\n    comboCount = [];\n    correctButLateCount = 0;\n    incorrectCount = 0;\n    count = 0;\n    currTrial = 0;\n    Xtemps = [];\n    Xs = [];\n    Ytemps = [];\n    Ys = [];\n    posId = [];\n  }\n  function checkStimuliColorSet() {\n    const colorSet = props.userId % 4;\n    if (props.userId % 2 === 0) {\n      // ถ้า userId เป็นเลขคู่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 0,\n          col: colorSet\n        });\n      } else {\n        setSearchTarget({\n          shape: 1,\n          col: (colorSet + 1) % 4\n        });\n      }\n    } else {\n      // ถ้า userId เป็นเลขคี่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 1,\n          col: colorSet\n        });\n      } else {\n        setSearchTarget({\n          shape: 0,\n          col: (colorSet + 1) % 4\n        });\n      }\n    }\n  }\n  function createPseudorandomStimuli() {\n    preTestSetsizeAndTarget = [];\n    postTestSetsizeAndTarget = [];\n    middleSetsizeAndTarget = [];\n    allSetsizeAndTarget = [];\n    let allSetsizeRange = [31];\n    let trialsPerSetsize = 12;\n    let targetCondition = 2; // target appear or disappear\n    let trialsPerCondition = trialsPerSetsize / targetCondition;\n    let miniBlocks = 6; // in middle blocks \n    let trialsPerBlock = trialsPerSetsize / miniBlocks; // จำนวน trials ต่อ mini-block\n    let probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0]; // โอกาสการปรากฏของ 1 ในแต่ละ mini-block\n\n    // conjunction search pre-test and post-test\n    for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n      for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n        for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n          preTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n          postTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n        }\n      }\n    }\n    Shuffle(preTestSetsizeAndTarget);\n    Shuffle(postTestSetsizeAndTarget);\n\n    // รวม preTestSetsizeAndTarget กับ postTestSetsizeAndTarget เข้าด้วยกัน\n    allSetsizeAndTarget = [...preTestSetsizeAndTarget, ...postTestSetsizeAndTarget];\n    if (window.location.href.includes('face-in-the-crowd-A')) {\n      probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0];\n    } else {\n      probabilities.reverse();\n    }\n\n    // feature search + conjunction search 6 mini-blocks \n    // ก่อนจะแทรก middleSetsizeAndTarget เช็คให้ชัวร์ก่อนว่า allSetsizeAndTarget มีครบทั้ง pre และ post-test\n    if (allSetsizeAndTarget.length === preTestSetsizeAndTarget.length + postTestSetsizeAndTarget.length) {\n      probabilities.slice(0, miniBlocks).forEach(probability => {\n        const targetAppear = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n        const targetAbsent = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n\n        // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ feature search\n        const featureArray = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n\n        // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ conjunction search (0 และ 1 อย่างละครึ่ง)\n        const conjunctionArray = Array(trialsPerBlock / 2).fill(0).concat(Array(trialsPerBlock / 2).fill(1));\n\n        // สุ่มให้คละกัน\n        Shuffle(featureArray);\n        Shuffle(conjunctionArray);\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n          for (let iTarget = 0; iTarget < featureArray.length; iTarget++) {\n            middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], featureArray[iTarget], 0]);\n          }\n          for (let iTarget = 0; iTarget < conjunctionArray.length; iTarget++) {\n            middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], conjunctionArray[iTarget], 1]);\n          }\n        }\n      });\n\n      // หา index ตรงกลางของ allSetsizeAndTarget เพื่อแทรก middleSetsizeAndTarget เข้าไป\n      const middleIndex = Math.floor(allSetsizeAndTarget.length / 2); // ตำแหน่งกลางของ array\n      allSetsizeAndTarget.splice(middleIndex, 0, ...middleSetsizeAndTarget);\n    }\n\n    // กำหนดค่า trialNumber ให้เท่ากับจำนวนข้อทั้งหมด\n    trialNumber = allSetsizeAndTarget.length;\n  }\n  function switchSearchMode() {\n    if (searchTarget) {\n      oris = [];\n      cols = [];\n      if (allSetsizeAndTarget[currTrial][2] === 0) {\n        // feature search\n        allSearchMode.push('feature search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(0);\n        }\n        ;\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(1);\n          }\n          ;\n        }\n      } else {\n        // conjunction search\n        allSearchMode.push('conjunction search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(1);\n        }\n        ;\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(1);\n          }\n          ;\n        }\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n      }\n\n      // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n      if (currTrial === 0) {\n        // create only one time when the game started\n        createCanvas();\n      }\n      initialT(0, allSetsizeAndTarget[currTrial][0]);\n    }\n  }\n  function createCanvas() {\n    myCanvas = document.getElementById(\"myCanvas\");\n    canvasContext = myCanvas.getContext(\"2d\");\n    centerX = myCanvas.width / 2;\n    centerY = myCanvas.height / 2;\n    for (var ix = 0; ix < XblockNumber; ix++) {\n      Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n    }\n    for (var iy = 0; iy < YblockNumber; iy++) {\n      Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n    }\n    for (ix = 0; ix < XblockNumber; ix++) {\n      for (iy = 0; iy < YblockNumber; iy++) {\n        Xs.push(Xtemps[ix]);\n        Ys.push(Ytemps[iy]);\n        posId.push(count);\n        count++;\n      }\n    }\n    myCanvas.hidden = false;\n  }\n  function initialT(_waittime, SS) {\n    setDisabledButton(false);\n    setSizeRecord.push(SS);\n    timeLimitRecord.push(timeLimit);\n    if (!ceilingSS) {\n      ceilingSS = SS + 1;\n    }\n    ;\n    vismem.erase(canvasContext);\n    vismem.clear();\n    allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n    shuffleSS(SS);\n    targetData(squareWidth, ori, col);\n    makeBackground(backgroundColor);\n    makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n    stimulusData(realX, realY, squareWidth, ori, col);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let dT = new Date();\n    STT = dT.getTime();\n    allStartTime.push(thisTime());\n  }\n  function shuffleSS(setSize) {\n    Shuffle(posId);\n    X = [];\n    for (let ix = 0; ix < setSize + 1; ix++) {\n      X.push(Xs[posId[ix]]);\n    }\n    ;\n    Y = [];\n    for (let iy = 0; iy < setSize + 1; iy++) {\n      Y.push(Ys[posId[iy]]);\n    }\n    ;\n    ori = [];\n    for (let j = 0; j < setSize; j++) {\n      ori.push(oris[j]);\n    }\n    ;\n    col = [];\n    for (let j = 0; j < setSize; j++) {\n      col.push(stimulusColor[cols[j]]);\n    }\n    ;\n\n    // check if this trial is feature or conjunction search\n    if (allSetsizeAndTarget[currTrial][2] === 0) {\n      // feature search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        if (oris[setSize] === 0) {\n          ori.push(1);\n        } else {\n          ori.push(1);\n        }\n        if (cols[setSize] === 0) {\n          col.push(stimulusColor[2]);\n        } else if (cols[setSize] === 1) {\n          col.push(stimulusColor[3]);\n        } else if (cols[setSize] === 2) {\n          col.push(stimulusColor[0]);\n        } else if (cols[setSize] === 3) {\n          col.push(stimulusColor[1]);\n        }\n      }\n    } else {\n      // conjunction search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        if (oris[setSize] === 0) {\n          ori.push(1);\n        } else {\n          ori.push(1);\n        }\n        if (cols[setSize] === 0) {\n          col.push(stimulusColor[2]);\n        } else if (cols[setSize] === 1) {\n          col.push(stimulusColor[3]);\n        } else if (cols[setSize] === 2) {\n          col.push(stimulusColor[0]);\n        } else if (cols[setSize] === 3) {\n          col.push(stimulusColor[1]);\n        }\n      }\n    }\n  }\n  function makeBackground(backgroundColor) {\n    // Fill background\n    vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n  }\n  let realX = [];\n  let realY = [];\n  function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n    for (let i = 0; i < orienVec.length; i++) {\n      if (orienVec[i] === shapeRand[0]) {\n        vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n      } else {\n        vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n      }\n      realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n      realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n    }\n    if (searchTarget) {\n      // Find Target from Object\n      let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col]);\n      change = find ? 1 : 0;\n      targetMatch.push(find ? true : false);\n    }\n  }\n  function targetData(width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    let obj_to_append;\n    if (shapeRand[0] === 1) {\n      thisShape = \"circle\";\n      thisParameterName = \"radius\";\n      thisValue = radius;\n    } else {\n      thisShape = \"square\";\n      thisParameterName = \"width\";\n      thisValue = width;\n    }\n    if (searchTarget) {\n      obj_to_append = {\n        \"shape\": thisShape,\n        \"shapeParams\": {\n          \"parameterName\": thisParameterName,\n          \"value\": thisValue,\n          \"unit\": \"px\"\n        },\n        \"color\": stimulusColor[searchTarget.col]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n    return targetDataResult;\n  }\n  function stimulusData(x, y, width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    for (let i = 0; i < col.length; i++) {\n      let obj_to_append;\n      if (ori[i] === shapeRand[0]) {\n        thisShape = \"circle\";\n        thisParameterName = \"radius\";\n        thisValue = radius;\n      } else {\n        thisShape = \"square\";\n        thisParameterName = \"width\";\n        thisValue = width;\n      }\n      obj_to_append = {\n        \"type\": \"distractor\",\n        \"display\": {\n          \"shape\": thisShape,\n          \"shapeParams\": {\n            \"parameterName\": thisParameterName,\n            \"value\": thisValue,\n            \"unit\": \"px\"\n          },\n          \"color\": col[i]\n        },\n        \"position\": {\n          \"x\": {\n            \"value\": x[i],\n            \"unit\": \"px\"\n          },\n          \"y\": {\n            \"value\": y[i],\n            \"unit\": \"px\"\n          }\n        }\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n    stimulusDataResult.push(obj_in_trial);\n    return stimulusDataResult;\n  }\n  function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode) {\n    let thisAns;\n    let obj_in_trial = [];\n    for (let i = 0; i < targetMatch.length; i++) {\n      let obj_to_append;\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        thisAns = true;\n      } else {\n        thisAns = false;\n      }\n      obj_to_append = {\n        \"hasTarget\": targetMatch[i],\n        \"startTime\": allStartTime[i],\n        \"setSize\": allCurrSS[i] + 1,\n        \"answerTime\": allClickTime[i],\n        \"hasTargetAnswerBool\": thisAns,\n        \"stimulusData\": stimulusDataResult[i],\n        \"mode\": allSearchMode[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n    return trialDataResult;\n  }\n  function checkResp(foo) {\n    setProgressValue(progressValue + 1);\n    clickSound();\n    let dT2 = new Date();\n    ET = dT2.getTime();\n    allClickTime.push(thisTime());\n    let rt = ET - STT;\n    allRt.push(rt);\n    if (change === foo) {\n      combo2Sound();\n      if (rt < timeLimit) {\n        trackRecord = trackRecord + 1;\n        thatRight = 'right';\n        checkAns.push(thatRight);\n        hitRt.push(rt);\n        if (levelUpCount === 0) {\n          comboCount.push(0);\n        } else if (levelUpCount === 1) {\n          comboCount.push(1);\n        } else if (levelUpCount === 2) {\n          comboCount.push(2);\n        } else if (levelUpCount === 3) {\n          comboCount.push(3);\n        } else if (levelUpCount === 4) {\n          comboCount.push(4);\n        } else if (levelUpCount === 5) {\n          comboCount.push(5);\n        }\n      } else {\n        combo2Sound();\n        thatRight = 'late';\n        trackRecord = 0;\n        checkAns.push(thatRight);\n        correctButLateCount++;\n      }\n    } else {\n      losingSound();\n      thatRight = 'wrong';\n      trackRecord = 0;\n      checkAns.push(thatRight);\n      incorrectCount++;\n    }\n    trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n    trialIsOver();\n  }\n  function trialIsOver() {\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    if (trackRecord >= NupNdown) {\n      if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        if (levelUpCount === 5) {\n          levelUpCount = 5;\n        } else {\n          levelUpCount++;\n        }\n      } else {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        timeLimit = timeLimit - timeLimitDeclineStep;\n      }\n    }\n    if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n      timeLimit = timeLimit + timeLimitInclineStep;\n      if (timeLimit > ceilingTimeLimit) {\n        timeLimit = ceilingTimeLimit;\n      }\n    }\n    currTrial = currTrial + 1;\n    if (currTrial >= trialNumber) {\n      summaryScore();\n      Done();\n    } else {\n      trialConclude();\n    }\n  }\n  function trialConclude() {\n    setDisabledButton(true);\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let textHeight = 0;\n    if (thatRight === 'wrong') {\n      responseText = \"ผิด\";\n      textHeight = 36;\n    } else {\n      responseText = \"ถูก\";\n      textHeight = 20;\n    }\n    canvasContext.font = \"120px Sarabun\";\n    let textWidth = canvasContext.measureText(responseText).width;\n    timeoutList.push(setTimeout(function () {\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 100), setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 600), setTimeout(function () {\n      switchSearchMode();\n    }, 900));\n  }\n  function summaryScore() {\n    for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n      latestHitRtIndex = correctIndex;\n      let rtScore = rtBound - hitRt[correctIndex];\n      let comboMultiplier = 0;\n      if (comboCount[correctIndex] === 0) {\n        comboMultiplier = 1;\n      } else if (comboCount[correctIndex] === 1) {\n        comboMultiplier = 1.05;\n      } else if (comboCount[correctIndex] === 2) {\n        comboMultiplier = 1.10;\n      } else if (comboCount[correctIndex] === 3) {\n        comboMultiplier = 1.20;\n      } else if (comboCount[correctIndex] === 4) {\n        comboMultiplier = 1.50;\n      } else if (comboCount[correctIndex] === 5) {\n        comboMultiplier = 2.00;\n      }\n      rtScore *= comboMultiplier;\n      scorePerTrial.push(rtScore);\n    }\n    sumScores = scorePerTrial.reduce((sum, score) => {\n      return sum + score;\n    });\n    sumRt = allRt.reduce((sum, scores) => {\n      return sum + scores;\n    });\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hitRt.push(0);\n      sumHitRt = hitRt;\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (avgHitRt < 1) {\n      swiftness = \"เร็วมาก\";\n    } else if (avgHitRt < 2) {\n      swiftness = \"เร็ว\";\n    } else {\n      swiftness = \"ปานกลาง\";\n    }\n    total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n    return total;\n  }\n  function Done() {\n    setIsItDone(true);\n    score = total;\n    scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n    metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n    postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    // axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult)\n    //     .then(function (postEntryResult) {\n    //         console.log(postEntryResult)\n    //     })\n    //     .catch(function (error) {\n    //         console.log('error')\n    //     });\n    if (window.location.href.includes('face-in-the-crowd-A')) {\n      version = 'face-in-the-crowd-A-1.0';\n    } else {\n      version = 'face-in-the-crowd-B-1.0';\n    }\n    console.log(postEntryResult);\n    // saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_${version}_${thisTime().toString()}`);\n  }\n\n  function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total) {\n    scoringDataResult = [{\n      \"scoringModel\": {\n        \"scoringName\": \"default\",\n        \"parameters\": {\n          \"rtBound\": {\n            \"value\": rtBound,\n            \"unit\": null,\n            \"description\": \"rtBound - hitRt = rtScore\"\n          },\n          \"incorrectMultiplier\": {\n            \"value\": incorrectMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for incorrectCount\"\n          },\n          \"lateMultiplier\": {\n            \"value\": lateMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for correctButLateCount\"\n          },\n          \"scoresMultiplier\": {\n            \"value\": scoresMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for total score\"\n          },\n          \"trialNumber\": {\n            \"value\": trialNumber,\n            \"unit\": null,\n            \"description\": \"Total number of trials\"\n          }\n        },\n        \"description\": `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n      },\n      \"score\": total\n    }];\n    return scoringDataResult;\n  }\n  function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness) {\n    timeLimitRecord.sort((a, b) => a - b);\n    hitRt.sort((a, b) => a - b);\n    let metricName = ['correctCount', 'incorrectCount', 'correctButLateCount', 'highestSetSize', 'lowestTimeLimit', 'fastestHitReactionTime', 'averageHitReactionTime', 'swiftness'];\n    let metricValue = [trialNumber - incorrectCount, incorrectCount, correctButLateCount, setSizeInCorrectAns[setSizeInCorrectAns.length - 1], timeLimitRecord[1], hitRt[0], avgHitRt, swiftness];\n    let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null];\n    let metricDescription = ['Total number of correct trials', 'Total number of incorrect trials', 'Total number of correct but late trials', 'The highest set size that user reached', 'The lowest time limit for trials that user reached', 'The fastest hit reaction time that user reached', 'The average of all hit reaction time', 'The quality of all hit reaction time'];\n    for (let i = 0; i < metricName.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"metricName\": metricName[i],\n        \"value\": metricValue[i],\n        \"unit\": metricUnit[i],\n        \"description\": metricDescription[i]\n      };\n      metricDataResult.push(obj_to_append);\n    }\n    return metricDataResult;\n  }\n  function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult) {\n    postEntryResult = {\n      \"date\": `${thisTime().toString()}`,\n      \"userId\": props.userId,\n      \"userSession\": props.userSession,\n      \"data\": {\n        \"rawData\": {\n          \"target\": targetDataResult,\n          \"trialData\": trialDataResult\n        },\n        \"gameLogicScheme\": gameLogicSchemeResult,\n        \"scoringData\": scoringDataResult,\n        \"metricData\": metricDataResult\n      }\n    };\n    return postEntryResult;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full bg-slate-50 flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center flex-grow p-5\",\n      children: [/*#__PURE__*/_jsxDEV(CJSWindow, {\n        searchTarget: searchTarget,\n        searchTargetList: searchTargetList,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(CJSButton, {\n        searchTarget: searchTarget,\n        disabledButton: disabledButton,\n        checkResp: checkResp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 920,\n    columnNumber: 9\n  }, this);\n}\n_s(CJSGame, \"+sJIq0+3HoeZEarSpvFcu+3HJK8=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = CJSGame;\nexport default CJSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"CJSGame\");","map":{"version":3,"names":["useEffect","useState","useNavigate","CJSWindow","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","moment","Shuffle","vismem","CJSButton","jsxDEV","_jsxDEV","myCanvas","canvasContext","trialNumber","currTrial","backgroundColor","stimulusColor","searchTargetList","description","color","shape","canvasWidth","canvasHeight","squareWidth","squareHeight","radius","positionJitter","centerX","centerY","Xspan","Yspan","XblockNumber","YblockNumber","Xblock","Yblock","X","Y","Xs","Ys","Xtemps","Ytemps","posId","maxSS","Math","floor","ceilingSS","currSS","initialSetSize","preTestSetsizeAndTarget","postTestSetsizeAndTarget","middleSetsizeAndTarget","allSetsizeAndTarget","change","NaN","shapeRand","ori","col","oris","cols","ceilingTimeLimit","timeLimit","timeLimitDeclineStep","timeLimitInclineStep","checkAns","thatRight","responseText","timeoutList","count","NupNdown","trackRecord","levelUpCount","STT","ET","sumRt","allRt","sumHitRt","hitRt","latestHitRtIndex","correctButLateCount","lateMultiplier","incorrectCount","incorrectMultiplier","scorePerTrial","sumScores","scoresMultiplier","comboCount","rtBound","avgHitRt","swiftness","total","score","targetMatch","allStartTime","allClickTime","allCurrSS","gameLogicSchemeResult","trialDataResult","stimulusDataResult","targetDataResult","scoringDataResult","timeLimitRecord","setSizeRecord","setSizeInCorrectAns","metricDataResult","allSearchMode","version","postEntryResult","CJSGame","props","_s","navigate","clickSound","combo2Sound","losingSound","searchTarget","setSearchTarget","progressValue","setProgressValue","disabledButton","setDisabledButton","isItDone","setIsItDone","initiateData","checkStimuliColorSet","createPseudorandomStimuli","gameLogicScheme","forEach","tm","clearTimeout","switchSearchMode","colorSet","userId","window","location","href","includes","allSetsizeRange","trialsPerSetsize","targetCondition","trialsPerCondition","miniBlocks","trialsPerBlock","probabilities","iSetsize","length","iRep","iTarget","push","reverse","slice","probability","targetAppear","round","targetAbsent","featureArray","Array","fill","concat","conjunctionArray","middleIndex","splice","j","k","createCanvas","initialT","document","getElementById","getContext","width","height","ix","iy","hidden","_waittime","SS","erase","clear","shuffleSS","targetData","makeBackground","makeSearchArray","stimulusData","realX","realY","drawObjects","objects","dT","Date","getTime","thisTime","setSize","makeRectangle","numarrayX","numarrayY","orienVec","colorVec","i","makeCircle","random","find","x","id","thisShape","thisParameterName","thisValue","obj_in_trial","obj_to_append","y","type","trialData","thisAns","checkResp","foo","dT2","rt","trialIsOver","summaryScore","Done","trialConclude","textHeight","font","textWidth","measureText","setTimeout","text","makeText","drawText","correctIndex","rtScore","comboMultiplier","reduce","sum","scores","max","scoringData","metricData","postEntry","console","log","sort","a","b","metricName","metricValue","metricUnit","metricDescription","toString","userSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","endTime","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\n\nlet myCanvas: HTMLCanvasElement;\nlet canvasContext: CanvasRenderingContext2D;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B']; \nlet searchTargetList: any[][] = [\n    [\n        {description: 'สี่เหลี่ยมสีม่วง', color: '#9370DB', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีฟ้า', color: '#3CB4C6', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีเขียว', color: '#B2D33D', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีส้ม', color: '#F67E4B', shape: 'square'},\n    ],\n    [\n        {description: 'วงกลมสีม่วง', color: '#9370DB', shape: 'circle'},\n        {description: 'วงกลมสีฟ้า', color: '#3CB4C6', shape: 'circle'},\n        {description: 'วงกลมสีเขียว', color: '#B2D33D', shape: 'circle'},\n        {description: 'วงกลมสีส้ม', color: '#F67E4B', shape: 'circle'}\n    ],\n    \n]\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX: number;\nlet centerY: number;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X: number[]\nlet Y: number[]\nlet Xs: number[] = [];\nlet Ys: number[] = [];\nlet Xtemps: number[] = [];\nlet Ytemps: number[] = [];\nlet posId: number[] = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet preTestSetsizeAndTarget: number[][] = [];\nlet postTestSetsizeAndTarget: number[][] = [];\nlet middleSetsizeAndTarget: number[][] = [];\nlet allSetsizeAndTarget: number[][] = [];\nlet change = NaN;\nlet shapeRand: number[] = [];\nlet ori: number[]\nlet col: string[]\nlet oris: number[] = [];\nlet cols: number[] = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns: string[] = [];\nlet thatRight: string = '';\nlet responseText: string = '';\nlet timeoutList: any[] = []; \nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt: number[] = [];\nlet sumHitRt;\nlet hitRt: number[] = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount: number[] = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness: string = '';\nlet total: number = 0;\nlet score: number;\nlet targetMatch: boolean[] = [];\nlet allStartTime: string[] = [];\nlet allClickTime: string[] = [];\nlet allCurrSS: number[] = [];\nlet gameLogicSchemeResult;\nlet trialDataResult: any[] = [];\nlet stimulusDataResult: any[] = [];\nlet targetDataResult;\nlet scoringDataResult: any[] = [];\nlet timeLimitRecord: any[] = [];\nlet setSizeRecord: any[] = [];\nlet setSizeInCorrectAns: any[] = [];\nlet metricDataResult: any[] = [];\nlet allSearchMode: string[] = [];\nlet version;\nlet postEntryResult;\n\nfunction CJSGame(props): any {\n    const navigate = useNavigate();\n    const [clickSound] = useSound(clickSoundSrc);\n    const [combo2Sound] = useSound(combo2SoundSrc);\n    const [losingSound] = useSound(losingSoundSrc);\n    const [searchTarget, setSearchTarget] = useState<{ shape: number, col: number }>();\n    const [progressValue, setProgressValue] = useState(0);\n    const [disabledButton, setDisabledButton] = useState(false);\n    const [isItDone, setIsItDone] = useState(false);\n\n        useEffect(() => {\n            initiateData();\n            checkStimuliColorSet();\n            createPseudorandomStimuli();\n            gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth);\n            return() => {\n                timeoutList.forEach(tm => {\n                    clearTimeout(tm);\n                })\n            };\n        }, [])\n\n        useEffect(() => {\n            switchSearchMode();\n        }, [searchTarget])\n\n    function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth){\n        gameLogicSchemeResult = {\n            \"game\" : \"face-in-the-crowd \",\n            \"schemeName\" : \"default\",\n            \"version\" : \"1.0\",\n            \"variant\" : \"main\",\n            \"parameters\" : {\n                \"trialNumber\": {\n                    \"value\" : trialNumber,\n                    \"unit\" : null,\n                    \"description\" : \"Total number of trials\"\n                },\n                \"backgroundColor\": {\n                    \"value\": backgroundColor,\n                    \"unit\": null,\n                    \"description\" : \"Background color of test canvas\"\n                },\n                \"stimulusShape\" : {\n                    \"value\" : [\n                        {\n                            \"shapeName\": \"square\",\n                            \"parameters\": {\n                                \"squareWidth\" : {\n                                    \"value\": squareWidth,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Square stimulus width\"\n                                }\n                            },\n                            \"description\" : \"Square stimulus\"\n                        }, \n                        {\n                            \"shapeName\": \"circle\",\n                            \"parameters\": {\n                                \"radius\" : {\n                                    \"value\": radius,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Circle stimulus radius\"\n                                }\n                            },\n                            \"description\" : \"Circle stimulus\"\n                        }\n                    ],\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus shape\"\n                },\n                \"stimulusColor\": {\n                    \"value\" : stimulusColor,\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus color\"\n                },\n                \"positionJitter\" : {\n                    \"value\": positionJitter,\n                    \"unit\": \"px\",\n                    \"description\": \"Amplitude of spatial jittering in each axis\"\n                },\n                \"XblockNumber\": {\n                    \"value\": XblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of horizontal blocks composing the canvas\"\n                },\n                \"YblockNumber\": {\n                    \"value\": YblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of vertical blocks composing the canvas\"\n                },\n                \"canvasProperty\" : {\n                    \"canvasHeight\" : {\n                        \"value\" : canvasHeight,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Height of canvas\"\n                    },\n                    \"canvasWidth\" : {\n                        \"value\" : canvasWidth,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Width of canvas\"\n                    }\n                },\n            },\n            \"description\" : \"face-in-the-crowd-1.0 search default scheme\"\n        }\n        return gameLogicSchemeResult;\n    }\n\n    function initiateData() {\n        hitRt = [];\n        allRt = [];\n        currSS = 2;\n        ceilingSS = 0;\n        latestHitRtIndex = 0;\n        comboCount = [];\n        correctButLateCount = 0;\n        incorrectCount = 0;\n        count = 0;\n        currTrial = 0;\n        Xtemps = [];\n        Xs = [];\n        Ytemps = [];\n        Ys = [];\n        posId = [];\n    }\n\n    function checkStimuliColorSet(){\n        const colorSet = props.userId % 4; \n        if (props.userId % 2 === 0){ // ถ้า userId เป็นเลขคู่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 0, col: colorSet });\n            } else {\n                setSearchTarget({ shape: 1, col: (colorSet + 1) % 4 });\n            }\n            \n        } else { // ถ้า userId เป็นเลขคี่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 1, col: colorSet });\n            } else {\n                setSearchTarget({ shape: 0, col: (colorSet + 1) % 4  });\n            }\n        }\n    }\n\n    function createPseudorandomStimuli() {\n        preTestSetsizeAndTarget = [];\n        postTestSetsizeAndTarget = [];\n        middleSetsizeAndTarget = [];\n        allSetsizeAndTarget = [];\n        let allSetsizeRange = [31];\n        let trialsPerSetsize = 12; \n        let targetCondition = 2; // target appear or disappear\n        let trialsPerCondition = trialsPerSetsize / targetCondition; \n        let miniBlocks = 6; // in middle blocks \n        let trialsPerBlock = trialsPerSetsize / miniBlocks; // จำนวน trials ต่อ mini-block\n        let probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0]; // โอกาสการปรากฏของ 1 ในแต่ละ mini-block\n\n        // conjunction search pre-test and post-test\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n            for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n                for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n                    preTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n                    postTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n                }\n            }\n        }\n        Shuffle(preTestSetsizeAndTarget); \n        Shuffle(postTestSetsizeAndTarget); \n\n        // รวม preTestSetsizeAndTarget กับ postTestSetsizeAndTarget เข้าด้วยกัน\n        allSetsizeAndTarget = [...preTestSetsizeAndTarget, ...postTestSetsizeAndTarget];\n\n        if (window.location.href.includes('face-in-the-crowd-A')){\n            probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0];\n        } else {\n            probabilities.reverse();\n        }\n\n        // feature search + conjunction search 6 mini-blocks \n        // ก่อนจะแทรก middleSetsizeAndTarget เช็คให้ชัวร์ก่อนว่า allSetsizeAndTarget มีครบทั้ง pre และ post-test\n        if (allSetsizeAndTarget.length === preTestSetsizeAndTarget.length + postTestSetsizeAndTarget.length) {\n            probabilities.slice(0, miniBlocks).forEach(probability => {\n                const targetAppear: number = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n                const targetAbsent: number = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n    \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ feature search\n                const featureArray: number[] = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n    \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ conjunction search (0 และ 1 อย่างละครึ่ง)\n                const conjunctionArray: number[] = Array(trialsPerBlock / 2).fill(0).concat(Array(trialsPerBlock / 2).fill(1));\n    \n                // สุ่มให้คละกัน\n                Shuffle(featureArray)\n                Shuffle(conjunctionArray)\n    \n                for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n                    for (let iTarget = 0; iTarget < featureArray.length; iTarget++) {\n                        middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], featureArray[iTarget], 0])\n                    }\n    \n                    for (let iTarget = 0; iTarget < conjunctionArray.length; iTarget++) {\n                        middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], conjunctionArray[iTarget], 1])\n                    }\n    \n                }\n            });\n            \n            // หา index ตรงกลางของ allSetsizeAndTarget เพื่อแทรก middleSetsizeAndTarget เข้าไป\n            const middleIndex = Math.floor(allSetsizeAndTarget.length / 2); // ตำแหน่งกลางของ array\n            allSetsizeAndTarget.splice(middleIndex, 0, ...middleSetsizeAndTarget)\n        }\n\n        // กำหนดค่า trialNumber ให้เท่ากับจำนวนข้อทั้งหมด\n        trialNumber = allSetsizeAndTarget.length;\n    }\n\n    function switchSearchMode() {\n        if (searchTarget) {\n            oris = [];\n            cols = [];\n            if (allSetsizeAndTarget[currTrial][2] === 0) {\n                // feature search\n                allSearchMode.push('feature search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(0)};\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } else {\n                    shapeRand = [0];\n                }\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n                }\n            } else {\n                // conjunction search\n                allSearchMode.push('conjunction search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(1)};\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(1)};\n                }\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } \n                else {\n                    shapeRand = [0];\n                }\n            }\n\n            // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n            if (currTrial === 0){ \n                // create only one time when the game started\n                createCanvas();\n            }\n            initialT(0, allSetsizeAndTarget[currTrial][0]);\n        }\n    }\n    \n    function createCanvas() {\n        myCanvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n        canvasContext = myCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        centerX = myCanvas.width / 2;\n        centerY = myCanvas.height / 2;\n\n        for (var ix = 0; ix < XblockNumber; ix++) {\n            Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n        }\n\n        for (var iy = 0; iy < YblockNumber; iy++) {\n            Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n        }\n\n        for (ix = 0; ix < XblockNumber; ix++) {\n            for (iy = 0; iy < YblockNumber; iy++) {\n                Xs.push(Xtemps[ix]);\n                Ys.push(Ytemps[iy]);\n                posId.push(count);\n                count++;\n            }\n        }\n        myCanvas.hidden = false;\n    }\n\n    function initialT(_waittime, SS) {\n        setDisabledButton(false);\n        setSizeRecord.push(SS);\n        timeLimitRecord.push(timeLimit);\n        if (!ceilingSS) {\n            ceilingSS = SS + 1;\n        };\n        vismem.erase(canvasContext);\n        vismem.clear();\n        allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n        shuffleSS(SS);\n        targetData(squareWidth, ori, col);\n        makeBackground(backgroundColor);\n        makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n        stimulusData(realX, realY, squareWidth, ori, col);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        let dT = new Date();\n        STT = dT.getTime();\n        allStartTime.push(thisTime());\n    }\n\n    function shuffleSS(setSize) {\n        Shuffle(posId);\n        X = []; for (let ix = 0; ix < setSize + 1; ix++) { X.push(Xs[posId[ix]]) };\n        Y = []; for (let iy = 0; iy < setSize + 1; iy++) { Y.push(Ys[posId[iy]]) };\n        ori = []; for (let j = 0; j < setSize; j++) { ori.push(oris[j]) };\n        col = []; for (let j = 0; j < setSize; j++) { col.push(stimulusColor[cols[j]]) };\n\n        // check if this trial is feature or conjunction search\n        if (allSetsizeAndTarget[currTrial][2] === 0) {\n            // feature search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                if (oris[setSize] === 0) {\n                    ori.push(1);\n                } else {\n                    ori.push(1);\n                }\n\n                if (cols[setSize] === 0) {\n                    col.push(stimulusColor[2]);\n                } else if (cols[setSize] === 1) {\n                    col.push(stimulusColor[3]);\n                } else if (cols[setSize] === 2) {\n                    col.push(stimulusColor[0]);\n                } else if (cols[setSize] === 3) {\n                    col.push(stimulusColor[1]);\n                }\n            }\n        } else {\n            // conjunction search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                if (oris[setSize] === 0) {\n                    ori.push(1);\n                } else {\n                    ori.push(1);\n                }\n\n                if (cols[setSize] === 0) {\n                    col.push(stimulusColor[2]);\n                } else if (cols[setSize] === 1) {\n                    col.push(stimulusColor[3]);\n                } else if (cols[setSize] === 2) {\n                    col.push(stimulusColor[0]);\n                } else if (cols[setSize] === 3) {\n                    col.push(stimulusColor[1]);\n                }\n            }\n        }\n    }\n\n    function makeBackground(backgroundColor) {\n        // Fill background\n        vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n    }\n\n    let realX: number[] = [];\n    let realY: number[] = [];\n    function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n        for (let i = 0; i < orienVec.length; i++) {\n            if (orienVec[i] === shapeRand[0]) {\n                vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n            } else {\n                vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n            }\n            realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n            realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n        }\n        if (searchTarget) {\n            // Find Target from Object\n            let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col])\n            change = find ? 1 : 0\n            targetMatch.push(find ? true : false);\n        }\n    }\n    \n    function targetData(width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        let obj_to_append;\n        if (shapeRand[0] === 1) {\n            thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n\n            if (searchTarget) {\n                obj_to_append = {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : stimulusColor[searchTarget.col]\n                }\n                obj_in_trial.push(obj_to_append);\n            }\n        targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n        return targetDataResult;\n    }\n\n    function stimulusData(x, y, width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        \n        for (let i = 0; i < col.length; i++){\n            let obj_to_append;\n            if (ori[i] === shapeRand[0]) {\n                thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n                obj_to_append = {\n                \"type\" : \"distractor\",\n                \"display\" : {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : col[i]\n                },\n                \"position\" : {\n                    \"x\" : {\n                        \"value\" : x[i],\n                        \"unit\" : \"px\"\n                    },\n                    \"y\" : {\n                        \"value\" : y[i],\n                        \"unit\" : \"px\"\n                    }\n                }\n            }   \n            obj_in_trial.push(obj_to_append);\n        }\n        obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n        stimulusDataResult.push(obj_in_trial);\n        return stimulusDataResult;\n    }\n\n    function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode){\n        let thisAns;\n        let obj_in_trial: any[] = [];\n        for (let i = 0; i < targetMatch.length; i++){\n            let obj_to_append;\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                thisAns = true;\n            } else {\n                thisAns = false;\n            }\n            obj_to_append = {\n                \"hasTarget\" : targetMatch[i],\n                \"startTime\" : allStartTime[i],\n                \"setSize\" : allCurrSS[i] + 1,\n                \"answerTime\" : allClickTime[i],\n                \"hasTargetAnswerBool\" : thisAns,\n                \"stimulusData\" : stimulusDataResult[i],\n                \"mode\" : allSearchMode[i]\n            }\n            obj_in_trial.push(obj_to_append);\n        }\n        trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n        return trialDataResult;\n    }\n    \n    function checkResp(foo) {\n        setProgressValue(progressValue + 1);\n        clickSound();\n        let dT2 = new Date();\n        ET = dT2.getTime();\n        allClickTime.push(thisTime());\n        let rt = ET - STT;\n        allRt.push(rt);\n        if (change === foo) {\n            combo2Sound();\n            if (rt < timeLimit) {\n                trackRecord = trackRecord + 1;\n                thatRight = 'right';\n                checkAns.push(thatRight);\n                hitRt.push(rt);\n                if (levelUpCount === 0) {\n                    comboCount.push(0);\n                } else if (levelUpCount === 1) {\n                    comboCount.push(1);\n                } else if (levelUpCount === 2) {\n                    comboCount.push(2);\n                } else if (levelUpCount === 3) {\n                    comboCount.push(3);\n                } else if (levelUpCount === 4) {\n                    comboCount.push(4);\n                } else if (levelUpCount === 5) {\n                    comboCount.push(5);\n                }\n            } else {\n                combo2Sound();\n                thatRight = 'late';\n                trackRecord = 0;\n                checkAns.push(thatRight);\n                correctButLateCount++;\n            }\n\n        } else {\n            losingSound();\n            thatRight = 'wrong';\n            trackRecord = 0;\n            checkAns.push(thatRight);\n            incorrectCount++;\n        }\n        trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n        trialIsOver();\n    }\n\n    function trialIsOver() {\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor)\n        vismem.drawObjects(canvasContext, vismem.objects);\n        if (trackRecord >= NupNdown) {\n            if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                if (levelUpCount === 5) {\n                    levelUpCount = 5;\n                } else {\n                    levelUpCount++\n                }\n            } else {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                timeLimit = timeLimit - timeLimitDeclineStep;\n            }\n        }\n\n        if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n            timeLimit = timeLimit + timeLimitInclineStep;\n            if (timeLimit > ceilingTimeLimit) {\n                timeLimit = ceilingTimeLimit;\n            }\n        }\n        currTrial = currTrial + 1;\n        if (currTrial >= trialNumber) {\n            summaryScore();\n            Done();\n        } else {\n            trialConclude();\n        }\n    }\n    \n    function trialConclude() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        let textHeight = 0;\n        if (thatRight === 'wrong'){\n            responseText = \"ผิด\";\n            textHeight = 36;\n        } else {\n            responseText = \"ถูก\";\n            textHeight = 20;\n        }\n\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(responseText).width;\n        timeoutList.push(\n            setTimeout(function() {\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 100),\n\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 600),\n\n            setTimeout(function() {\n                switchSearchMode();\n            }, 900)\n        )\n    }\n\n    function summaryScore() {\n        for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n            latestHitRtIndex = correctIndex;\n            let rtScore = rtBound - hitRt[correctIndex];\n            let comboMultiplier = 0;\n            if (comboCount[correctIndex] === 0) {\n                comboMultiplier = 1;\n            } else if (comboCount[correctIndex] === 1) {\n                comboMultiplier = 1.05;\n            } else if (comboCount[correctIndex] === 2) {\n                comboMultiplier = 1.10;\n            } else if (comboCount[correctIndex] === 3) {\n                comboMultiplier = 1.20;\n            } else if (comboCount[correctIndex] === 4) {\n                comboMultiplier = 1.50;\n            } else if (comboCount[correctIndex] === 5) {\n                comboMultiplier = 2.00;\n            }\n            rtScore *= comboMultiplier;\n            scorePerTrial.push(rtScore);\n        }\n        sumScores = scorePerTrial.reduce((sum, score) => {\n            return sum + score;\n        });\n\n        sumRt = allRt.reduce((sum, scores) => {\n            return sum + scores;\n        });\n\n        if (hitRt.length !== 0){\n            sumHitRt = hitRt.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hitRt.push(0);\n            sumHitRt = hitRt;\n        }\n\n        avgHitRt = sumHitRt / 1000 / hitRt.length;\n        if (avgHitRt < 1) {\n            swiftness = \"เร็วมาก\";\n        }\n        else if (avgHitRt < 2) {\n            swiftness = \"เร็ว\";\n        }\n        else {\n            swiftness = \"ปานกลาง\";\n        }\n\n        total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n\n        return total;\n    }\n\n    function Done() {\n        setIsItDone(true);\n        score = total;\n        scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n        metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n        postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n        // axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult)\n        //     .then(function (postEntryResult) {\n        //         console.log(postEntryResult)\n        //     })\n        //     .catch(function (error) {\n        //         console.log('error')\n        //     });\n        if (window.location.href.includes('face-in-the-crowd-A')){\n            version = 'face-in-the-crowd-A-1.0';\n        } else {\n            version = 'face-in-the-crowd-B-1.0';\n        }\n        console.log(postEntryResult)\n        // saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_${version}_${thisTime().toString()}`);\n    }\n\n    function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total){\n        scoringDataResult = [{\n            \"scoringModel\" : {\n                \"scoringName\" : \"default\",\n                \"parameters\" : {\n                    \"rtBound\" : {\n                        \"value\" : rtBound,\n                        \"unit\" : null,\n                        \"description\" : \"rtBound - hitRt = rtScore\"\n                    },\n                    \"incorrectMultiplier\" : {\n                        \"value\" : incorrectMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for incorrectCount\"\n                    },\n                    \"lateMultiplier\" : {\n                        \"value\" : lateMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for correctButLateCount\"\n                    },\n                    \"scoresMultiplier\" : {\n                        \"value\" : scoresMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for total score\"\n                    },\n                    \"trialNumber\" : {\n                        \"value\" : trialNumber,\n                        \"unit\" : null,\n                        \"description\" : \"Total number of trials\"\n                    }\n                },\n                \"description\" : `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n            },\n            \"score\" : total\n        }]\n        return scoringDataResult;\n    }\n\n    function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness){\n        timeLimitRecord.sort((a,b) => a-b);\n        hitRt.sort((a,b) => a-b);\n        let metricName \n            = ['correctCount', \n               'incorrectCount', \n               'correctButLateCount', \n               'highestSetSize', \n               'lowestTimeLimit', \n               'fastestHitReactionTime', \n               'averageHitReactionTime', \n               'swiftness',];\n        let metricValue \n            = [trialNumber - incorrectCount, \n               incorrectCount, \n               correctButLateCount, \n               setSizeInCorrectAns[setSizeInCorrectAns.length - 1], \n               timeLimitRecord[1], \n               hitRt[0], \n               avgHitRt, \n               swiftness,];\n        let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null,];\n        let metricDescription \n            = ['Total number of correct trials', \n               'Total number of incorrect trials', \n               'Total number of correct but late trials', \n               'The highest set size that user reached', \n               'The lowest time limit for trials that user reached', \n               'The fastest hit reaction time that user reached', \n               'The average of all hit reaction time', \n               'The quality of all hit reaction time',];\n        for (let i = 0; i < metricName.length; i++){\n            let obj_to_append\n            obj_to_append = {\n                \"metricName\" : metricName[i],\n                \"value\" : metricValue[i],\n                \"unit\" : metricUnit[i],\n                \"description\" : metricDescription[i]\n            }\n            metricDataResult.push(obj_to_append);\n        }    \n        return metricDataResult;\n    }\n\n    function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult){\n        postEntryResult = {\n            \"date\" : `${thisTime().toString()}`,\n            \"userId\" : props.userId,\n            \"userSession\" : props.userSession,\n            \"data\" : {\n                \"rawData\" : {\n                    \"target\" : targetDataResult,\n                    \"trialData\" : trialDataResult\n                },\n                \"gameLogicScheme\" : gameLogicSchemeResult,\n                \"scoringData\" : scoringDataResult,\n                \"metricData\" : metricDataResult\n            }\n        }\n        return postEntryResult;\n    }\n\n    return (\n        <div className='h-screen w-full bg-slate-50 flex flex-col'>\n            <div className='flex justify-center items-center flex-grow p-5'>\n                {<CJSWindow searchTarget={searchTarget} searchTargetList={searchTargetList} canvasWidth={canvasWidth} canvasHeight={canvasHeight} />}\n                {<CJSButton searchTarget={searchTarget} disabledButton={disabledButton} checkResp={checkResp}/>}\n            </div>\n        </div>\n    )\n}\n\n\nexport default CJSGame;\n\nfunction endTime() { \n    let d = new Date();\n    return d.getTime();\n}\n\nfunction thisTime() {\n    let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n    return thisTime;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}