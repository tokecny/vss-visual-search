{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/ssGame/SSGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport SSWindow from '../../../components/gameWindow/ssWindow/SSWindow';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport { samplingFromList } from '../../../uitls/main';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet progressBarElement;\n\n//Test parameters\nconst flashDuration = 250;\nconst flashInterval = 750;\nconst initialSpan = 2;\nconst probeNumber = 6;\nconst allProbe = [1, 2, 3, 4, 5, 6];\nconst probeAngularPosition = [45, 90, 135, 225, 270, 315];\nconst probeShape = 'circle';\nconst probeParams = 'radius';\nconst radius = getComputedStyle(document.documentElement).getPropertyValue('--cir-base-unit') + \" / 2 \";\nlet cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\nlet cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\nconst restColor = getComputedStyle(document.documentElement).getPropertyValue('--ss-rest-color').trim();\nconst restBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--rest-border-color').trim();\nconst rampingCorrectCount = 3;\nconst maxFailStreakCount = 2;\nconst maxFailCount = 1;\n\n// Initaial values\nlet trialNumber;\nlet currSpan = initialSpan;\nlet currTrial = 0;\nlet allSpan = [];\nlet spanSizeAndDirection = [];\nlet spanInCorrectAns = [];\nlet allSeq = [];\nlet genSeq = [];\nlet currSeq = [];\nlet allAns = [];\nlet currAns = [];\nlet correctCount = 0;\nlet failCount = 0;\nlet failStreakCount = 0;\nlet checkAns = [];\nlet enterStruggleTimeCount = 0;\nlet struggleTime = false;\nlet isTest = false;\nlet allReactionTime = [];\nlet reactionTime = [];\nlet allReactionTrial = [];\nlet answerTimePerTrial = [];\nlet hitRt = [];\nlet sumHitRt;\nlet avgHitRt;\nlet latestIndex = 0;\nlet scorePerTrial = [];\nlet spanMultiplier = 1000;\nlet summaryCorrect = 0;\nlet sumScores = 0;\nlet score;\nlet trialStruct = [];\nlet cueStartTime = [];\nlet cueEndTime = [];\nlet startTime = 0;\nlet timeoutList = [];\nlet cueDataResult = [];\nlet probeDataResult = [];\nlet answerDataResult = [];\nlet trialDataResult = [];\nlet gameLogicSchemeResult;\nlet scoringDataResult = [];\nlet metricDataResult = [];\nlet directionMode = [];\nlet postEntryResult;\nfunction SSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const inputRef = useRef(null);\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [progressValue, setProgressValue] = useState(0);\n  const [isItDone, setIsItDone] = useState(false);\n  useEffect(() => {\n    initiateData();\n    createPseudorandomStimuli();\n    gameLogicSchemeResult = gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount);\n    progressBarElement = document.getElementById(\"progressBar\");\n    seqGenerator();\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (inputRef.current != null) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const checkSeq = event => {\n    if (isTest === true) {\n      let end = endTime();\n      reactionTime.push(end - startTime);\n      answerTimePerTrial.push(thisTime());\n      //   clickSound();\n    }\n\n    if (event.currentTarget.classList.contains('1')) {\n      currAns.push(1);\n      $('#cirButton1').addClass('clicked');\n      $('#border1').addClass('clicked');\n      $('#cirButton1').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton1').removeClass('clicked');\n        $('#border1').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('2')) {\n      currAns.push(2);\n      $('#cirButton2').addClass('clicked');\n      $('#border2').addClass('clicked');\n      $('#cirButton2').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton2').removeClass('clicked');\n        $('#border2').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('3')) {\n      currAns.push(3);\n      $('#cirButton3').addClass('clicked');\n      $('#border3').addClass('clicked');\n      $('#cirButton3').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton3').removeClass('clicked');\n        $('#border3').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('4')) {\n      currAns.push(4);\n      $('#cirButton4').addClass('clicked');\n      $('#border4').addClass('clicked');\n      $('#cirButton4').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton4').removeClass('clicked');\n        $('#border4').removeClass('clicked');\n      }, 150));\n    } else if (event.currentTarget.classList.contains('5')) {\n      currAns.push(5);\n      $('#cirButton5').addClass('clicked');\n      $('#border5').addClass('clicked');\n      $('#cirButton5').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton5').removeClass('clicked');\n        $('#border5').removeClass('clicked');\n      }, 150));\n    } else {\n      currAns.push(6);\n      $('#cirButton6').addClass('clicked');\n      $('#border6').addClass('clicked');\n      $('#cirButton6').addClass('hoverDisabled');\n      timeoutList.push(setTimeout(function () {\n        $('#cirButton6').removeClass('clicked');\n        $('#border6').removeClass('clicked');\n      }, 150));\n    }\n    if (currAns.length === spanSizeAndDirection[currTrial][0]) {\n      $('.cirButton').removeClass('hoverDisabled');\n      $('.cirButton').addClass('hoverDisabled');\n      cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime);\n      probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition);\n      answerData(currAns, answerTimePerTrial);\n      timeoutList.push(setTimeout(function () {\n        $('.cirButton').removeClass('clicked');\n      }, 150));\n      $('#goSignal').html(\"\");\n      $('.cirButton').removeClass('readyToClick');\n      allAns.push(currAns.toString());\n      const equalCheck = (currAns, currSeq) => currAns.length === currSeq.length && currAns.every((value, index) => value === currSeq[index]);\n      if (spanSizeAndDirection[currTrial][1] === 1) {\n        currAns.reverse();\n      }\n      if (equalCheck(currAns, currSeq)) {\n        $('#goSignal').html(\"ถูก\");\n        setProgressValue(progressValue + 1);\n        //   combo2Sound();\n        currSeq = [];\n        genSeq = [];\n        currTrial++;\n        checkAns.push(1);\n        failCount = 0;\n        correctCount++;\n        if (correctCount === rampingCorrectCount) {\n          currSpan++;\n          correctCount = 0;\n        }\n        if (struggleTime === true) {\n          struggleTime = false;\n          enterStruggleTimeCount++;\n          correctCount = 0;\n          failStreakCount++;\n          if (failStreakCount === maxFailStreakCount) {\n            currSpan--;\n            if (currSpan < initialSpan) {\n              currSpan = initialSpan;\n            }\n            failStreakCount = 0;\n          }\n        } else {\n          failStreakCount = 0;\n        }\n        timeoutList.push(setTimeout(function () {\n          seqGenerator();\n        }, flashDuration + flashInterval));\n      } else {\n        $('#goSignal').html(\"ผิด\");\n        //   losingSound();\n        struggleTime = true;\n        currSeq = [];\n        checkAns.push(0);\n        correctCount = 0;\n        failCount++;\n        if (failCount === maxFailCount) {\n          setProgressValue(progressValue + 1);\n          currTrial++;\n          genSeq = [];\n          failCount = 0;\n          struggleTime = false;\n          enterStruggleTimeCount++;\n          failStreakCount++;\n          if (failStreakCount === maxFailStreakCount) {\n            currSpan--;\n            if (currSpan < initialSpan) {\n              currSpan = initialSpan;\n            }\n            failStreakCount = 0;\n          }\n        }\n        timeoutList.push(setTimeout(function () {\n          seqGenerator();\n        }, flashDuration + flashInterval));\n      }\n      allReactionTime.push(reactionTime.toString());\n      let lastReaction = reactionTime[reactionTime.length - 1];\n      allReactionTrial.push(lastReaction);\n      reactionTime = [];\n    }\n    if (currTrial === trialNumber) {\n      summaryScore();\n      runIsOver();\n    }\n  };\n  function initiateData() {\n    allSpan = [];\n    allSeq = [];\n    genSeq = [];\n    currSeq = [];\n    allAns = [];\n    currAns = [];\n    correctCount = 0;\n    failCount = 0;\n    checkAns = [];\n    struggleTime = false;\n    isTest = false;\n    allReactionTime = [];\n    reactionTime = [];\n    allReactionTrial = [];\n    latestIndex = 0;\n    scorePerTrial = [];\n    summaryCorrect = 0;\n    sumScores = 0;\n  }\n  function gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount) {\n    gameLogicSchemeResult = {\n      \"game\": \"spatial-span\",\n      \"schemeName\": \"default\",\n      \"version\": 1.0,\n      \"variant\": \"main\",\n      \"parameters\": {\n        \"trialNumber\": {\n          \"value\": trialNumber,\n          \"unit\": null,\n          \"description\": \"Total number of trial in the test\"\n        },\n        \"flashDuration\": {\n          \"value\": flashDuration,\n          \"unit\": \"ms\",\n          \"description\": \"Duration of color flash signal\"\n        },\n        \"flashInterval\": {\n          \"value\": flashInterval,\n          \"unit\": \"ms\",\n          \"description\": \"Duration between the end-to-beginning of signal flash\"\n        },\n        \"initialSpan\": {\n          \"value\": initialSpan,\n          \"unit\": null,\n          \"description\": \"Initial span size at the first trial\"\n        },\n        \"probeNumber\": {\n          \"value\": probeNumber,\n          \"unit\": null,\n          \"description\": \"Number of probe (constant) in test\"\n        },\n        \"probeAngularPosition\": {\n          \"value\": probeAngularPosition,\n          \"unit\": \"degree\",\n          \"description\": \"Probe angular position\"\n        },\n        \"rampingCorrectCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Correct count before increase of sequence size\"\n        },\n        \"maxFailStreakCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Fail count before decrease of sequence size\"\n        },\n        \"maxFailCount\": {\n          \"value\": null,\n          \"unit\": null,\n          \"description\": \"Maximum fail count in struggle loop\"\n        }\n      },\n      \"description\": \"Spatial span default scheme\"\n    };\n    return gameLogicSchemeResult;\n  }\n  function createPseudorandomStimuli() {\n    let allSpanSizeRange = [2, 3, 4, 5];\n    let trialsPerSpanSize = 10;\n    let sequenceDirection = 2; // forward and backward\n    let trialsPerDirection = trialsPerSpanSize / sequenceDirection;\n    for (let iSpanSize = 0; iSpanSize < allSpanSizeRange.length; iSpanSize++) {\n      for (let iRep = 0; iRep < trialsPerDirection; iRep++) {\n        for (let iDirection = 0; iDirection < sequenceDirection; iDirection++) {\n          spanSizeAndDirection.push([allSpanSizeRange[iSpanSize], iDirection]);\n        }\n      }\n    }\n    shuffleWithCondition();\n    trialNumber = trialsPerSpanSize * allSpanSizeRange.length;\n  }\n  function shuffleWithCondition() {\n    // condition: prevent repetition 4 times in the row in every modes\n    let conditionUnsatisfied = true;\n\n    // this while loop will be continue till the conditionUnsatisfied turns to false\n    while (conditionUnsatisfied) {\n      let allDirection = [];\n      let reShuffle = false;\n      Shuffle(spanSizeAndDirection);\n      for (let i = 0; i < spanSizeAndDirection.length; i++) {\n        // push only direction mode into allDirection array\n        allDirection.push(spanSizeAndDirection[i][1]);\n\n        // check this array for mode value(0 or 1) 4 times repetition in the row \n        if (allDirection[i] === allDirection[i - 1] && allDirection[i] === allDirection[i - 2] && allDirection[i] === allDirection[i - 3]) {\n          // when the loop found 4 times repetition, change the reShuffle = true\n          reShuffle = true;\n        }\n      }\n\n      // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n      if (reShuffle === false) {\n        // change conditionUnsatisfied = false to end the while loop\n        conditionUnsatisfied = false;\n      }\n    }\n  }\n  function colorGenerator() {\n    if (parseInt(props.userId) % 2 == 0) {\n      // check if userId was even or odd number\n      // even number section\n      if (spanSizeAndDirection[currTrial][1] === 0) {\n        // forward : blue\n        document.documentElement.style.setProperty('--cue-color', '#0072ff');\n        document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n      } else {\n        // backward : yellow\n        document.documentElement.style.setProperty('--cue-color', '#ffc837');\n        document.documentElement.style.setProperty('--cue-border-color', '#ffc837');\n      }\n    } else {\n      // odd number section\n      if (spanSizeAndDirection[currTrial][1] === 0) {\n        // forward : yellow\n        document.documentElement.style.setProperty('--cue-color', '#ffc837');\n        document.documentElement.style.setProperty('--cue-border-color', '#ffc837');\n      } else {\n        // backward : blue\n        document.documentElement.style.setProperty('--cue-color', '#0072ff');\n        document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n      }\n      cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\n      cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\n    }\n  }\n  function seqGenerator() {\n    if (currTrial !== trialNumber) {\n      allSpan.push(spanSizeAndDirection[currTrial][0]);\n      if (genSeq.length === 0) {\n        let trialSeqGenerator = samplingFromList(allProbe, spanSizeAndDirection[currTrial][0], false);\n        genSeq = trialSeqGenerator;\n        if (spanSizeAndDirection[currTrial][1] === 0) {\n          directionMode.push('forward');\n        } else {\n          directionMode.push('backward');\n        }\n        timeIntervalPerTrial();\n      }\n    }\n  }\n  function timeIntervalPerTrial() {\n    $('.cirButton').addClass('hoverDisabled');\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"3\");\n    }, 100));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"2\");\n    }, 400));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"1\");\n    }, 700));\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"ตามลำดับ\");\n      colorGenerator();\n    }, 1000));\n    timeoutList.push(setTimeout(function () {\n      popCircleButton();\n    }, 2000));\n  }\n  function popCircleButton() {\n    let popTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : flashDuration;\n    let intervalTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : flashInterval;\n    let locationPop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : allSeq;\n    isTest = false;\n    currAns = [];\n    cueStartTime = [];\n    cueEndTime = [];\n    answerTimePerTrial = [];\n    timeoutList.push(setTimeout(function () {\n      $('#goSignal').html(\"\");\n      $('#goSignal').html(\"ตาคุณ\");\n      startTime = timeStart();\n      $('.cirButton').removeClass('hoverDisabled');\n      $('.cirButton').addClass('readyToClick');\n      isTest = true;\n    }, spanSizeAndDirection[currTrial][0] * (popTime / 5 + intervalTime)));\n    for (let i = 0; i < spanSizeAndDirection[currTrial][0]; i++) {\n      if (genSeq[i] === 1) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton1').addClass('pop');\n          currSeq.push(1);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton1').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 2) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton2').addClass('pop');\n          currSeq.push(2);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton2').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 3) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton3').addClass('pop');\n          currSeq.push(3);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton3').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 4) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton4').addClass('pop');\n          currSeq.push(4);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton4').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 5) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton5').addClass('pop');\n          currSeq.push(5);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton5').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n      if (genSeq[i] === 6) {\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton6').addClass('pop');\n          currSeq.push(6);\n          cueStartTime.push(thisTime());\n        }, i * intervalTime));\n        timeoutList.push(setTimeout(function () {\n          $('#cirButton6').removeClass('pop');\n          cueEndTime.push(thisTime());\n        }, popTime + i * intervalTime));\n      }\n    }\n    allSeq.push(genSeq.toString());\n  }\n  function runIsOver() {\n    timeoutList.push(setTimeout(function () {\n      let currTrialStruct = {\n        allSeq: allSeq,\n        allAns: allAns,\n        allSpan: allSpan,\n        checkAns: checkAns,\n        allReactionTime: allReactionTime,\n        allReactionTrial: allReactionTrial\n      };\n      trialStruct.push(currTrialStruct);\n      Done();\n    }));\n  }\n  function Done() {\n    setIsItDone(true);\n    let end = endTime();\n    score = Math.round(sumScores);\n    trialDataResult = trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode);\n    scoringDataResult = scoringData(trialNumber, spanMultiplier, score);\n    metricDataResult = metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount);\n    postEntryResult = postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    axios.post('https://hwsrv-1063269.hostwindsdns.com/exercise-api-hard/spatial-span', postEntryResult).then(function (postEntryResult) {\n      console.log(postEntryResult);\n    }).catch(function (error) {\n      console.log('error');\n    });\n    saveJSONDataToClientDevice(postEntryResult, `SS_${props.userPhone}_${thisTime().toString()}`);\n  }\n  function cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime) {\n    let obj_in_trial = [];\n    for (let i = 0; i < currSeq.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"probeID\": currSeq[i],\n        \"color\": cueColor,\n        \"borderColor\": cueBorderColor,\n        \"cueStart\": cueStartTime[i],\n        \"cueEnd\": cueEndTime[i],\n        \"cueDescription\": 'color flash signal that randomly appear'\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    cueDataResult.push(obj_in_trial);\n    return cueDataResult;\n  }\n  function probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition) {\n    let obj_in_trial = [];\n    for (let i = 0; i < probeNumber; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"probeID\": allProbe[i],\n        \"restColor\": restColor,\n        \"borderColor\": restBorderColor,\n        \"shape\": probeShape,\n        \"shapeParams\": [{\n          \"parameterName\": probeParams,\n          \"value\": radius,\n          \"unit\": 'px'\n        }],\n        \"angularPosition\": probeAngularPosition[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    probeDataResult.push(obj_in_trial);\n    return probeDataResult;\n  }\n  function answerData(currAns, answerTimePerTrial) {\n    let obj_in_trial = [];\n    for (let i = 0; i < currAns.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"answer\": currAns[i],\n        \"timestamp\": answerTimePerTrial[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    answerDataResult.push(obj_in_trial);\n    return answerDataResult;\n  }\n  function trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode) {\n    for (let i = 0; i < trialNumber; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"spanSize\": spanSizeAndDirection[i],\n        \"cueData\": cueDataResult[i],\n        \"probeData\": probeDataResult[i],\n        \"answerData\": answerDataResult[i],\n        \"mode\": 'forward'\n      };\n      trialDataResult.push(obj_to_append);\n    }\n    return trialDataResult;\n  }\n  function scoringData(trialNumber, spanMultiplier, score) {\n    scoringDataResult = [{\n      \"scoringModel\": {\n        \"scoringName\": \"default\",\n        \"parameters\": {\n          \"trialNumber\": {\n            \"value\": trialNumber,\n            \"unit\": null,\n            \"description\": \"Total number of trial in the test\"\n          },\n          \"spanMultiplier\": {\n            \"value\": spanMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for size of span\"\n          }\n        },\n        \"description\": `score = sum of the scorePerTrial (allSpan[i] * spanMultiplier)`\n      },\n      \"score\": score\n    }];\n    return scoringDataResult;\n  }\n  function metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount) {\n    spanInCorrectAns.sort((a, b) => a - b);\n    let metricName = ['correctCount', 'incorrectCount', 'struggleTimeCount', 'highestSpan'];\n    let metricValue = [summaryCorrect, trialNumber - summaryCorrect, null, spanInCorrectAns[spanInCorrectAns.length - 1]];\n    let metricUnit = [null, null, null, null, null];\n    let metricDescription = ['Total number of correct trials', 'Total number of incorrect trials', 'Total number of entered struggle loop', 'The highest span that user reached'];\n    for (let i = 0; i < metricName.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"metricName\": metricName[i],\n        \"value\": metricValue[i],\n        \"unit\": metricUnit[i],\n        \"description\": metricDescription[i]\n      };\n      metricDataResult.push(obj_to_append);\n    }\n    return metricDataResult;\n  }\n  function postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult) {\n    postEntryResult = {\n      \"userId\": props.userId,\n      \"userPhone\": props.userPhone,\n      \"data\": {\n        \"rawData\": {\n          \"trialData\": trialDataResult,\n          \"description\": 'all important data per trial'\n        },\n        \"gameLogicScheme\": gameLogicSchemeResult,\n        \"scoringData\": scoringDataResult,\n        \"metricData\": metricDataResult\n      }\n    };\n    return postEntryResult;\n  }\n  function summaryScore() {\n    for (let correctIndex = latestIndex; correctIndex < checkAns.length; correctIndex++) {\n      latestIndex = correctIndex;\n      if (checkAns[correctIndex] === 1) {\n        scorePerTrial.push(allSpan[correctIndex] * spanMultiplier);\n        summaryCorrect++;\n        spanInCorrectAns.push(allSpan[correctIndex]);\n        hitRt.push(allReactionTrial[correctIndex]);\n      }\n    }\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, time) => {\n        return sum + time;\n      });\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, time) => {\n        return sum + time;\n      });\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (scorePerTrial.length !== 0) {\n      sumScores = scorePerTrial.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      scorePerTrial.push(0);\n    }\n    return sumScores;\n  }\n  function timeStart() {\n    let startTime = new Date();\n    return startTime.getTime();\n  }\n  function refreshPage() {\n    window.location.reload();\n  }\n  function backToLandingPage() {\n    navigate('/landing');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(BreadCrumb, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"SSGameBody\",\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameBodyProgressBar\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            progressValue: progressValue,\n            trialNumber: trialNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameWindow\",\n          children: /*#__PURE__*/_jsxDEV(SSWindow, {\n            checkSeq: checkSeq\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SSGameEnterButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 9\n    }, this), isItDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ScoreSummaryOverlay, {\n        accuracy: summaryCorrect / trialNumber * 100,\n        avgHitRt: avgHitRt,\n        refreshPage: refreshPage,\n        backToLandingPage: backToLandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(RotateAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 865,\n    columnNumber: 5\n  }, this);\n}\n_s(SSGame, \"6/IlpRsWre1q5vpZScfshLUD+ns=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = SSGame;\nexport default SSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"SSGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","BreadCrumb","SSWindow","ProgressBar","ScoreSummaryOverlay","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","$","moment","RotateAlert","Shuffle","saveJSONDataToClientDevice","samplingFromList","axios","jsxDEV","_jsxDEV","progressBarElement","flashDuration","flashInterval","initialSpan","probeNumber","allProbe","probeAngularPosition","probeShape","probeParams","radius","getComputedStyle","document","documentElement","getPropertyValue","cueColor","trim","cueBorderColor","restColor","restBorderColor","rampingCorrectCount","maxFailStreakCount","maxFailCount","trialNumber","currSpan","currTrial","allSpan","spanSizeAndDirection","spanInCorrectAns","allSeq","genSeq","currSeq","allAns","currAns","correctCount","failCount","failStreakCount","checkAns","enterStruggleTimeCount","struggleTime","isTest","allReactionTime","reactionTime","allReactionTrial","answerTimePerTrial","hitRt","sumHitRt","avgHitRt","latestIndex","scorePerTrial","spanMultiplier","summaryCorrect","sumScores","score","trialStruct","cueStartTime","cueEndTime","startTime","timeoutList","cueDataResult","probeDataResult","answerDataResult","trialDataResult","gameLogicSchemeResult","scoringDataResult","metricDataResult","directionMode","postEntryResult","SSGame","props","_s","navigate","inputRef","clickSound","combo2Sound","losingSound","progressValue","setProgressValue","isItDone","setIsItDone","initiateData","createPseudorandomStimuli","gameLogicScheme","getElementById","seqGenerator","forEach","tm","clearTimeout","current","focus","checkSeq","event","end","endTime","push","thisTime","currentTarget","classList","contains","addClass","setTimeout","removeClass","length","cueData","probeData","answerData","html","toString","equalCheck","every","value","index","reverse","lastReaction","summaryScore","runIsOver","allSpanSizeRange","trialsPerSpanSize","sequenceDirection","trialsPerDirection","iSpanSize","iRep","iDirection","shuffleWithCondition","conditionUnsatisfied","allDirection","reShuffle","i","colorGenerator","parseInt","userId","style","setProperty","trialSeqGenerator","timeIntervalPerTrial","popCircleButton","popTime","arguments","undefined","intervalTime","locationPop","timeStart","currTrialStruct","Done","Math","round","trialData","scoringData","metricData","postEntry","post","then","console","log","catch","error","userPhone","obj_in_trial","obj_to_append","sort","a","b","metricName","metricValue","metricUnit","metricDescription","correctIndex","reduce","sum","time","Date","getTime","refreshPage","window","location","reload","backToLandingPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","accuracy","_c","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/ssGame/SSGame.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport SSWindow from '../../../components/gameWindow/ssWindow/SSWindow';\nimport ProgressBar from '../../../components/progressBar/ProgressBar';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3'\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport RotateAlert from '../../../components/rotateAlert/RotateAlert';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport { saveDataToClientDevice, saveDataToIndexedDB, saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport { samplingFromList } from '../../../uitls/main';\nimport axios from 'axios';\n\nlet progressBarElement: HTMLProgressElement;\n\n//Test parameters\nconst flashDuration: number = 250;\nconst flashInterval: number = 750;\nconst initialSpan: number = 2;\nconst probeNumber: number = 6;\nconst allProbe: number[] = [1,2,3,4,5,6];\nconst probeAngularPosition: number[] = [45, 90, 135, 225, 270, 315];\nconst probeShape: string = 'circle';\nconst probeParams: string = 'radius'; \nconst radius: string = (getComputedStyle(document.documentElement).getPropertyValue('--cir-base-unit') + \" / 2 \" );\nlet cueColor: string = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\nlet cueBorderColor: string = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\nconst restColor: string = getComputedStyle(document.documentElement).getPropertyValue('--ss-rest-color').trim();\nconst restBorderColor: string = getComputedStyle(document.documentElement).getPropertyValue('--rest-border-color').trim();\nconst rampingCorrectCount: number = 3;\nconst maxFailStreakCount: number = 2;\nconst maxFailCount: number = 1; \n\n// Initaial values\nlet trialNumber;\nlet currSpan = initialSpan;\nlet currTrial: number = 0;\nlet allSpan: number[] = [];\nlet spanSizeAndDirection: number[][] = [];\nlet spanInCorrectAns: any[] = [];\nlet allSeq: string[] = [];\nlet genSeq: number[] = [];\nlet currSeq: number[] = [];\nlet allAns: string[] = [];\nlet currAns: number[] = [];\nlet correctCount: number = 0;\nlet failCount: number = 0;\nlet failStreakCount: number = 0;\nlet checkAns: number[]  = [];\nlet enterStruggleTimeCount: number = 0;\nlet struggleTime: boolean = false;\nlet isTest: boolean = false;\nlet allReactionTime: string[]  = [];\nlet reactionTime: number[] = [];\nlet allReactionTrial: number[] = [];\nlet answerTimePerTrial: any[] = [];\nlet hitRt: number[] = [];\nlet sumHitRt;\nlet avgHitRt;\nlet latestIndex: number = 0;\nlet scorePerTrial: number[] = [];\nlet spanMultiplier: number = 1000;\nlet summaryCorrect: number = 0;\nlet sumScores: number  = 0;\nlet score: number;\nlet trialStruct: any[] = [];\nlet cueStartTime: any[] = [];\nlet cueEndTime: any[] = [];\nlet startTime : number = 0;\nlet timeoutList: any[] = []; \nlet cueDataResult: any[] = [];\nlet probeDataResult: any[] = [];\nlet answerDataResult: any[] = [];\nlet trialDataResult: any[] = [];\nlet gameLogicSchemeResult: { game: string; schemeName: string; version: number; variant: string; parameters: { trialNumber: { value: any; unit: null; description: string }; flashDuration: { value: any; unit: string; description: string }; flashInterval: { value: any; unit: string; description: string }; initialSpan: { value: any; unit: null; description: string }; probeNumber: { value: any; unit: null; description: string }; probeAngularPosition: { value: any; unit: string; description: string }; rampingCorrectCount: { value: any; unit: null; description: string }; maxFailStreakCount: { value: any; unit: null; description: string }; maxFailCount: { value: any; unit: null; description: string } }; description: string };\nlet scoringDataResult: any[] = [];\nlet metricDataResult: any[] = [];\nlet directionMode: string[] = [];\nlet postEntryResult;\n\nfunction SSGame(props) {\n  const navigate = useNavigate();\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [progressValue, setProgressValue] = useState(0);\n  const [isItDone, setIsItDone] = useState(false);\n\n  useEffect(() => {\n      initiateData();\n      createPseudorandomStimuli();\n      gameLogicSchemeResult = gameLogicScheme(trialNumber, flashDuration, flashInterval, initialSpan, probeNumber, probeAngularPosition, rampingCorrectCount, maxFailStreakCount, maxFailCount);\n      progressBarElement = document.getElementById(\"progressBar\") as HTMLProgressElement;\n      seqGenerator();\n    \n      return () => {\n        timeoutList.forEach(tm => {\n            clearTimeout(tm);\n        })\n      };\n  }, [])\n  \n  useEffect(() => {\n      if (inputRef.current != null) {\n          inputRef.current.focus();\n      }\n  }, []);\n\n  const checkSeq = (event: { currentTarget: { classList: { contains: (arg0: string) => any } } }) => {\n      if (isTest === true) {\n          let end : number = endTime();\n          reactionTime.push(end - startTime);\n          answerTimePerTrial.push(thisTime());\n        //   clickSound();\n      }\n\n      if (event.currentTarget.classList.contains('1')) {\n        currAns.push(1);\n        ($('#cirButton1').addClass('clicked'));\n        ($('#border1').addClass('clicked'));\n        ($('#cirButton1').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton1').removeClass('clicked');\n                $('#border1').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('2')) {\n        currAns.push(2);\n        ($('#cirButton2').addClass('clicked'));\n        ($('#border2').addClass('clicked'));\n        ($('#cirButton2').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton2').removeClass('clicked');\n                $('#border2').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('3')) {\n        currAns.push(3);\n        ($('#cirButton3').addClass('clicked'));\n        ($('#border3').addClass('clicked'));\n        ($('#cirButton3').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton3').removeClass('clicked')\n                $('#border3').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('4')) { \n        currAns.push(4);\n        ($('#cirButton4').addClass('clicked'));\n        ($('#border4').addClass('clicked'));\n        ($('#cirButton4').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton4').removeClass('clicked');\n                $('#border4').removeClass('clicked');\n            }, 150)\n        )\n    } else if (event.currentTarget.classList.contains('5')) {\n        currAns.push(5);\n        ($('#cirButton5').addClass('clicked'));\n        ($('#border5').addClass('clicked'));\n        ($('#cirButton5').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton5').removeClass('clicked');\n                $('#border5').removeClass('clicked');\n            }, 150)\n        )\n    } else {\n        currAns.push(6);\n        ($('#cirButton6').addClass('clicked'));\n        ($('#border6').addClass('clicked'));\n        ($('#cirButton6').addClass('hoverDisabled'));\n        timeoutList.push(\n            setTimeout(function() {\n                $('#cirButton6').removeClass('clicked');\n                $('#border6').removeClass('clicked');\n            }, 150)\n        )\n    }\n\n      if (currAns.length === spanSizeAndDirection[currTrial][0]) {\n          $('.cirButton').removeClass('hoverDisabled'); \n          $('.cirButton').addClass('hoverDisabled'); \n          cueData(currSeq, cueColor, cueBorderColor, cueStartTime, cueEndTime);\n          probeData(probeNumber, allProbe, restColor, restBorderColor, probeShape, probeParams, radius, probeAngularPosition);\n          answerData(currAns, answerTimePerTrial);\n          timeoutList.push(\n              setTimeout(function() {\n                  $('.cirButton').removeClass('clicked'); \n              }, 150)\n          )\n\n          $('#goSignal').html(\"\");\n          $('.cirButton').removeClass('readyToClick');\n          allAns.push(currAns.toString());\n          \n          const equalCheck = (currAns: any[], currSeq: string | any[]) => \n              currAns.length === currSeq.length && currAns.every((value, index) => value === currSeq[index]);\n\n            if (spanSizeAndDirection[currTrial][1] === 1){\n                currAns.reverse();\n            } \n\n          if (equalCheck(currAns, currSeq)) {\n              $('#goSignal').html(\"ถูก\");\n              setProgressValue(progressValue + 1);\n            //   combo2Sound();\n              currSeq = [];\n              genSeq = [];\n              currTrial++;\n              checkAns.push(1);\n              failCount = 0;\n              correctCount++;\n              if (correctCount === rampingCorrectCount) {\n                  currSpan++;\n                  correctCount = 0;\n              }\n\n              if (struggleTime === true) {\n                  struggleTime = false;\n                  enterStruggleTimeCount++;\n                  correctCount = 0;\n                  failStreakCount++;\n                  if (failStreakCount === maxFailStreakCount) {\n                      currSpan--;\n                          if (currSpan < initialSpan) {\n                              currSpan = initialSpan;\n                          }\n                      failStreakCount = 0;\n                  }\n              } else {\n                  failStreakCount = 0;\n              }\n              \n              timeoutList.push(\n                  setTimeout(function() {\n                      seqGenerator();\n                  }, (flashDuration + flashInterval))\n              )\n          } else {\n              $('#goSignal').html(\"ผิด\");\n            //   losingSound();\n              struggleTime = true;\n              currSeq = [];\n              checkAns.push(0);\n              correctCount = 0;\n              failCount++;\n              if (failCount === maxFailCount) {\n                  setProgressValue(progressValue + 1);\n                  currTrial++;\n                  genSeq = [];\n                  failCount = 0;\n                  struggleTime = false;\n                  enterStruggleTimeCount++;\n                  failStreakCount++;\n                  if (failStreakCount === maxFailStreakCount) {\n                      currSpan--;\n                          if (currSpan < initialSpan) {\n                              currSpan = initialSpan;\n                          }\n                      failStreakCount = 0;\n                  }\n              }\n              \n              timeoutList.push(\n                  setTimeout(function() {\n                      seqGenerator();\n                  }, (flashDuration + flashInterval))\n              )\n          }\n          \n          allReactionTime.push(reactionTime.toString());\n          let lastReaction = reactionTime[reactionTime.length-1];\n          allReactionTrial.push(lastReaction);\n          reactionTime = [];\n      }\n\n      if (currTrial === trialNumber){\n          summaryScore();\n          runIsOver();\n      }\n  };\n\n  function initiateData() {\n      allSpan = []; \n      allSeq = [];\n      genSeq = [];\n      currSeq = [];\n      allAns = [];\n      currAns = [];\n      correctCount = 0;\n      failCount = 0;\n      checkAns = [];\n      struggleTime = false;\n      isTest = false; \n      allReactionTime = [];\n      reactionTime = [];\n      allReactionTrial = [];\n      latestIndex = 0;\n      scorePerTrial = [];\n      summaryCorrect = 0;\n      sumScores = 0;\n  }\n\n    function gameLogicScheme(trialNumber: number, flashDuration: number, flashInterval: number, initialSpan: number, probeNumber: number, probeAngularPosition: number[], rampingCorrectCount: number, maxFailStreakCount: number, maxFailCount: number) {\n      gameLogicSchemeResult = {\n          \"game\": \"spatial-span\",\n          \"schemeName\" : \"default\",\n          \"version\" : 1.0,\n          \"variant\": \"main\",\n          \"parameters\" : {\n              \"trialNumber\": {\n                  \"value\": trialNumber,\n                  \"unit\": null,\n                  \"description\": \"Total number of trial in the test\"\n              },\n              \"flashDuration\": {\n                  \"value\": flashDuration,\n                  \"unit\": \"ms\",\n                  \"description\": \"Duration of color flash signal\"\n              },\n              \"flashInterval\" : {\n                  \"value\": flashInterval,\n                  \"unit\": \"ms\",\n                  \"description\" : \"Duration between the end-to-beginning of signal flash\"\n              },\n              \"initialSpan\": {\n                  \"value\": initialSpan,\n                  \"unit\": null,\n                  \"description\": \"Initial span size at the first trial\"\n              },\n              \"probeNumber\" : {\n                  \"value\" : probeNumber,\n                  \"unit\" : null,\n                  \"description\" : \"Number of probe (constant) in test\"\n              },\n              \"probeAngularPosition\" : {\n                  \"value\" : probeAngularPosition,\n                  \"unit\" : \"degree\",\n                  \"description\" : \"Probe angular position\"\n              },\n              \"rampingCorrectCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Correct count before increase of sequence size\"\n              },\n              \"maxFailStreakCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Fail count before decrease of sequence size\"\n              },\n              \"maxFailCount\" : {\n                  \"value\" : null,\n                  \"unit\" : null,\n                  \"description\" : \"Maximum fail count in struggle loop\"\n              }\n          },\n          \"description\": \"Spatial span default scheme\"\n      }\n      return gameLogicSchemeResult;\n  }\n\n  function createPseudorandomStimuli() {\n    let allSpanSizeRange = [2, 3, 4, 5];\n    let trialsPerSpanSize = 10;  \n    let sequenceDirection = 2; // forward and backward\n    let trialsPerDirection = trialsPerSpanSize / sequenceDirection; \n\n    for (let iSpanSize = 0; iSpanSize < allSpanSizeRange.length; iSpanSize++) {\n        for (let iRep = 0; iRep < trialsPerDirection; iRep++) {\n            for (let iDirection = 0; iDirection < sequenceDirection; iDirection++) {\n                spanSizeAndDirection.push([allSpanSizeRange[iSpanSize],iDirection]);\n            }\n        }\n    }\n    shuffleWithCondition();\n    trialNumber = trialsPerSpanSize * allSpanSizeRange.length;\n    }\n\n    function shuffleWithCondition() { \n        // condition: prevent repetition 4 times in the row in every modes\n        let conditionUnsatisfied: boolean = true;\n        \n        // this while loop will be continue till the conditionUnsatisfied turns to false\n        while (conditionUnsatisfied) { \n            let allDirection: number[] = [];\n            let reShuffle: boolean = false;\n            Shuffle(spanSizeAndDirection); \n\n            for (let i = 0; i < spanSizeAndDirection.length; i++){\n                // push only direction mode into allDirection array\n                allDirection.push(spanSizeAndDirection[i][1]); \n                        \n                // check this array for mode value(0 or 1) 4 times repetition in the row \n                if (allDirection[i] === allDirection[i - 1] && \n                    allDirection[i] === allDirection[i - 2] && \n                    allDirection[i] === allDirection[i - 3]){\n                    // when the loop found 4 times repetition, change the reShuffle = true\n                    reShuffle = true;\n                } \n            }\n            \n            // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n            if (reShuffle === false) {\n                // change conditionUnsatisfied = false to end the while loop\n                conditionUnsatisfied = false;\n            }\n        }\n    }\n\n  function colorGenerator() {\n    if (parseInt(props.userId) % 2 == 0){ // check if userId was even or odd number\n            // even number section\n            if (spanSizeAndDirection[currTrial][1] === 0){\n                // forward : blue\n                document.documentElement.style.setProperty('--cue-color', '#0072ff'); \n                document.documentElement.style.setProperty('--cue-border-color', '#0072ff'); \n            } else {\n                // backward : yellow\n                document.documentElement.style.setProperty('--cue-color', '#ffc837'); \n                document.documentElement.style.setProperty('--cue-border-color', '#ffc837'); \n            }\n        } else {\n            // odd number section\n            if (spanSizeAndDirection[currTrial][1] === 0){\n                // forward : yellow\n                document.documentElement.style.setProperty('--cue-color', '#ffc837'); \n                document.documentElement.style.setProperty('--cue-border-color', '#ffc837'); \n            } else {\n                // backward : blue\n                document.documentElement.style.setProperty('--cue-color', '#0072ff'); \n                document.documentElement.style.setProperty('--cue-border-color', '#0072ff');\n            }\n            cueColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-color').trim();\n            cueBorderColor = getComputedStyle(document.documentElement).getPropertyValue('--cue-border-color').trim();\n        }\n    } \n\n    function seqGenerator() {\n        if (currTrial !== trialNumber) {\n            allSpan.push(spanSizeAndDirection[currTrial][0]);\n            if (genSeq.length === 0) {\n                let trialSeqGenerator: number[] = samplingFromList(allProbe, spanSizeAndDirection[currTrial][0], false);\n                genSeq = trialSeqGenerator;\n                \n                if (spanSizeAndDirection[currTrial][1] === 0){\n                    directionMode.push('forward');\n                } else {\n                    directionMode.push('backward');\n                }\n\n                timeIntervalPerTrial();\n            }\n        } \n    }\n\n  function timeIntervalPerTrial() {\n    $('.cirButton').addClass('hoverDisabled');\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"3\");\n        }, 100) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"2\");\n        }, 400)\n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"1\");\n        }, 700) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            $('#goSignal').html(\"\");\n            $('#goSignal').html(\"ตามลำดับ\");\n            colorGenerator();\n        }, 1000) \n    )\n\n    timeoutList.push(\n        setTimeout(function() {\n            popCircleButton();\n        }, 2000) \n    )\n}\n  \n  function popCircleButton(popTime = flashDuration, intervalTime = flashInterval, locationPop = allSeq) {\n      isTest = false;\n      currAns = [];\n      cueStartTime = [];\n      cueEndTime = [];\n      answerTimePerTrial = [];\n      \n      timeoutList.push(\n          setTimeout(function () {\n              $('#goSignal').html(\"\");\n              $('#goSignal').html(\"ตาคุณ\");\n              startTime = timeStart();\n              $('.cirButton').removeClass('hoverDisabled');\n              $('.cirButton').addClass('readyToClick');\n              isTest = true;\n          }, spanSizeAndDirection[currTrial][0] * ((popTime/5) + (intervalTime))) \n      )\n  \n      for (let i = 0; i < spanSizeAndDirection[currTrial][0]; i++) {\n          if (genSeq[i] === 1) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton1').addClass('pop');\n                      currSeq.push(1);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton1').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 2) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton2').addClass('pop');\n                      currSeq.push(2);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton2').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 3) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton3').addClass('pop');\n                      currSeq.push(3);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton3').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 4) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton4').addClass('pop');\n                      currSeq.push(4);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton4').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 5) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton5').addClass('pop');\n                      currSeq.push(5); \n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton5').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          }\n  \n          if (genSeq[i] === 6) {\n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton6').addClass('pop');\n                      currSeq.push(6);\n                      cueStartTime.push(thisTime());\n                  }, i * intervalTime)\n              )\n              \n              timeoutList.push(\n                  setTimeout(function () {\n                      $('#cirButton6').removeClass('pop');\n                      cueEndTime.push(thisTime());\n                  }, popTime + (i * intervalTime))\n              )\n          } \n      }\n      allSeq.push(genSeq.toString());\n  }\n\n  function runIsOver() {\n      timeoutList.push(\n          setTimeout(function () {\n              let currTrialStruct = {\n                  allSeq: allSeq,\n                  allAns: allAns,\n                  allSpan: allSpan,\n                  checkAns: checkAns,\n                  allReactionTime: allReactionTime,\n                  allReactionTrial: allReactionTrial,\n              }\n              trialStruct.push(currTrialStruct);\n              Done();\n          }, )\n      )\n  }\n\n  function Done() {\n      setIsItDone(true);\n      let end = endTime();\n      score = Math.round(sumScores);\n      trialDataResult = trialData(spanSizeAndDirection, cueDataResult, probeDataResult, answerDataResult, directionMode);\n      scoringDataResult = scoringData(trialNumber, spanMultiplier, score);\n      metricDataResult = metricData(trialNumber, summaryCorrect, spanInCorrectAns, enterStruggleTimeCount);\n      postEntryResult = postEntry(trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n      axios.post('https://hwsrv-1063269.hostwindsdns.com/exercise-api-hard/spatial-span', postEntryResult)\n            .then(function (postEntryResult) {\n                console.log(postEntryResult)\n            })\n            .catch(function (error) {\n                console.log('error')\n            });\n      saveJSONDataToClientDevice(postEntryResult, `SS_${props.userPhone}_${thisTime().toString()}`);\n  }\n\n  function cueData(currSeq: string | any[], cueColor: string, cueBorderColor: string, cueStartTime: any[], cueEndTime: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < currSeq.length; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"probeID\" : currSeq[i],\n              \"color\" : cueColor,\n              \"borderColor\" : cueBorderColor,\n              \"cueStart\" : cueStartTime[i],\n              \"cueEnd\" : cueEndTime[i],\n              \"cueDescription\" : 'color flash signal that randomly appear'\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      cueDataResult.push(obj_in_trial);\n      return cueDataResult;\n  }\n\n  function probeData(probeNumber: number, allProbe: any[], restColor: string, restBorderColor: string, probeShape: string, probeParams: string, radius: string, probeAngularPosition: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < probeNumber; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"probeID\" : allProbe[i],\n              \"restColor\" : restColor,\n              \"borderColor\" : restBorderColor,\n              \"shape\" : probeShape,\n              \"shapeParams\" : [{\n                  \"parameterName\" : probeParams,\n                  \"value\" : radius,\n                  \"unit\" : 'px'\n              }],\n              \"angularPosition\" : probeAngularPosition[i]\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      probeDataResult.push(obj_in_trial);\n      return probeDataResult;\n  }\n\n  function answerData(currAns: string | any[], answerTimePerTrial: any[]){\n      let obj_in_trial: any[] = [];\n\n      for (let i = 0; i < currAns.length; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"answer\" : currAns[i],\n              \"timestamp\" : answerTimePerTrial[i]\n          }\n          obj_in_trial.push(obj_to_append);\n      }\n      answerDataResult.push(obj_in_trial);\n      return answerDataResult;\n  }\n\n  function trialData(spanSizeAndDirection: number[][], cueDataResult: any[], probeDataResult: any[], answerDataResult: any[], directionMode: string[]){\n      \n      for (let i = 0; i < trialNumber; i++) {\n          let obj_to_append;\n          obj_to_append = {\n              \"spanSize\" : spanSizeAndDirection[i],\n              \"cueData\" : cueDataResult[i],\n              \"probeData\" : probeDataResult[i],\n              \"answerData\" : answerDataResult[i],\n              \"mode\" : 'forward'\n          }\n          trialDataResult.push(obj_to_append);\n      }\n      return trialDataResult;\n  }\n\n  function scoringData(trialNumber: number, spanMultiplier: number, score: number){\n      scoringDataResult = [{\n          \"scoringModel\" : {\n              \"scoringName\" : \"default\",\n              \"parameters\" : {\n                  \"trialNumber\" : {\n                      \"value\" : trialNumber,\n                      \"unit\" : null,\n                      \"description\" : \"Total number of trial in the test\"\n                  },\n                  \"spanMultiplier\" : {\n                      \"value\" : spanMultiplier,\n                      \"unit\" : null,\n                      \"description\" : \"Multiplier for size of span\"\n                  }\n\n              },\n              \"description\" : `score = sum of the scorePerTrial (allSpan[i] * spanMultiplier)`\n          },\n          \"score\" : score\n      }]\n      return scoringDataResult;\n  }\n\n  function metricData(trialNumber: number, summaryCorrect: number, spanInCorrectAns: any[], enterStruggleTimeCount: number){\n      spanInCorrectAns.sort((a,b) => a-b);\n      let metricName \n          = ['correctCount', \n              'incorrectCount', \n              'struggleTimeCount', \n              'highestSpan'];\n      let metricValue \n          = [summaryCorrect, \n              trialNumber - summaryCorrect, \n              null, \n              spanInCorrectAns[spanInCorrectAns.length - 1]];\n      let metricUnit = [null, null, null, null, null];\n      let metricDescription \n          = ['Total number of correct trials', \n              'Total number of incorrect trials', \n              'Total number of entered struggle loop', \n              'The highest span that user reached'];\n      for (let i = 0; i < metricName.length; i++){\n          let obj_to_append\n          obj_to_append = {\n              \"metricName\" : metricName[i],\n              \"value\" : metricValue[i],\n              \"unit\" : metricUnit[i],\n              \"description\" : metricDescription[i]\n          }\n          metricDataResult.push(obj_to_append);\n      }    \n      return metricDataResult;\n  }\n\n  function postEntry(trialDataResult: any[], gameLogicSchemeResult: { game: string; schemeName: string; version: number; variant: string; parameters: { trialNumber: { value: any; unit: null; description: string }; flashDuration: { value: any; unit: string; description: string }; flashInterval: { value: any; unit: string; description: string }; initialSpan: { value: any; unit: null; description: string }; probeNumber: { value: any; unit: null; description: string }; probeAngularPosition: { value: any; unit: string; description: string }; rampingCorrectCount: { value: any; unit: null; description: string }; maxFailStreakCount: { value: any; unit: null; description: string }; maxFailCount: { value: any; unit: null; description: string } }; description: string }, scoringDataResult: any[], metricDataResult: any[]){\n      postEntryResult = {\n        \"userId\" : props.userId,\n        \"userPhone\" : props.userPhone,\n        \"data\" : {\n            \"rawData\" : {\n                \"trialData\" : trialDataResult,\n                \"description\" : 'all important data per trial'\n            },\n            \"gameLogicScheme\" : gameLogicSchemeResult,\n            \"scoringData\" : scoringDataResult,\n            \"metricData\" : metricDataResult\n          }\n      }\n      return postEntryResult;\n  }\n\n  function summaryScore() {\n      for (let correctIndex = latestIndex; correctIndex < checkAns.length; correctIndex++) {\n          latestIndex = correctIndex;\n  \n          if (checkAns[correctIndex] === 1) {\n              scorePerTrial.push(allSpan[correctIndex] * spanMultiplier);\n              summaryCorrect++;\n              spanInCorrectAns.push(allSpan[correctIndex]);\n              hitRt.push(allReactionTrial[correctIndex]);\n          } \n      }\n\n      if (hitRt.length !== 0){\n\n          sumHitRt = hitRt.reduce((sum, time) => {\n            return sum + time;\n            });\n      }\n\n        avgHitRt = sumHitRt / 1000 / hitRt.length;\n      \n      if (hitRt.length !== 0){\n\n        sumHitRt = hitRt.reduce((sum, time) => {\n          return sum + time;\n          });\n      }\n\n      avgHitRt = sumHitRt / 1000 / hitRt.length;\n\n      if (scorePerTrial.length !== 0){\n          sumScores = scorePerTrial.reduce((sum, score) => {\n            return sum + score;\n          });\n      } else {\n        scorePerTrial.push(0);\n      }\n      \n      return sumScores;\n  }\n  \n  function timeStart() : number{\n      let startTime = new Date();\n      return startTime.getTime();\n  }\n\n  function refreshPage(){\n    window.location.reload();\n  } \n\n  function backToLandingPage() {\n    navigate('/landing');\n  }\n\n  return (\n    <div className='container-fluid'>\n        <div className='row'>\n            <div className='py-4 px-12 sm:py-8 w-full bg-blue-100 shadow-md'>\n              {<BreadCrumb />}\n            </div>\n            <div id='SSGameBody' className='col'>\n            <div className=\"SSGameBodyProgressBar\">\n              {<ProgressBar progressValue={progressValue} trialNumber={trialNumber}/>}\n            </div>\n              <div className=\"SSGameWindow\">\n                {<SSWindow checkSeq={checkSeq}/>}\n              </div>\n              <div className=\"SSGameEnterButton\"></div>\n            </div>\n        </div>\n        {isItDone ? \n        <div>\n            {<ScoreSummaryOverlay accuracy={(summaryCorrect / trialNumber) * 100} avgHitRt={avgHitRt} refreshPage={refreshPage} backToLandingPage={backToLandingPage}/>}\n        </div>\n        : null}\n        {<RotateAlert />}\n    </div>\n  )\n}\n\nexport default SSGame;\n\nfunction endTime() { \n  let d = new Date();\n  return d.getTime();\n}\n\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}