{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myCanvas;\nlet canvasContext;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B'];\nlet searchTargetList = [[{\n  description: 'สี่เหลี่ยมสีม่วง',\n  color: '#9370DB',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีเขียว',\n  color: '#B2D33D',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีส้ม',\n  color: '#F67E4B',\n  shape: 'square'\n}], [{\n  description: 'วงกลมสีม่วง',\n  color: '#9370DB',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีเขียว',\n  color: '#B2D33D',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีส้ม',\n  color: '#F67E4B',\n  shape: 'circle'\n}]];\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX;\nlet centerY;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X;\nlet Y;\nlet Xs = [];\nlet Ys = [];\nlet Xtemps = [];\nlet Ytemps = [];\nlet posId = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet preTestSetsizeAndTarget = [];\nlet postTestSetsizeAndTarget = [];\nlet middleSetsizeAndTarget = [];\nlet allSetsizeAndTarget = [];\nlet change = NaN;\nlet shapeRand = [];\nlet ori;\nlet col;\nlet oris = [];\nlet cols = [];\nlet ceilingTimeLimit = 10 * 1000;\n// let timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns = [];\nlet thatRight = '';\nlet responseText = '';\nlet countdownText = '0';\nlet timeoutList = [];\nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt = [];\nlet sumHitRt;\nlet hitRt = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness = '';\nlet total = 0;\nlet score;\nlet targetMatch = [];\nlet allStartTime = [];\nlet allClickTime = [];\nlet allCurrSS = [];\nlet gameLogicSchemeResult;\nlet summaryDataResult = [];\nlet trialDataResult = [];\nlet stimulusDataResult = [];\nlet targetDataResult = [];\nlet scoringDataResult = [];\nlet timeLimitRecord = [];\nlet setSizeRecord = [];\nlet setSizeInCorrectAns = [];\nlet metricDataResult = [];\nlet allSearchMode = [];\nlet version = '';\nlet postEntryResult;\nfunction CJSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [searchTarget, setSearchTarget] = useState();\n  const [progressValue, setProgressValue] = useState(0);\n  const [disabledButton, setDisabledButton] = useState(false);\n  const [isItDone, setIsItDone] = useState(false);\n  useEffect(() => {\n    initiateData();\n    checkStimuliColorSet();\n    createPseudorandomStimuli();\n    // gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth);\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    switchSearchMode();\n  }, [searchTarget]);\n\n  // function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth){\n  //     gameLogicSchemeResult = {\n  //         \"game\" : \"face-in-the-crowd \",\n  //         \"schemeName\" : \"default\",\n  //         \"version\" : \"1.0\",\n  //         \"variant\" : \"main\",\n  //         \"parameters\" : {\n  //             \"trialNumber\": {\n  //                 \"value\" : trialNumber,\n  //                 \"unit\" : null,\n  //                 \"description\" : \"Total number of trials\"\n  //             },\n  //             \"backgroundColor\": {\n  //                 \"value\": backgroundColor,\n  //                 \"unit\": null,\n  //                 \"description\" : \"Background color of test canvas\"\n  //             },\n  //             \"stimulusShape\" : {\n  //                 \"value\" : [\n  //                     {\n  //                         \"shapeName\": \"square\",\n  //                         \"parameters\": {\n  //                             \"squareWidth\" : {\n  //                                 \"value\": squareWidth,\n  //                                 \"unit\": \"px\",\n  //                                 \"description\" : \"Square stimulus width\"\n  //                             }\n  //                         },\n  //                         \"description\" : \"Square stimulus\"\n  //                     }, \n  //                     {\n  //                         \"shapeName\": \"circle\",\n  //                         \"parameters\": {\n  //                             \"radius\" : {\n  //                                 \"value\": radius,\n  //                                 \"unit\": \"px\",\n  //                                 \"description\" : \"Circle stimulus radius\"\n  //                             }\n  //                         },\n  //                         \"description\" : \"Circle stimulus\"\n  //                     }\n  //                 ],\n  //                 \"unit\" : null,\n  //                 \"description\" : \"Set of possible stimulus shape\"\n  //             },\n  //             \"stimulusColor\": {\n  //                 \"value\" : stimulusColor,\n  //                 \"unit\" : null,\n  //                 \"description\" : \"Set of possible stimulus color\"\n  //             },\n  //             \"positionJitter\" : {\n  //                 \"value\": positionJitter,\n  //                 \"unit\": \"px\",\n  //                 \"description\": \"Amplitude of spatial jittering in each axis\"\n  //             },\n  //             \"XblockNumber\": {\n  //                 \"value\": XblockNumber,\n  //                 \"unit\": null,\n  //                 \"description\": \"Number of horizontal blocks composing the canvas\"\n  //             },\n  //             \"YblockNumber\": {\n  //                 \"value\": YblockNumber,\n  //                 \"unit\": null,\n  //                 \"description\": \"Number of vertical blocks composing the canvas\"\n  //             },\n  //             \"canvasProperty\" : {\n  //                 \"canvasHeight\" : {\n  //                     \"value\" : canvasHeight,\n  //                     \"unit\" : \"px\",\n  //                     \"description\" : \"Height of canvas\"\n  //                 },\n  //                 \"canvasWidth\" : {\n  //                     \"value\" : canvasWidth,\n  //                     \"unit\" : \"px\",\n  //                     \"description\" : \"Width of canvas\"\n  //                 }\n  //             },\n  //         },\n  //         \"description\" : \"face-in-the-crowd-1.0 search default scheme\"\n  //     }\n  //     return gameLogicSchemeResult;\n  // }\n\n  function initiateData() {\n    hitRt = [];\n    allRt = [];\n    currSS = 2;\n    ceilingSS = 0;\n    latestHitRtIndex = 0;\n    comboCount = [];\n    correctButLateCount = 0;\n    incorrectCount = 0;\n    count = 0;\n    currTrial = 0;\n    Xtemps = [];\n    Xs = [];\n    Ytemps = [];\n    Ys = [];\n    posId = [];\n    trialDataResult = [];\n  }\n  function checkStimuliColorSet() {\n    const colorSet = props.userId % 4;\n    if (props.userId % 2 === 0) {\n      // ถ้า userId เป็นเลขคู่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 0,\n          col: colorSet\n        });\n      } else if (window.location.href.includes('face-in-the-crowd-B')) {\n        setSearchTarget({\n          shape: 1,\n          col: (colorSet + 1) % 4\n        });\n      }\n    } else {\n      // ถ้า userId เป็นเลขคี่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 1,\n          col: colorSet\n        });\n      } else if (window.location.href.includes('face-in-the-crowd-B')) {\n        setSearchTarget({\n          shape: 0,\n          col: (colorSet + 1) % 4\n        });\n      }\n    }\n  }\n  function createPseudorandomStimuli() {\n    preTestSetsizeAndTarget = [];\n    postTestSetsizeAndTarget = [];\n    middleSetsizeAndTarget = [];\n    allSetsizeAndTarget = [];\n    let allSetsizeRange = [31];\n    let trialsPerSetsize = 12;\n    let targetCondition = 2; // target appear or disappear\n    let trialsPerCondition = trialsPerSetsize / targetCondition;\n    let miniBlocks = 6; // in middle blocks \n    let trialsPerBlock = trialsPerSetsize / miniBlocks; // จำนวน trials ต่อ mini-block\n    let probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0]; // โอกาสการปรากฏของ 1 ในแต่ละ mini-block\n\n    // conjunction search pre-test and post-test\n    for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n      for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n        for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n          preTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n          postTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n        }\n      }\n    }\n    Shuffle(preTestSetsizeAndTarget);\n    Shuffle(postTestSetsizeAndTarget);\n\n    // รวม preTestSetsizeAndTarget กับ postTestSetsizeAndTarget เข้าด้วยกัน\n    allSetsizeAndTarget = [...preTestSetsizeAndTarget, ...postTestSetsizeAndTarget];\n    if (window.location.href.includes('face-in-the-crowd-A')) {\n      probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0];\n    } else {\n      probabilities.reverse();\n    }\n\n    // feature search + conjunction search 6 mini-blocks \n    // ก่อนจะแทรก middleSetsizeAndTarget เช็คให้ชัวร์ก่อนว่า allSetsizeAndTarget มีครบทั้ง pre และ post-test\n    if (allSetsizeAndTarget.length === preTestSetsizeAndTarget.length + postTestSetsizeAndTarget.length) {\n      probabilities.slice(0, miniBlocks).forEach(probability => {\n        const targetAppear = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n        const targetAbsent = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n\n        // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ feature search\n        const featureArray = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n\n        // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ conjunction search (0 และ 1 อย่างละครึ่ง)\n        const conjunctionArray = Array(trialsPerBlock / 2).fill(0).concat(Array(trialsPerBlock / 2).fill(1));\n\n        // สุ่มให้คละกัน\n        Shuffle(featureArray);\n        Shuffle(conjunctionArray);\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n          for (let iTarget = 0; iTarget < featureArray.length; iTarget++) {\n            middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], featureArray[iTarget], 0]);\n          }\n          for (let iTarget = 0; iTarget < conjunctionArray.length; iTarget++) {\n            middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], conjunctionArray[iTarget], 1]);\n          }\n        }\n      });\n\n      // หา index ตรงกลางของ allSetsizeAndTarget เพื่อแทรก middleSetsizeAndTarget เข้าไป\n      const middleIndex = Math.floor(allSetsizeAndTarget.length / 2); // ตำแหน่งกลางของ array\n      allSetsizeAndTarget.splice(middleIndex, 0, ...middleSetsizeAndTarget);\n    }\n\n    // กำหนดค่า trialNumber ให้เท่ากับจำนวนข้อทั้งหมด\n    trialNumber = allSetsizeAndTarget.length;\n    console.log(trialNumber);\n  }\n  function switchSearchMode() {\n    if (searchTarget) {\n      oris = [];\n      cols = [];\n      if (allSetsizeAndTarget[currTrial][2] === 0) {\n        // feature search\n        allSearchMode.push('feature search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(0);\n        }\n        ;\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(1);\n          }\n          ;\n        }\n      } else {\n        // conjunction search\n        allSearchMode.push('conjunction search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(1);\n        }\n        ;\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(1);\n          }\n          ;\n        }\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n      }\n\n      // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n      if (currTrial === 0) {\n        // create only one time when the game started\n        createCanvas();\n      } else if (currTrial === trialNumber / 4 || currTrial === trialNumber / 4 * 3) {\n        timeIntervalPerBlock();\n      } else {\n        initialT(0, allSetsizeAndTarget[currTrial][0]);\n      }\n    }\n  }\n  function createCanvas() {\n    myCanvas = document.getElementById(\"myCanvas\");\n    canvasContext = myCanvas.getContext(\"2d\");\n    centerX = myCanvas.width / 2;\n    centerY = myCanvas.height / 2;\n    for (var ix = 0; ix < XblockNumber; ix++) {\n      Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n    }\n    for (var iy = 0; iy < YblockNumber; iy++) {\n      Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n    }\n    for (ix = 0; ix < XblockNumber; ix++) {\n      for (iy = 0; iy < YblockNumber; iy++) {\n        Xs.push(Xtemps[ix]);\n        Ys.push(Ytemps[iy]);\n        posId.push(count);\n        count++;\n      }\n    }\n    myCanvas.hidden = false;\n    timeIntervalPerBlock();\n  }\n  function initialT(_waittime, SS) {\n    setDisabledButton(false);\n    setSizeRecord.push(SS);\n    // timeLimitRecord.push(timeLimit);\n    if (!ceilingSS) {\n      ceilingSS = SS + 1;\n    }\n    ;\n    vismem.erase(canvasContext);\n    vismem.clear();\n    allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n    shuffleSS(SS);\n    targetData(squareWidth, ori, col);\n    makeBackground(backgroundColor);\n    makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n    // stimulusData(realX, realY, squareWidth, ori, col);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let dT = new Date();\n    STT = dT.getTime();\n    allStartTime.push(thisTime());\n  }\n  function shuffleSS(setSize) {\n    Shuffle(posId);\n    X = [];\n    for (let ix = 0; ix < setSize + 1; ix++) {\n      X.push(Xs[posId[ix]]);\n    }\n    ;\n    Y = [];\n    for (let iy = 0; iy < setSize + 1; iy++) {\n      Y.push(Ys[posId[iy]]);\n    }\n    ;\n    ori = [];\n    for (let j = 0; j < setSize; j++) {\n      ori.push(oris[j]);\n    }\n    ;\n    col = [];\n    for (let j = 0; j < setSize; j++) {\n      col.push(stimulusColor[cols[j]]);\n    }\n    ;\n\n    // check if this trial is feature or conjunction search\n    if (allSetsizeAndTarget[currTrial][2] === 0) {\n      // feature search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        if (oris[setSize] === 0) {\n          ori.push(1);\n        } else {\n          ori.push(1);\n        }\n        if (cols[setSize] === 0) {\n          col.push(stimulusColor[2]);\n        } else if (cols[setSize] === 1) {\n          col.push(stimulusColor[3]);\n        } else if (cols[setSize] === 2) {\n          col.push(stimulusColor[0]);\n        } else if (cols[setSize] === 3) {\n          col.push(stimulusColor[1]);\n        }\n      }\n    } else {\n      // conjunction search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        if (oris[setSize] === 0) {\n          ori.push(1);\n        } else {\n          ori.push(1);\n        }\n        if (cols[setSize] === 0) {\n          col.push(stimulusColor[2]);\n        } else if (cols[setSize] === 1) {\n          col.push(stimulusColor[3]);\n        } else if (cols[setSize] === 2) {\n          col.push(stimulusColor[0]);\n        } else if (cols[setSize] === 3) {\n          col.push(stimulusColor[1]);\n        }\n      }\n    }\n  }\n  function makeBackground(backgroundColor) {\n    // Fill background\n    vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n  }\n  let realX = [];\n  let realY = [];\n  function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n    for (let i = 0; i < orienVec.length; i++) {\n      if (orienVec[i] === shapeRand[0]) {\n        vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n      } else {\n        vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n      }\n      realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n      realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n    }\n    if (searchTarget) {\n      // Find Target from Object\n      let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col]);\n      change = find ? 1 : 0;\n      targetMatch.push(find ? true : false);\n    }\n  }\n  function targetData(width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    let obj_to_append;\n    if (shapeRand[0] === 1) {\n      thisShape = \"circle\";\n      thisParameterName = \"radius\";\n      thisValue = radius;\n    } else {\n      thisShape = \"square\";\n      thisParameterName = \"width\";\n      thisValue = width;\n    }\n    if (searchTarget) {\n      obj_to_append = {\n        \"shape\": thisShape,\n        \"shapeParams\": {\n          \"parameterName\": thisParameterName,\n          \"value\": thisValue,\n          \"unit\": \"px\"\n        },\n        \"color\": stimulusColor[searchTarget.col]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n    return targetDataResult;\n  }\n\n  // function stimulusData(x, y, width, ori, col) {\n  //     let thisShape = \"\";\n  //     let thisParameterName = \"\";\n  //     let thisValue = 0;\n  //     let obj_in_trial: any[] = [];\n\n  //     for (let i = 0; i < col.length; i++){\n  //         let obj_to_append;\n  //         if (ori[i] === shapeRand[0]) {\n  //             thisShape = \"circle\";\n  //             thisParameterName = \"radius\";\n  //             thisValue = radius;\n  //         } else {\n  //             thisShape = \"square\";\n  //             thisParameterName = \"width\";\n  //             thisValue = width;\n  //         }\n  //             obj_to_append = {\n  //             \"type\" : \"distractor\",\n  //             \"display\" : {\n  //                 \"shape\" : thisShape,\n  //                 \"shapeParams\" : {\n  //                     \"parameterName\" : thisParameterName,\n  //                     \"value\" : thisValue,\n  //                     \"unit\" : \"px\"\n  //                 },\n  //                 \"color\" : col[i]\n  //             },\n  //             \"position\" : {\n  //                 \"x\" : {\n  //                     \"value\" : x[i],\n  //                     \"unit\" : \"px\"\n  //                 },\n  //                 \"y\" : {\n  //                     \"value\" : y[i],\n  //                     \"unit\" : \"px\"\n  //                 }\n  //             }\n  //         }   \n  //         obj_in_trial.push(obj_to_append);\n  //     }\n  //     obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n  //     stimulusDataResult.push(obj_in_trial);\n  //     return stimulusDataResult;\n  // }\n\n  function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode) {\n    let thisAns;\n    let obj_in_trial = [];\n    for (let i = 0; i < targetMatch.length; i++) {\n      let obj_to_append;\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        thisAns = true;\n      } else {\n        thisAns = false;\n      }\n      obj_to_append = {\n        \"hasTarget\": targetMatch[i],\n        \"startTime\": allStartTime[i],\n        \"setSize\": allCurrSS[i] + 1,\n        \"answerTime\": allClickTime[i],\n        \"hasTargetAnswerBool\": thisAns,\n        \"stimulusData\": stimulusDataResult[i],\n        \"mode\": allSearchMode[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n    return trialDataResult;\n  }\n  function checkResp(foo) {\n    setProgressValue(progressValue + 1);\n    clickSound();\n    let dT2 = new Date();\n    ET = dT2.getTime();\n    allClickTime.push(thisTime());\n    let rt = ET - STT;\n    allRt.push(rt);\n    if (change === foo) {\n      combo2Sound();\n      // if (rt < timeLimit) {\n      trackRecord = trackRecord + 1;\n      thatRight = 'right';\n      checkAns.push(thatRight);\n      hitRt.push(rt);\n      if (levelUpCount === 0) {\n        comboCount.push(0);\n      } else if (levelUpCount === 1) {\n        comboCount.push(1);\n      } else if (levelUpCount === 2) {\n        comboCount.push(2);\n      } else if (levelUpCount === 3) {\n        comboCount.push(3);\n      } else if (levelUpCount === 4) {\n        comboCount.push(4);\n      } else if (levelUpCount === 5) {\n        comboCount.push(5);\n      }\n      // } else {\n      //     combo2Sound();\n      //     thatRight = 'late';\n      //     trackRecord = 0;\n      //     checkAns.push(thatRight);\n      //     correctButLateCount++;\n      // }\n    } else {\n      losingSound();\n      thatRight = 'wrong';\n      trackRecord = 0;\n      checkAns.push(thatRight);\n      incorrectCount++;\n    }\n    trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n    trialIsOver();\n  }\n  function trialIsOver() {\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    if (trackRecord >= NupNdown) {\n      if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        if (levelUpCount === 5) {\n          levelUpCount = 5;\n        } else {\n          levelUpCount++;\n        }\n      } else {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        // timeLimit = timeLimit - timeLimitDeclineStep;\n      }\n    }\n\n    // if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n    //     timeLimit = timeLimit + timeLimitInclineStep;\n    //     if (timeLimit > ceilingTimeLimit) {\n    //         timeLimit = ceilingTimeLimit;\n    //     }\n    // }\n    currTrial = currTrial + 1;\n    if (currTrial >= trialNumber) {\n      // summaryScore();\n      Done();\n    } else {\n      trialConclude();\n    }\n  }\n  function trialConclude() {\n    setDisabledButton(true);\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let textHeight = 0;\n    if (thatRight === 'wrong') {\n      responseText = \"ผิด\";\n      textHeight = 36;\n    } else {\n      responseText = \"ถูก\";\n      textHeight = 20;\n    }\n    canvasContext.font = \"120px Sarabun\";\n    let textWidth = canvasContext.measureText(responseText).width;\n    timeoutList.push(setTimeout(function () {\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 100), setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 600), setTimeout(function () {\n      switchSearchMode();\n    }, 900));\n  }\n  function timeIntervalPerBlock() {\n    setDisabledButton(true);\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n\n    // ทำเพื่อให้ textWidth คำนวนค่าได้ก่อนที่ 3 2 1 จะขึ้น\n    timeoutList.push(setTimeout(function () {\n      countdownText = '0';\n    }, 100));\n    let textHeight = 36;\n    canvasContext.font = \"120px Sarabun\";\n    let textWidth = canvasContext.measureText(countdownText).width;\n    timeoutList.push(setTimeout(function () {\n      countdownText = '3';\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 200));\n    timeoutList.push(setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 900));\n    timeoutList.push(setTimeout(function () {\n      countdownText = '2';\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 1200));\n    timeoutList.push(setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 1900));\n    timeoutList.push(setTimeout(function () {\n      countdownText = '1';\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 2200));\n    timeoutList.push(setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 2900));\n    timeoutList.push(setTimeout(function () {\n      initialT(0, allSetsizeAndTarget[currTrial][0]);\n    }, 3200));\n  }\n\n  // function summaryScore() {\n  //     for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n  //         latestHitRtIndex = correctIndex;\n  //         let rtScore = rtBound - hitRt[correctIndex];\n  //         let comboMultiplier = 0;\n  //         if (comboCount[correctIndex] === 0) {\n  //             comboMultiplier = 1;\n  //         } else if (comboCount[correctIndex] === 1) {\n  //             comboMultiplier = 1.05;\n  //         } else if (comboCount[correctIndex] === 2) {\n  //             comboMultiplier = 1.10;\n  //         } else if (comboCount[correctIndex] === 3) {\n  //             comboMultiplier = 1.20;\n  //         } else if (comboCount[correctIndex] === 4) {\n  //             comboMultiplier = 1.50;\n  //         } else if (comboCount[correctIndex] === 5) {\n  //             comboMultiplier = 2.00;\n  //         }\n  //         rtScore *= comboMultiplier;\n  //         scorePerTrial.push(rtScore);\n  //     }\n  //     sumScores = scorePerTrial.reduce((sum, score) => {\n  //         return sum + score;\n  //     });\n\n  //     sumRt = allRt.reduce((sum, scores) => {\n  //         return sum + scores;\n  //     });\n\n  //     if (hitRt.length !== 0){\n  //         sumHitRt = hitRt.reduce((sum, score) => {\n  //             return sum + score;\n  //         });\n  //     } else {\n  //         hitRt.push(0);\n  //         sumHitRt = hitRt;\n  //     }\n\n  //     avgHitRt = sumHitRt / 1000 / hitRt.length;\n  //     if (avgHitRt < 1) {\n  //         swiftness = \"เร็วมาก\";\n  //     }\n  //     else if (avgHitRt < 2) {\n  //         swiftness = \"เร็ว\";\n  //     }\n  //     else {\n  //         swiftness = \"ปานกลาง\";\n  //     }\n\n  //     total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n\n  //     return total;\n  // }\n\n  function Done() {\n    if (window.location.href.includes('face-in-the-crowd-A')) {\n      version = 'face-in-the-crowd-A-1.0';\n    } else {\n      version = 'face-in-the-crowd-B-1.0';\n    }\n    setIsItDone(true);\n    score = total;\n    // scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n    // metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, hitRt, avgHitRt, swiftness);\n    // postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    // axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult)\n    //     .then(function (postEntryResult) {\n    //         console.log(postEntryResult)\n    //     })\n    //     .catch(function (error) {\n    //         console.log('error')\n    //     });\n    console.log(postEntryResult);\n    postEntryResult = postEntry();\n    saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_${version}_${thisTime().toString()}`);\n    backToLanding();\n  }\n\n  // function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total){\n  //     scoringDataResult = [{\n  //         \"scoringModel\" : {\n  //             \"scoringName\" : \"default\",\n  //             \"parameters\" : {\n  //                 \"rtBound\" : {\n  //                     \"value\" : rtBound,\n  //                     \"unit\" : null,\n  //                     \"description\" : \"rtBound - hitRt = rtScore\"\n  //                 },\n  //                 \"incorrectMultiplier\" : {\n  //                     \"value\" : incorrectMultiplier,\n  //                     \"unit\" : null,\n  //                     \"description\" : \"Multiplier for incorrectCount\"\n  //                 },\n  //                 \"lateMultiplier\" : {\n  //                     \"value\" : lateMultiplier,\n  //                     \"unit\" : null,\n  //                     \"description\" : \"Multiplier for correctButLateCount\"\n  //                 },\n  //                 \"scoresMultiplier\" : {\n  //                     \"value\" : scoresMultiplier,\n  //                     \"unit\" : null,\n  //                     \"description\" : \"Multiplier for total score\"\n  //                 },\n  //                 \"trialNumber\" : {\n  //                     \"value\" : trialNumber,\n  //                     \"unit\" : null,\n  //                     \"description\" : \"Total number of trials\"\n  //                 }\n  //             },\n  //             \"description\" : `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n  //         },\n  //         \"score\" : total\n  //     }]\n  //     return scoringDataResult;\n  // }\n\n  // function metricData(trialNumber, incorrectCount, correctButLateCount, hitRt, avgHitRt, swiftness){\n  //     timeLimitRecord.sort((a,b) => a-b);\n  //     hitRt.sort((a,b) => a-b);\n  //     let metricName \n  //         = ['correctCount', \n  //            'incorrectCount', \n  //            'correctButLateCount',  \n  //            'fastestHitReactionTime', \n  //            'averageHitReactionTime', \n  //            'swiftness',];\n  //     let metricValue \n  //         = [trialNumber - incorrectCount, \n  //            incorrectCount, \n  //            correctButLateCount, \n  //            hitRt[0], \n  //            avgHitRt, \n  //            swiftness,];\n  //     let metricUnit = [null, null, null, 'ms', 's', null,];\n  //     let metricDescription \n  //         = ['Total number of correct trials', \n  //            'Total number of incorrect trials', \n  //            'Total number of correct but late trials', \n  //            'The fastest hit reaction time that user reached', \n  //            'The average of all hit reaction time', \n  //            'The quality of all hit reaction time',];\n  //     for (let i = 0; i < metricName.length; i++){\n  //         let obj_to_append\n  //         obj_to_append = {\n  //             \"metricName\" : metricName[i],\n  //             \"value\" : metricValue[i],\n  //             \"unit\" : metricUnit[i],\n  //             \"description\" : metricDescription[i]\n  //         }\n  //         metricDataResult.push(obj_to_append);\n  //     }    \n  //     return metricDataResult;\n  // }\n\n  // function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult){\n  //     postEntryResult = {\n  //         \"date\" : `${thisTime().toString()}`,\n  //         \"userId\" : props.userId,\n  //         \"userSession\" : version,\n  //         \"data\" : {\n  //             \"rawData\" : {\n  //                 \"target\" : targetDataResult,\n  //                 \"trialData\" : trialDataResult\n  //             },\n  //             \"gameLogicScheme\" : gameLogicSchemeResult,\n  //             \"scoringData\" : scoringDataResult,\n  //             \"metricData\" : metricDataResult\n  //         }\n  //     }\n  //     return postEntryResult;\n  // }\n\n  function postEntry() {\n    postEntryResult = {\n      \"date\": `${thisTime().toString()}`,\n      \"userId\": props.userId,\n      \"userSession\": version,\n      \"target\": targetDataResult,\n      \"trialData\": trialDataResult\n    };\n    return postEntryResult;\n  }\n  function backToLanding() {\n    navigate('/landing');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full bg-slate-50 flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center flex-grow p-5\",\n      children: [/*#__PURE__*/_jsxDEV(CJSWindow, {\n        searchTarget: searchTarget,\n        searchTargetList: searchTargetList,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(CJSButton, {\n        searchTarget: searchTarget,\n        disabledButton: disabledButton,\n        checkResp: checkResp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1016,\n    columnNumber: 9\n  }, this);\n}\n_s(CJSGame, \"+sJIq0+3HoeZEarSpvFcu+3HJK8=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = CJSGame;\nexport default CJSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"CJSGame\");","map":{"version":3,"names":["useEffect","useState","useNavigate","CJSWindow","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","moment","Shuffle","vismem","CJSButton","saveJSONDataToClientDevice","jsxDEV","_jsxDEV","myCanvas","canvasContext","trialNumber","currTrial","backgroundColor","stimulusColor","searchTargetList","description","color","shape","canvasWidth","canvasHeight","squareWidth","squareHeight","radius","positionJitter","centerX","centerY","Xspan","Yspan","XblockNumber","YblockNumber","Xblock","Yblock","X","Y","Xs","Ys","Xtemps","Ytemps","posId","maxSS","Math","floor","ceilingSS","currSS","initialSetSize","preTestSetsizeAndTarget","postTestSetsizeAndTarget","middleSetsizeAndTarget","allSetsizeAndTarget","change","NaN","shapeRand","ori","col","oris","cols","ceilingTimeLimit","timeLimitDeclineStep","timeLimitInclineStep","checkAns","thatRight","responseText","countdownText","timeoutList","count","NupNdown","trackRecord","levelUpCount","STT","ET","sumRt","allRt","sumHitRt","hitRt","latestHitRtIndex","correctButLateCount","lateMultiplier","incorrectCount","incorrectMultiplier","scorePerTrial","sumScores","scoresMultiplier","comboCount","rtBound","avgHitRt","swiftness","total","score","targetMatch","allStartTime","allClickTime","allCurrSS","gameLogicSchemeResult","summaryDataResult","trialDataResult","stimulusDataResult","targetDataResult","scoringDataResult","timeLimitRecord","setSizeRecord","setSizeInCorrectAns","metricDataResult","allSearchMode","version","postEntryResult","CJSGame","props","_s","navigate","clickSound","combo2Sound","losingSound","searchTarget","setSearchTarget","progressValue","setProgressValue","disabledButton","setDisabledButton","isItDone","setIsItDone","initiateData","checkStimuliColorSet","createPseudorandomStimuli","forEach","tm","clearTimeout","switchSearchMode","colorSet","userId","window","location","href","includes","allSetsizeRange","trialsPerSetsize","targetCondition","trialsPerCondition","miniBlocks","trialsPerBlock","probabilities","iSetsize","length","iRep","iTarget","push","reverse","slice","probability","targetAppear","round","targetAbsent","featureArray","Array","fill","concat","conjunctionArray","middleIndex","splice","console","log","j","k","createCanvas","timeIntervalPerBlock","initialT","document","getElementById","getContext","width","height","ix","iy","hidden","_waittime","SS","erase","clear","shuffleSS","targetData","makeBackground","makeSearchArray","drawObjects","objects","dT","Date","getTime","thisTime","setSize","makeRectangle","realX","realY","numarrayX","numarrayY","orienVec","colorVec","i","makeCircle","random","find","x","id","thisShape","thisParameterName","thisValue","obj_in_trial","obj_to_append","trialData","thisAns","checkResp","foo","dT2","rt","trialIsOver","Done","trialConclude","textHeight","font","textWidth","measureText","setTimeout","text","makeText","drawText","postEntry","toString","backToLanding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","endTime","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveCSVDataToClientDevice, saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\n\nlet myCanvas: HTMLCanvasElement;\nlet canvasContext: CanvasRenderingContext2D;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B']; \nlet searchTargetList: any[][] = [\n    [\n        {description: 'สี่เหลี่ยมสีม่วง', color: '#9370DB', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีฟ้า', color: '#3CB4C6', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีเขียว', color: '#B2D33D', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีส้ม', color: '#F67E4B', shape: 'square'},\n    ],\n    [\n        {description: 'วงกลมสีม่วง', color: '#9370DB', shape: 'circle'},\n        {description: 'วงกลมสีฟ้า', color: '#3CB4C6', shape: 'circle'},\n        {description: 'วงกลมสีเขียว', color: '#B2D33D', shape: 'circle'},\n        {description: 'วงกลมสีส้ม', color: '#F67E4B', shape: 'circle'}\n    ],\n    \n]\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX: number;\nlet centerY: number;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X: number[]\nlet Y: number[]\nlet Xs: number[] = [];\nlet Ys: number[] = [];\nlet Xtemps: number[] = [];\nlet Ytemps: number[] = [];\nlet posId: number[] = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet preTestSetsizeAndTarget: number[][] = [];\nlet postTestSetsizeAndTarget: number[][] = [];\nlet middleSetsizeAndTarget: number[][] = [];\nlet allSetsizeAndTarget: number[][] = [];\nlet change = NaN;\nlet shapeRand: number[] = [];\nlet ori: number[]\nlet col: string[]\nlet oris: number[] = [];\nlet cols: number[] = [];\nlet ceilingTimeLimit = 10 * 1000;\n// let timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns: string[] = [];\nlet thatRight: string = '';\nlet responseText: string = '';\nlet countdownText: string = '0';\nlet timeoutList: any[] = []; \nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt: number[] = [];\nlet sumHitRt;\nlet hitRt: number[] = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount: number[] = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet swiftness: string = '';\nlet total: number = 0;\nlet score: number;\nlet targetMatch: boolean[] = [];\nlet allStartTime: string[] = [];\nlet allClickTime: string[] = [];\nlet allCurrSS: number[] = [];\nlet gameLogicSchemeResult;\nlet summaryDataResult: any[] = [];\nlet trialDataResult: any[] = [];\nlet stimulusDataResult: any[] = [];\nlet targetDataResult: any[] = [];\nlet scoringDataResult: any[] = [];\nlet timeLimitRecord: any[] = [];\nlet setSizeRecord: any[] = [];\nlet setSizeInCorrectAns: any[] = [];\nlet metricDataResult: any[] = [];\nlet allSearchMode: string[] = [];\nlet version = '';\nlet postEntryResult;\n\nfunction CJSGame(props): any {\n    const navigate = useNavigate();\n    const [clickSound] = useSound(clickSoundSrc);\n    const [combo2Sound] = useSound(combo2SoundSrc);\n    const [losingSound] = useSound(losingSoundSrc);\n    const [searchTarget, setSearchTarget] = useState<{ shape: number, col: number }>();\n    const [progressValue, setProgressValue] = useState(0);\n    const [disabledButton, setDisabledButton] = useState(false);\n    const [isItDone, setIsItDone] = useState(false);\n\n        useEffect(() => {\n            initiateData();\n            checkStimuliColorSet();\n            createPseudorandomStimuli();\n            // gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth);\n            return() => {\n                timeoutList.forEach(tm => {\n                    clearTimeout(tm);\n                })\n            };\n        }, [])\n\n        useEffect(() => {\n            switchSearchMode();\n        }, [searchTarget])\n\n    // function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, canvasHeight, canvasWidth){\n    //     gameLogicSchemeResult = {\n    //         \"game\" : \"face-in-the-crowd \",\n    //         \"schemeName\" : \"default\",\n    //         \"version\" : \"1.0\",\n    //         \"variant\" : \"main\",\n    //         \"parameters\" : {\n    //             \"trialNumber\": {\n    //                 \"value\" : trialNumber,\n    //                 \"unit\" : null,\n    //                 \"description\" : \"Total number of trials\"\n    //             },\n    //             \"backgroundColor\": {\n    //                 \"value\": backgroundColor,\n    //                 \"unit\": null,\n    //                 \"description\" : \"Background color of test canvas\"\n    //             },\n    //             \"stimulusShape\" : {\n    //                 \"value\" : [\n    //                     {\n    //                         \"shapeName\": \"square\",\n    //                         \"parameters\": {\n    //                             \"squareWidth\" : {\n    //                                 \"value\": squareWidth,\n    //                                 \"unit\": \"px\",\n    //                                 \"description\" : \"Square stimulus width\"\n    //                             }\n    //                         },\n    //                         \"description\" : \"Square stimulus\"\n    //                     }, \n    //                     {\n    //                         \"shapeName\": \"circle\",\n    //                         \"parameters\": {\n    //                             \"radius\" : {\n    //                                 \"value\": radius,\n    //                                 \"unit\": \"px\",\n    //                                 \"description\" : \"Circle stimulus radius\"\n    //                             }\n    //                         },\n    //                         \"description\" : \"Circle stimulus\"\n    //                     }\n    //                 ],\n    //                 \"unit\" : null,\n    //                 \"description\" : \"Set of possible stimulus shape\"\n    //             },\n    //             \"stimulusColor\": {\n    //                 \"value\" : stimulusColor,\n    //                 \"unit\" : null,\n    //                 \"description\" : \"Set of possible stimulus color\"\n    //             },\n    //             \"positionJitter\" : {\n    //                 \"value\": positionJitter,\n    //                 \"unit\": \"px\",\n    //                 \"description\": \"Amplitude of spatial jittering in each axis\"\n    //             },\n    //             \"XblockNumber\": {\n    //                 \"value\": XblockNumber,\n    //                 \"unit\": null,\n    //                 \"description\": \"Number of horizontal blocks composing the canvas\"\n    //             },\n    //             \"YblockNumber\": {\n    //                 \"value\": YblockNumber,\n    //                 \"unit\": null,\n    //                 \"description\": \"Number of vertical blocks composing the canvas\"\n    //             },\n    //             \"canvasProperty\" : {\n    //                 \"canvasHeight\" : {\n    //                     \"value\" : canvasHeight,\n    //                     \"unit\" : \"px\",\n    //                     \"description\" : \"Height of canvas\"\n    //                 },\n    //                 \"canvasWidth\" : {\n    //                     \"value\" : canvasWidth,\n    //                     \"unit\" : \"px\",\n    //                     \"description\" : \"Width of canvas\"\n    //                 }\n    //             },\n    //         },\n    //         \"description\" : \"face-in-the-crowd-1.0 search default scheme\"\n    //     }\n    //     return gameLogicSchemeResult;\n    // }\n\n    function initiateData() {\n        hitRt = [];\n        allRt = [];\n        currSS = 2;\n        ceilingSS = 0;\n        latestHitRtIndex = 0;\n        comboCount = [];\n        correctButLateCount = 0;\n        incorrectCount = 0;\n        count = 0;\n        currTrial = 0;\n        Xtemps = [];\n        Xs = [];\n        Ytemps = [];\n        Ys = [];\n        posId = [];\n        trialDataResult = [];\n    }\n\n    function checkStimuliColorSet(){\n        const colorSet = props.userId % 4; \n        if (props.userId % 2 === 0){ // ถ้า userId เป็นเลขคู่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 0, col: colorSet });\n            } else if (window.location.href.includes('face-in-the-crowd-B')){\n                setSearchTarget({ shape: 1, col: (colorSet + 1) % 4 });\n            }\n            \n        } else { // ถ้า userId เป็นเลขคี่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 1, col: colorSet });\n            } else if (window.location.href.includes('face-in-the-crowd-B')) {\n                setSearchTarget({ shape: 0, col: (colorSet + 1) % 4  });\n            }\n        }\n    }\n\n    function createPseudorandomStimuli() {\n        preTestSetsizeAndTarget = [];\n        postTestSetsizeAndTarget = [];\n        middleSetsizeAndTarget = [];\n        allSetsizeAndTarget = [];\n        let allSetsizeRange = [31];\n        let trialsPerSetsize = 12; \n        let targetCondition = 2; // target appear or disappear\n        let trialsPerCondition = trialsPerSetsize / targetCondition; \n        let miniBlocks = 6; // in middle blocks \n        let trialsPerBlock = trialsPerSetsize / miniBlocks; // จำนวน trials ต่อ mini-block\n        let probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0]; // โอกาสการปรากฏของ 1 ในแต่ละ mini-block\n\n        // conjunction search pre-test and post-test\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n            for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n                for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n                    preTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n                    postTestSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1]);\n                }\n            }\n        }\n        Shuffle(preTestSetsizeAndTarget); \n        Shuffle(postTestSetsizeAndTarget); \n\n        // รวม preTestSetsizeAndTarget กับ postTestSetsizeAndTarget เข้าด้วยกัน\n        allSetsizeAndTarget = [...preTestSetsizeAndTarget, ...postTestSetsizeAndTarget];\n\n        if (window.location.href.includes('face-in-the-crowd-A')){\n            probabilities = [1.0, 0.8, 0.6, 0.4, 0.2, 0.0];\n        } else {\n            probabilities.reverse();\n        }\n\n        // feature search + conjunction search 6 mini-blocks \n        // ก่อนจะแทรก middleSetsizeAndTarget เช็คให้ชัวร์ก่อนว่า allSetsizeAndTarget มีครบทั้ง pre และ post-test\n        if (allSetsizeAndTarget.length === preTestSetsizeAndTarget.length + postTestSetsizeAndTarget.length) {\n            probabilities.slice(0, miniBlocks).forEach(probability => {\n                const targetAppear: number = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n                const targetAbsent: number = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n    \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ feature search\n                const featureArray: number[] = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n    \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ conjunction search (0 และ 1 อย่างละครึ่ง)\n                const conjunctionArray: number[] = Array(trialsPerBlock / 2).fill(0).concat(Array(trialsPerBlock / 2).fill(1));\n    \n                // สุ่มให้คละกัน\n                Shuffle(featureArray)\n                Shuffle(conjunctionArray)\n    \n                for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n                    for (let iTarget = 0; iTarget < featureArray.length; iTarget++) {\n                        middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], featureArray[iTarget], 0])\n                    }\n    \n                    for (let iTarget = 0; iTarget < conjunctionArray.length; iTarget++) {\n                        middleSetsizeAndTarget.push([allSetsizeRange[iSetsize], conjunctionArray[iTarget], 1])\n                    }\n    \n                }\n            });\n            \n            // หา index ตรงกลางของ allSetsizeAndTarget เพื่อแทรก middleSetsizeAndTarget เข้าไป\n            const middleIndex = Math.floor(allSetsizeAndTarget.length / 2); // ตำแหน่งกลางของ array\n            allSetsizeAndTarget.splice(middleIndex, 0, ...middleSetsizeAndTarget)\n        }\n\n        // กำหนดค่า trialNumber ให้เท่ากับจำนวนข้อทั้งหมด\n        trialNumber = allSetsizeAndTarget.length;\n        console.log(trialNumber)\n    }\n\n    function switchSearchMode() {\n        if (searchTarget) {\n            oris = [];\n            cols = [];\n            if (allSetsizeAndTarget[currTrial][2] === 0) {\n                // feature search\n                allSearchMode.push('feature search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(0)};\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } else {\n                    shapeRand = [0];\n                }\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n                }\n            } else {\n                // conjunction search\n                allSearchMode.push('conjunction search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(1)};\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(1)};\n                }\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } \n                else {\n                    shapeRand = [0];\n                }\n            }\n\n            // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n            if (currTrial === 0){ \n                // create only one time when the game started\n                createCanvas();\n            } else if (currTrial === trialNumber / 4 || currTrial === trialNumber / 4 * 3){\n                timeIntervalPerBlock();   \n            } else {\n                initialT(0, allSetsizeAndTarget[currTrial][0]);\n            }\n\n        }\n    }\n    \n    function createCanvas() {\n        myCanvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n        canvasContext = myCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        centerX = myCanvas.width / 2;\n        centerY = myCanvas.height / 2;\n\n        for (var ix = 0; ix < XblockNumber; ix++) {\n            Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n        }\n\n        for (var iy = 0; iy < YblockNumber; iy++) {\n            Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n        }\n\n        for (ix = 0; ix < XblockNumber; ix++) {\n            for (iy = 0; iy < YblockNumber; iy++) {\n                Xs.push(Xtemps[ix]);\n                Ys.push(Ytemps[iy]);\n                posId.push(count);\n                count++;\n            }\n        }\n        myCanvas.hidden = false;\n        timeIntervalPerBlock();\n    }\n\n    function initialT(_waittime, SS) {\n        setDisabledButton(false);\n        setSizeRecord.push(SS);\n        // timeLimitRecord.push(timeLimit);\n        if (!ceilingSS) {\n            ceilingSS = SS + 1;\n        };\n        vismem.erase(canvasContext);\n        vismem.clear();\n        allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n        shuffleSS(SS);\n        targetData(squareWidth, ori, col);\n        makeBackground(backgroundColor);\n        makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n        // stimulusData(realX, realY, squareWidth, ori, col);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        let dT = new Date();\n        STT = dT.getTime();\n        allStartTime.push(thisTime());\n    }\n\n    function shuffleSS(setSize) {\n        Shuffle(posId);\n        X = []; for (let ix = 0; ix < setSize + 1; ix++) { X.push(Xs[posId[ix]]) };\n        Y = []; for (let iy = 0; iy < setSize + 1; iy++) { Y.push(Ys[posId[iy]]) };\n        ori = []; for (let j = 0; j < setSize; j++) { ori.push(oris[j]) };\n        col = []; for (let j = 0; j < setSize; j++) { col.push(stimulusColor[cols[j]]) };\n\n        // check if this trial is feature or conjunction search\n        if (allSetsizeAndTarget[currTrial][2] === 0) {\n            // feature search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                if (oris[setSize] === 0) {\n                    ori.push(1);\n                } else {\n                    ori.push(1);\n                }\n\n                if (cols[setSize] === 0) {\n                    col.push(stimulusColor[2]);\n                } else if (cols[setSize] === 1) {\n                    col.push(stimulusColor[3]);\n                } else if (cols[setSize] === 2) {\n                    col.push(stimulusColor[0]);\n                } else if (cols[setSize] === 3) {\n                    col.push(stimulusColor[1]);\n                }\n            }\n        } else {\n            // conjunction search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                if (oris[setSize] === 0) {\n                    ori.push(1);\n                } else {\n                    ori.push(1);\n                }\n\n                if (cols[setSize] === 0) {\n                    col.push(stimulusColor[2]);\n                } else if (cols[setSize] === 1) {\n                    col.push(stimulusColor[3]);\n                } else if (cols[setSize] === 2) {\n                    col.push(stimulusColor[0]);\n                } else if (cols[setSize] === 3) {\n                    col.push(stimulusColor[1]);\n                }\n            }\n        }\n    }\n\n    function makeBackground(backgroundColor) {\n        // Fill background\n        vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n    }\n\n    let realX: number[] = [];\n    let realY: number[] = [];\n    function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n        for (let i = 0; i < orienVec.length; i++) {\n            if (orienVec[i] === shapeRand[0]) {\n                vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n            } else {\n                vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n            }\n            realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n            realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n        }\n        if (searchTarget) {\n            // Find Target from Object\n            let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col])\n            change = find ? 1 : 0\n            targetMatch.push(find ? true : false);\n        }\n    }\n    \n    function targetData(width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        let obj_to_append;\n        if (shapeRand[0] === 1) {\n            thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n\n            if (searchTarget) {\n                obj_to_append = {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : stimulusColor[searchTarget.col]\n                }\n                obj_in_trial.push(obj_to_append);\n            }\n        targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n        return targetDataResult;\n    }\n\n    // function stimulusData(x, y, width, ori, col) {\n    //     let thisShape = \"\";\n    //     let thisParameterName = \"\";\n    //     let thisValue = 0;\n    //     let obj_in_trial: any[] = [];\n        \n    //     for (let i = 0; i < col.length; i++){\n    //         let obj_to_append;\n    //         if (ori[i] === shapeRand[0]) {\n    //             thisShape = \"circle\";\n    //             thisParameterName = \"radius\";\n    //             thisValue = radius;\n    //         } else {\n    //             thisShape = \"square\";\n    //             thisParameterName = \"width\";\n    //             thisValue = width;\n    //         }\n    //             obj_to_append = {\n    //             \"type\" : \"distractor\",\n    //             \"display\" : {\n    //                 \"shape\" : thisShape,\n    //                 \"shapeParams\" : {\n    //                     \"parameterName\" : thisParameterName,\n    //                     \"value\" : thisValue,\n    //                     \"unit\" : \"px\"\n    //                 },\n    //                 \"color\" : col[i]\n    //             },\n    //             \"position\" : {\n    //                 \"x\" : {\n    //                     \"value\" : x[i],\n    //                     \"unit\" : \"px\"\n    //                 },\n    //                 \"y\" : {\n    //                     \"value\" : y[i],\n    //                     \"unit\" : \"px\"\n    //                 }\n    //             }\n    //         }   \n    //         obj_in_trial.push(obj_to_append);\n    //     }\n    //     obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n    //     stimulusDataResult.push(obj_in_trial);\n    //     return stimulusDataResult;\n    // }\n\n    function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode){\n        let thisAns;\n        let obj_in_trial: any[] = [];\n        for (let i = 0; i < targetMatch.length; i++){\n            let obj_to_append;\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                thisAns = true;\n            } else {\n                thisAns = false;\n            }\n            obj_to_append = {\n                \"hasTarget\" : targetMatch[i],\n                \"startTime\" : allStartTime[i],\n                \"setSize\" : allCurrSS[i] + 1,\n                \"answerTime\" : allClickTime[i],\n                \"hasTargetAnswerBool\" : thisAns,\n                \"stimulusData\" : stimulusDataResult[i],\n                \"mode\" : allSearchMode[i]\n            }\n            obj_in_trial.push(obj_to_append);\n        }\n        trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n        return trialDataResult;\n    }\n    \n    function checkResp(foo) {\n        setProgressValue(progressValue + 1);\n        clickSound();\n        let dT2 = new Date();\n        ET = dT2.getTime();\n        allClickTime.push(thisTime());\n        let rt = ET - STT;\n        allRt.push(rt);\n        if (change === foo) {\n            combo2Sound();\n            // if (rt < timeLimit) {\n                trackRecord = trackRecord + 1;\n                thatRight = 'right';\n                checkAns.push(thatRight);\n                hitRt.push(rt);\n                if (levelUpCount === 0) {\n                    comboCount.push(0);\n                } else if (levelUpCount === 1) {\n                    comboCount.push(1);\n                } else if (levelUpCount === 2) {\n                    comboCount.push(2);\n                } else if (levelUpCount === 3) {\n                    comboCount.push(3);\n                } else if (levelUpCount === 4) {\n                    comboCount.push(4);\n                } else if (levelUpCount === 5) {\n                    comboCount.push(5);\n                }\n            // } else {\n            //     combo2Sound();\n            //     thatRight = 'late';\n            //     trackRecord = 0;\n            //     checkAns.push(thatRight);\n            //     correctButLateCount++;\n            // }\n\n        } else {\n            losingSound();\n            thatRight = 'wrong';\n            trackRecord = 0;\n            checkAns.push(thatRight);\n            incorrectCount++;\n        }\n        trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n        trialIsOver();\n    }\n\n    function trialIsOver() {\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor)\n        vismem.drawObjects(canvasContext, vismem.objects);\n        if (trackRecord >= NupNdown) {\n            if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                if (levelUpCount === 5) {\n                    levelUpCount = 5;\n                } else {\n                    levelUpCount++\n                }\n            } else {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                // timeLimit = timeLimit - timeLimitDeclineStep;\n            }\n        }\n\n        // if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n        //     timeLimit = timeLimit + timeLimitInclineStep;\n        //     if (timeLimit > ceilingTimeLimit) {\n        //         timeLimit = ceilingTimeLimit;\n        //     }\n        // }\n        currTrial = currTrial + 1;\n        if (currTrial >= trialNumber) {\n            // summaryScore();\n            Done();\n        } else {\n            trialConclude();\n        }\n    }\n    \n    function trialConclude() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        let textHeight = 0;\n        if (thatRight === 'wrong'){\n            responseText = \"ผิด\";\n            textHeight = 36;\n        } else {\n            responseText = \"ถูก\";\n            textHeight = 20;\n        }\n\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(responseText).width;\n        timeoutList.push(\n            setTimeout(function() {\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 100),\n\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 600),\n\n            setTimeout(function() {\n                switchSearchMode();\n            }, 900)\n        )\n    }\n\n    function timeIntervalPerBlock() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        // ทำเพื่อให้ textWidth คำนวนค่าได้ก่อนที่ 3 2 1 จะขึ้น\n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '0';\n            }, 100) \n        )\n\n        let textHeight = 36;\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(countdownText).width;\n        \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '3';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 200) \n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '2';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 1200)\n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 1900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '1';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 2200)\n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 2900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                initialT(0, allSetsizeAndTarget[currTrial][0]);\n            }, 3200) \n        )\n    }\n\n    // function summaryScore() {\n    //     for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n    //         latestHitRtIndex = correctIndex;\n    //         let rtScore = rtBound - hitRt[correctIndex];\n    //         let comboMultiplier = 0;\n    //         if (comboCount[correctIndex] === 0) {\n    //             comboMultiplier = 1;\n    //         } else if (comboCount[correctIndex] === 1) {\n    //             comboMultiplier = 1.05;\n    //         } else if (comboCount[correctIndex] === 2) {\n    //             comboMultiplier = 1.10;\n    //         } else if (comboCount[correctIndex] === 3) {\n    //             comboMultiplier = 1.20;\n    //         } else if (comboCount[correctIndex] === 4) {\n    //             comboMultiplier = 1.50;\n    //         } else if (comboCount[correctIndex] === 5) {\n    //             comboMultiplier = 2.00;\n    //         }\n    //         rtScore *= comboMultiplier;\n    //         scorePerTrial.push(rtScore);\n    //     }\n    //     sumScores = scorePerTrial.reduce((sum, score) => {\n    //         return sum + score;\n    //     });\n\n    //     sumRt = allRt.reduce((sum, scores) => {\n    //         return sum + scores;\n    //     });\n\n    //     if (hitRt.length !== 0){\n    //         sumHitRt = hitRt.reduce((sum, score) => {\n    //             return sum + score;\n    //         });\n    //     } else {\n    //         hitRt.push(0);\n    //         sumHitRt = hitRt;\n    //     }\n\n    //     avgHitRt = sumHitRt / 1000 / hitRt.length;\n    //     if (avgHitRt < 1) {\n    //         swiftness = \"เร็วมาก\";\n    //     }\n    //     else if (avgHitRt < 2) {\n    //         swiftness = \"เร็ว\";\n    //     }\n    //     else {\n    //         swiftness = \"ปานกลาง\";\n    //     }\n\n    //     total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n\n    //     return total;\n    // }\n\n    function Done() {\n        if (window.location.href.includes('face-in-the-crowd-A')){\n            version = 'face-in-the-crowd-A-1.0';\n        } else {\n            version = 'face-in-the-crowd-B-1.0';\n        }\n        setIsItDone(true);\n        score = total;\n        // scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n        // metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, hitRt, avgHitRt, swiftness);\n        // postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n        // axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult)\n        //     .then(function (postEntryResult) {\n        //         console.log(postEntryResult)\n        //     })\n        //     .catch(function (error) {\n        //         console.log('error')\n        //     });\n        console.log(postEntryResult)\n        postEntryResult = postEntry();\n        saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_${version}_${thisTime().toString()}`);\n        backToLanding();\n    }\n\n    // function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total){\n    //     scoringDataResult = [{\n    //         \"scoringModel\" : {\n    //             \"scoringName\" : \"default\",\n    //             \"parameters\" : {\n    //                 \"rtBound\" : {\n    //                     \"value\" : rtBound,\n    //                     \"unit\" : null,\n    //                     \"description\" : \"rtBound - hitRt = rtScore\"\n    //                 },\n    //                 \"incorrectMultiplier\" : {\n    //                     \"value\" : incorrectMultiplier,\n    //                     \"unit\" : null,\n    //                     \"description\" : \"Multiplier for incorrectCount\"\n    //                 },\n    //                 \"lateMultiplier\" : {\n    //                     \"value\" : lateMultiplier,\n    //                     \"unit\" : null,\n    //                     \"description\" : \"Multiplier for correctButLateCount\"\n    //                 },\n    //                 \"scoresMultiplier\" : {\n    //                     \"value\" : scoresMultiplier,\n    //                     \"unit\" : null,\n    //                     \"description\" : \"Multiplier for total score\"\n    //                 },\n    //                 \"trialNumber\" : {\n    //                     \"value\" : trialNumber,\n    //                     \"unit\" : null,\n    //                     \"description\" : \"Total number of trials\"\n    //                 }\n    //             },\n    //             \"description\" : `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n    //         },\n    //         \"score\" : total\n    //     }]\n    //     return scoringDataResult;\n    // }\n\n    // function metricData(trialNumber, incorrectCount, correctButLateCount, hitRt, avgHitRt, swiftness){\n    //     timeLimitRecord.sort((a,b) => a-b);\n    //     hitRt.sort((a,b) => a-b);\n    //     let metricName \n    //         = ['correctCount', \n    //            'incorrectCount', \n    //            'correctButLateCount',  \n    //            'fastestHitReactionTime', \n    //            'averageHitReactionTime', \n    //            'swiftness',];\n    //     let metricValue \n    //         = [trialNumber - incorrectCount, \n    //            incorrectCount, \n    //            correctButLateCount, \n    //            hitRt[0], \n    //            avgHitRt, \n    //            swiftness,];\n    //     let metricUnit = [null, null, null, 'ms', 's', null,];\n    //     let metricDescription \n    //         = ['Total number of correct trials', \n    //            'Total number of incorrect trials', \n    //            'Total number of correct but late trials', \n    //            'The fastest hit reaction time that user reached', \n    //            'The average of all hit reaction time', \n    //            'The quality of all hit reaction time',];\n    //     for (let i = 0; i < metricName.length; i++){\n    //         let obj_to_append\n    //         obj_to_append = {\n    //             \"metricName\" : metricName[i],\n    //             \"value\" : metricValue[i],\n    //             \"unit\" : metricUnit[i],\n    //             \"description\" : metricDescription[i]\n    //         }\n    //         metricDataResult.push(obj_to_append);\n    //     }    \n    //     return metricDataResult;\n    // }\n\n    // function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult){\n    //     postEntryResult = {\n    //         \"date\" : `${thisTime().toString()}`,\n    //         \"userId\" : props.userId,\n    //         \"userSession\" : version,\n    //         \"data\" : {\n    //             \"rawData\" : {\n    //                 \"target\" : targetDataResult,\n    //                 \"trialData\" : trialDataResult\n    //             },\n    //             \"gameLogicScheme\" : gameLogicSchemeResult,\n    //             \"scoringData\" : scoringDataResult,\n    //             \"metricData\" : metricDataResult\n    //         }\n    //     }\n    //     return postEntryResult;\n    // }\n\n    function postEntry(){\n        postEntryResult = {\n            \"date\" : `${thisTime().toString()}`,\n            \"userId\" : props.userId,\n            \"userSession\" : version,\n            \"target\" : targetDataResult,\n            \"trialData\" : trialDataResult\n        }\n        return postEntryResult;\n    }\n\n    function backToLanding() {\n        navigate('/landing');\n    }\n\n    return (\n        <div className='h-screen w-full bg-slate-50 flex flex-col'>\n            <div className='flex justify-center items-center flex-grow p-5'>\n                {<CJSWindow searchTarget={searchTarget} searchTargetList={searchTargetList} canvasWidth={canvasWidth} canvasHeight={canvasHeight} />}\n                {<CJSButton searchTarget={searchTarget} disabledButton={disabledButton} checkResp={checkResp}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default CJSGame;\n\nfunction endTime() { \n    let d = new Date();\n    return d.getTime();\n}\n\nfunction thisTime() {\n    let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n    return thisTime;\n}"],"mappings":"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IpF,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAC;MACrD7B,OAAO,GAAG,yBAAyB;IACvC,CAAC,MAAM;MACHA,OAAO,GAAG,yBAAyB;IACvC;IACAgB,WAAW,CAAC,IAAI,CAAC;IACjBhC,KAAK,GAAGD,KAAK;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAwE,OAAO,CAACC,GAAG,CAACvD,eAAe,CAAC;IAC5BA,eAAe,GAAGuH,SAAS,EAAE;IAC7B1N,0BAA0B,CAACmG,eAAe,EAAG,UAASE,KAAK,CAACsB,MAAO,IAAGzB,OAAQ,IAAGmF,QAAQ,EAAE,CAACsC,QAAQ,EAAG,EAAC,CAAC;IACzGC,aAAa,EAAE;EACnB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASF,SAASA,CAAA,EAAE;IAChBvH,eAAe,GAAG;MACd,MAAM,EAAI,GAAEkF,QAAQ,EAAE,CAACsC,QAAQ,EAAG,EAAC;MACnC,QAAQ,EAAGtH,KAAK,CAACsB,MAAM;MACvB,aAAa,EAAGzB,OAAO;MACvB,QAAQ,EAAGP,gBAAgB;MAC3B,WAAW,EAAGF;IAClB,CAAC;IACD,OAAOU,eAAe;EAC1B;EAEA,SAASyH,aAAaA,CAAA,EAAG;IACrBrH,QAAQ,CAAC,UAAU,CAAC;EACxB;EAEA,oBACIrG,OAAA;IAAK2N,SAAS,EAAC,2CAA2C;IAAAC,QAAA,eACtD5N,OAAA;MAAK2N,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC1D5N,OAAA,CAACX,SAAS;QAACoH,YAAY,EAAEA,YAAa;QAAClG,gBAAgB,EAAEA,gBAAiB;QAACI,WAAW,EAAEA,WAAY;QAACC,YAAY,EAAEA;MAAa;QAAAiN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnIhO,OAAA,CAACH,SAAS;QAAC4G,YAAY,EAAEA,YAAa;QAACI,cAAc,EAAEA,cAAe;QAAC4F,SAAS,EAAEA;MAAU;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7F;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAAC5H,EAAA,CAp4BQF,OAAO;EAAA,QACK9G,WAAW,EACPE,QAAQ,EACPA,QAAQ,EACRA,QAAQ;AAAA;AAAA2O,EAAA,GAJzB/H,OAAO;AAs4BhB,eAAeA,OAAO;AAEtB,SAASgI,OAAOA,CAAA,EAAG;EACf,IAAIC,CAAC,GAAG,IAAIlD,IAAI,EAAE;EAClB,OAAOkD,CAAC,CAACjD,OAAO,EAAE;AACtB;AAEA,SAASC,QAAQA,CAAA,EAAG;EAChB,IAAIA,QAAQ,GAAGzL,MAAM,EAAE,CAAC0O,MAAM,CAAC,4BAA4B,CAAC;EAC5D,OAAOjD,QAAQ;AACnB;AAAC,IAAA8C,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}