{"ast":null,"code":"var _jsxFileName = \"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myCanvas;\nlet canvasContext;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B'];\nlet searchTargetList = [[{\n  description: 'สี่เหลี่ยมสีม่วง',\n  color: '#9370DB',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีเขียว',\n  color: '#B2D33D',\n  shape: 'square'\n}, {\n  description: 'สี่เหลี่ยมสีส้ม',\n  color: '#F67E4B',\n  shape: 'square'\n}], [{\n  description: 'วงกลมสีม่วง',\n  color: '#9370DB',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีฟ้า',\n  color: '#3CB4C6',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีเขียว',\n  color: '#B2D33D',\n  shape: 'circle'\n}, {\n  description: 'วงกลมสีส้ม',\n  color: '#F67E4B',\n  shape: 'circle'\n}]];\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX;\nlet centerY;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X;\nlet Y;\nlet Xs = [];\nlet Ys = [];\nlet Xtemps = [];\nlet Ytemps = [];\nlet posId = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet allSetsizeAndTarget = [];\nlet change = NaN;\nlet shapeRand = [];\nlet ori;\nlet col;\nlet oris = [];\nlet cols = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns = [];\nlet thatRight = '';\nlet responseText = '';\nlet timeoutList = [];\nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt = [];\nlet sumHitRt;\nlet hitRt = [];\nlet hit2SetSizeRtF = [];\nlet hit6SetSizeRtF = [];\nlet hit12SetSizeRtF = [];\nlet hit24SetSizeRtF = [];\nlet hit44SetSizeRtF = [];\nlet correctRejection2SetSizeRtF = [];\nlet correctRejection6SetSizeRtF = [];\nlet correctRejection12SetSizeRtF = [];\nlet correctRejection24SetSizeRtF = [];\nlet correctRejection44SetSizeRtF = [];\nlet hit2SetSizeRtC = [];\nlet hit6SetSizeRtC = [];\nlet hit12SetSizeRtC = [];\nlet hit24SetSizeRtC = [];\nlet hit44SetSizeRtC = [];\nlet correctRejection2SetSizeRtC = [];\nlet correctRejection6SetSizeRtC = [];\nlet correctRejection12SetSizeRtC = [];\nlet correctRejection24SetSizeRtC = [];\nlet correctRejection44SetSizeRtC = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet avgHit2SetSizeRtF;\nlet avgHit6SetSizeRtF;\nlet avgHit12SetSizeRtF;\nlet avgHit24SetSizeRtF;\nlet avgHit44SetSizeRtF;\nlet avgCorrectRejection2SetSizeRtF;\nlet avgCorrectRejection6SetSizeRtF;\nlet avgCorrectRejection12SetSizeRtF;\nlet avgCorrectRejection24SetSizeRtF;\nlet avgCorrectRejection44SetSizeRtF;\nlet hitAccuracy2SetSizeF;\nlet hitAccuracy6SetSizeF;\nlet hitAccuracy12SetSizeF;\nlet hitAccuracy24SetSizeF;\nlet hitAccuracy44SetSizeF;\nlet correctRejectionAccuracy2SetSizeF;\nlet correctRejectionAccuracy6SetSizeF;\nlet correctRejectionAccuracy12SetSizeF;\nlet correctRejectionAccuracy24SetSizeF;\nlet correctRejectionAccuracy44SetSizeF;\nlet avgHit2SetSizeRtC;\nlet avgHit6SetSizeRtC;\nlet avgHit12SetSizeRtC;\nlet avgHit24SetSizeRtC;\nlet avgHit44SetSizeRtC;\nlet avgCorrectRejection2SetSizeRtC;\nlet avgCorrectRejection6SetSizeRtC;\nlet avgCorrectRejection12SetSizeRtC;\nlet avgCorrectRejection24SetSizeRtC;\nlet avgCorrectRejection44SetSizeRtC;\nlet hitAccuracy2SetSizeC;\nlet hitAccuracy6SetSizeC;\nlet hitAccuracy12SetSizeC;\nlet hitAccuracy24SetSizeC;\nlet hitAccuracy44SetSizeC;\nlet correctRejectionAccuracy2SetSizeC;\nlet correctRejectionAccuracy6SetSizeC;\nlet correctRejectionAccuracy12SetSizeC;\nlet correctRejectionAccuracy24SetSizeC;\nlet correctRejectionAccuracy44SetSizeC;\nlet swiftness = '';\nlet total = 0;\nlet score;\nlet targetMatch = [];\nlet allStartTime = [];\nlet allClickTime = [];\nlet allCurrSS = [];\nlet gameLogicSchemeResult;\nlet trialDataResult = [];\nlet stimulusDataResult = [];\nlet targetDataResult;\nlet scoringDataResult = [];\nlet timeLimitRecord = [];\nlet setSizeRecord = [];\nlet setSizeInCorrectAns = [];\nlet metricDataResult = [];\nlet allSearchMode = [];\nlet postEntryResult;\nfunction CJSGame(props) {\n  _s();\n  const navigate = useNavigate();\n  const [clickSound] = useSound(clickSoundSrc);\n  const [combo2Sound] = useSound(combo2SoundSrc);\n  const [losingSound] = useSound(losingSoundSrc);\n  const [searchTarget, setSearchTarget] = useState();\n  const [progressValue, setProgressValue] = useState(0);\n  const [disabledButton, setDisabledButton] = useState(false);\n  const [isItDone, setIsItDone] = useState(false);\n  const [colorSet, setColorSet] = useState(props.userId % 4);\n  useEffect(() => {\n    initiateData();\n    // have to set search target before switchSearchMode() & createTargetCanvas() \n    createStimuli();\n    createPseudorandomStimuli();\n    gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize);\n    // setSearchTarget({ shape: (Math.random() > 0.5 ? 1 : 0), col: (Math.random() > 0.5 ? 1 : 0) });\n    return () => {\n      timeoutList.forEach(tm => {\n        clearTimeout(tm);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    switchSearchMode();\n  }, [searchTarget]);\n  function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize) {\n    gameLogicSchemeResult = {\n      \"game\": \"face-in-the-crowd \",\n      \"schemeName\": \"default\",\n      \"version\": \"1.0\",\n      \"variant\": \"main\",\n      \"parameters\": {\n        \"trialNumber\": {\n          \"value\": trialNumber,\n          \"unit\": null,\n          \"description\": \"Total number of trials\"\n        },\n        \"backgroundColor\": {\n          \"value\": backgroundColor,\n          \"unit\": null,\n          \"description\": \"Background color of test canvas\"\n        },\n        \"stimulusShape\": {\n          \"value\": [{\n            \"shapeName\": \"square\",\n            \"parameters\": {\n              \"squareWidth\": {\n                \"value\": squareWidth,\n                \"unit\": \"px\",\n                \"description\": \"Square stimulus width\"\n              }\n            },\n            \"description\": \"Square stimulus\"\n          }, {\n            \"shapeName\": \"circle\",\n            \"parameters\": {\n              \"radius\": {\n                \"value\": radius,\n                \"unit\": \"px\",\n                \"description\": \"Circle stimulus radius\"\n              }\n            },\n            \"description\": \"Circle stimulus\"\n          }],\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus shape\"\n        },\n        \"stimulusColor\": {\n          \"value\": stimulusColor,\n          \"unit\": null,\n          \"description\": \"Set of possible stimulus color\"\n        },\n        \"positionJitter\": {\n          \"value\": positionJitter,\n          \"unit\": \"px\",\n          \"description\": \"Amplitude of spatial jittering in each axis\"\n        },\n        \"XblockNumber\": {\n          \"value\": XblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of horizontal blocks composing the canvas\"\n        },\n        \"YblockNumber\": {\n          \"value\": YblockNumber,\n          \"unit\": null,\n          \"description\": \"Number of vertical blocks composing the canvas\"\n        },\n        \"canvasProperty\": {\n          \"canvasHeight\": {\n            \"value\": canvasHeight,\n            \"unit\": \"px\",\n            \"description\": \"Height of canvas\"\n          },\n          \"canvasWidth\": {\n            \"value\": canvasWidth,\n            \"unit\": \"px\",\n            \"description\": \"Width of canvas\"\n          }\n        },\n        \"initialSetSize\": {\n          \"value\": initialSetSize,\n          \"unit\": null,\n          \"description\": \"Initial set size\"\n        }\n      },\n      \"description\": \"Conjunction search default scheme\"\n    };\n    return gameLogicSchemeResult;\n  }\n  function initiateData() {\n    hitRt = [];\n    allRt = [];\n    currSS = 2;\n    ceilingSS = 0;\n    latestHitRtIndex = 0;\n    comboCount = [];\n    correctButLateCount = 0;\n    incorrectCount = 0;\n    count = 0;\n    currTrial = 0;\n    Xtemps = [];\n    Xs = [];\n    Ytemps = [];\n    Ys = [];\n    posId = [];\n    hit2SetSizeRtF = [];\n    hit6SetSizeRtF = [];\n    hit12SetSizeRtF = [];\n    hit24SetSizeRtF = [];\n    hit44SetSizeRtF = [];\n    correctRejection2SetSizeRtF = [];\n    correctRejection6SetSizeRtF = [];\n    correctRejection12SetSizeRtF = [];\n    correctRejection24SetSizeRtF = [];\n    correctRejection44SetSizeRtF = [];\n    hit2SetSizeRtC = [];\n    hit6SetSizeRtC = [];\n    hit12SetSizeRtC = [];\n    hit24SetSizeRtC = [];\n    hit44SetSizeRtC = [];\n    correctRejection2SetSizeRtC = [];\n    correctRejection6SetSizeRtC = [];\n    correctRejection12SetSizeRtC = [];\n    correctRejection24SetSizeRtC = [];\n    correctRejection44SetSizeRtC = [];\n  }\n  function createStimuli() {\n    console.log(colorSet);\n    if (props.userId % 2 === 0) {\n      // ถ้า userId เป็นเลขคู่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 0,\n          col: colorSet\n        });\n      } else {\n        setSearchTarget({\n          shape: 1,\n          col: colorSet\n        });\n      }\n    } else {\n      // ถ้า userId เป็นเลขคี่\n      if (window.location.href.includes('face-in-the-crowd-A')) {\n        setSearchTarget({\n          shape: 1,\n          col: colorSet\n        });\n      } else {\n        setSearchTarget({\n          shape: 0,\n          col: colorSet\n        });\n      }\n    }\n    let allDistractorRange = 31;\n    let trialsPerSetsize = 60;\n  }\n  function createPseudorandomStimuli() {\n    allSetsizeAndTarget = [];\n    let allSetsizeRange = [31];\n    let trialsPerSetsize = 60;\n    let targetCondition = 2; // target appear or disappear\n    let searchMode = 2; // feature or conjunction \n    let trialsPerCondition = trialsPerSetsize / targetCondition;\n    for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n      for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n        for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n          for (let iMode = 0; iMode < searchMode; iMode++) {\n            allSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, iMode]);\n          }\n        }\n      }\n    }\n    Shuffle(allSetsizeAndTarget);\n    // shuffleWithCondition();\n    trialNumber = trialsPerSetsize * allSetsizeRange.length * searchMode;\n  }\n  function shuffleWithCondition() {\n    // condition: prevent repetition 4 times in the row in every modes\n    let conditionUnsatisfied = true;\n\n    // this while loop will be continue till the conditionUnsatisfied turns to false\n    while (conditionUnsatisfied) {\n      let allMode = [];\n      let reShuffle = false;\n      Shuffle(allSetsizeAndTarget);\n      for (let i = 0; i < allSetsizeAndTarget.length; i++) {\n        // push only search mode into allMode array\n        allMode.push(allSetsizeAndTarget[i][2]);\n\n        // check this array for mode value(0 or 1) 4 times repetition in the row \n        if (allMode[i] === allMode[i - 1] && allMode[i] === allMode[i - 2] && allMode[i] === allMode[i - 3]) {\n          // when the loop found 4 times repetition, change the reShuffle = true\n          reShuffle = true;\n        }\n      }\n\n      // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n      if (reShuffle === false) {\n        // change conditionUnsatisfied = false to end the while loop\n        conditionUnsatisfied = false;\n      }\n    }\n  }\n  function switchSearchMode() {\n    if (searchTarget) {\n      oris = [];\n      cols = [];\n      if (allSetsizeAndTarget[currTrial][2] === 0) {\n        // feature search\n        allSearchMode.push('feature search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(0);\n        }\n        ;\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(1);\n          }\n          ;\n        }\n        // if (searchTarget.col === 1) {\n        //     for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n        // } else {\n        //     for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n        // } \n      } else {\n        // conjunction search\n        allSearchMode.push('conjunction search');\n        for (let j = 0; j < maxSS; j++) {\n          oris.push(0);\n          oris.push(1);\n        }\n        ;\n        if (searchTarget.col === 0) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(0);\n            cols.push(2);\n          }\n          ;\n        } else if (searchTarget.col === 1) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(1);\n            cols.push(3);\n          }\n          ;\n        } else if (searchTarget.col === 2) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(2);\n            cols.push(0);\n          }\n          ;\n        } else if (searchTarget.col === 3) {\n          for (let k = 0; k < maxSS; k++) {\n            cols.push(3);\n            cols.push(1);\n          }\n          ;\n        }\n        if (searchTarget.shape === 1) {\n          shapeRand = [1];\n        } else {\n          shapeRand = [0];\n        }\n        // if (searchTarget.col === 1) {\n        //     for (let k = 0; k < cols.length; k++) { cols[k] = 1 - cols[k] };\n        // } \n      }\n      // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n      if (currTrial === 0) {\n        // create only one time when the game started\n        createCanvas();\n      }\n      initialT(0, allSetsizeAndTarget[currTrial][0]);\n    }\n  }\n  function createCanvas() {\n    myCanvas = document.getElementById(\"myCanvas\");\n    canvasContext = myCanvas.getContext(\"2d\");\n    centerX = myCanvas.width / 2;\n    centerY = myCanvas.height / 2;\n    for (var ix = 0; ix < XblockNumber; ix++) {\n      Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n    }\n    for (var iy = 0; iy < YblockNumber; iy++) {\n      Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n    }\n    for (ix = 0; ix < XblockNumber; ix++) {\n      for (iy = 0; iy < YblockNumber; iy++) {\n        Xs.push(Xtemps[ix]);\n        Ys.push(Ytemps[iy]);\n        posId.push(count);\n        count++;\n      }\n    }\n    myCanvas.hidden = false;\n  }\n  function initialT(_waittime, SS) {\n    setDisabledButton(false);\n    setSizeRecord.push(SS);\n    timeLimitRecord.push(timeLimit);\n    if (!ceilingSS) {\n      ceilingSS = SS + 1;\n    }\n    ;\n    vismem.erase(canvasContext);\n    vismem.clear();\n    allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n    shuffleSS(SS);\n    targetData(squareWidth, ori, col);\n    makeBackground(backgroundColor);\n    makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n    stimulusData(realX, realY, squareWidth, ori, col);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let dT = new Date();\n    STT = dT.getTime();\n    allStartTime.push(thisTime());\n  }\n  function shuffleSS(setSize) {\n    Shuffle(posId);\n    X = [];\n    for (let ix = 0; ix < setSize + 1; ix++) {\n      X.push(Xs[posId[ix]]);\n    }\n    ;\n    Y = [];\n    for (let iy = 0; iy < setSize + 1; iy++) {\n      Y.push(Ys[posId[iy]]);\n    }\n    ;\n    ori = [];\n    for (let j = 0; j < setSize; j++) {\n      ori.push(oris[j]);\n    }\n    ;\n    col = [];\n    for (let j = 0; j < setSize; j++) {\n      col.push(stimulusColor[cols[j]]);\n    }\n    ;\n\n    // check if this trial is feature or conjunction search\n    if (allSetsizeAndTarget[currTrial][2] === 0) {\n      // feature search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        ori.push(1 - oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      }\n    } else {\n      // conjunction search\n      // check if the target appears or disappears\n      if (allSetsizeAndTarget[currTrial][1] === 0) {\n        // disappears\n        ori.push(oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      } else {\n        // appears\n        ori.push(1 - oris[setSize]);\n        col.push(stimulusColor[cols[setSize]]);\n      }\n    }\n  }\n  function makeBackground(backgroundColor) {\n    // Fill background\n    vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n  }\n  let realX = [];\n  let realY = [];\n  function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n    for (let i = 0; i < orienVec.length; i++) {\n      if (orienVec[i] === shapeRand[0]) {\n        vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n      } else {\n        vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n      }\n      realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n      realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n    }\n    if (searchTarget) {\n      // Find Target from Object\n      let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col]);\n      change = find ? 1 : 0;\n      targetMatch.push(find ? true : false);\n    }\n  }\n  function targetData(width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    let obj_to_append;\n    if (shapeRand[0] === 1) {\n      thisShape = \"circle\";\n      thisParameterName = \"radius\";\n      thisValue = radius;\n    } else {\n      thisShape = \"square\";\n      thisParameterName = \"width\";\n      thisValue = width;\n    }\n    if (searchTarget) {\n      obj_to_append = {\n        \"shape\": thisShape,\n        \"shapeParams\": {\n          \"parameterName\": thisParameterName,\n          \"value\": thisValue,\n          \"unit\": \"px\"\n        },\n        \"color\": stimulusColor[searchTarget.col]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n    return targetDataResult;\n  }\n  function stimulusData(x, y, width, ori, col) {\n    let thisShape = \"\";\n    let thisParameterName = \"\";\n    let thisValue = 0;\n    let obj_in_trial = [];\n    for (let i = 0; i < col.length; i++) {\n      let obj_to_append;\n      if (ori[i] === shapeRand[0]) {\n        thisShape = \"circle\";\n        thisParameterName = \"radius\";\n        thisValue = radius;\n      } else {\n        thisShape = \"square\";\n        thisParameterName = \"width\";\n        thisValue = width;\n      }\n      obj_to_append = {\n        \"type\": \"distractor\",\n        \"display\": {\n          \"shape\": thisShape,\n          \"shapeParams\": {\n            \"parameterName\": thisParameterName,\n            \"value\": thisValue,\n            \"unit\": \"px\"\n          },\n          \"color\": col[i]\n        },\n        \"position\": {\n          \"x\": {\n            \"value\": x[i],\n            \"unit\": \"px\"\n          },\n          \"y\": {\n            \"value\": y[i],\n            \"unit\": \"px\"\n          }\n        }\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n    stimulusDataResult.push(obj_in_trial);\n    return stimulusDataResult;\n  }\n  function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode) {\n    let thisAns;\n    let obj_in_trial = [];\n    for (let i = 0; i < targetMatch.length; i++) {\n      let obj_to_append;\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        thisAns = true;\n      } else {\n        thisAns = false;\n      }\n      obj_to_append = {\n        \"hasTarget\": targetMatch[i],\n        \"startTime\": allStartTime[i],\n        \"setSize\": allCurrSS[i],\n        \"answerTime\": allClickTime[i],\n        \"hasTargetAnswerBool\": thisAns,\n        \"stimulusData\": stimulusDataResult[i],\n        \"mode\": allSearchMode[i]\n      };\n      obj_in_trial.push(obj_to_append);\n    }\n    trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n    return trialDataResult;\n  }\n  function checkResp(foo) {\n    setProgressValue(progressValue + 1);\n    clickSound();\n    let dT2 = new Date();\n    ET = dT2.getTime();\n    allClickTime.push(thisTime());\n    let rt = ET - STT;\n    allRt.push(rt);\n    if (change === foo) {\n      combo2Sound();\n      if (rt < timeLimit) {\n        trackRecord = trackRecord + 1;\n        thatRight = 'right';\n        checkAns.push(thatRight);\n        hitRt.push(rt);\n        if (levelUpCount === 0) {\n          comboCount.push(0);\n        } else if (levelUpCount === 1) {\n          comboCount.push(1);\n        } else if (levelUpCount === 2) {\n          comboCount.push(2);\n        } else if (levelUpCount === 3) {\n          comboCount.push(3);\n        } else if (levelUpCount === 4) {\n          comboCount.push(4);\n        } else if (levelUpCount === 5) {\n          comboCount.push(5);\n        }\n      } else {\n        combo2Sound();\n        thatRight = 'late';\n        trackRecord = 0;\n        checkAns.push(thatRight);\n        correctButLateCount++;\n      }\n\n      // check if feature or conjunction mode\n      if (allSetsizeAndTarget[currTrial][2] === 0) {\n        // feature\n        // check if target appear or disappear\n        if (allSetsizeAndTarget[currTrial][1] === 0) {\n          // disappear\n          // check setsize that correct rejection\n          if (allSetsizeAndTarget[currTrial][0] === 2) {\n            correctRejection2SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n            correctRejection6SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n            correctRejection12SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n            correctRejection24SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n            correctRejection44SetSizeRtF.push(rt);\n          }\n        } else {\n          // appear\n          // check setsize that hit\n          if (allSetsizeAndTarget[currTrial][0] === 2) {\n            hit2SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n            hit6SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n            hit12SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n            hit24SetSizeRtF.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n            hit44SetSizeRtF.push(rt);\n          }\n        }\n      } else {\n        // conjunction\n        // check if target appear or disappear\n        if (allSetsizeAndTarget[currTrial][1] === 0) {\n          // disappear\n          // check setsize that correct rejection\n          if (allSetsizeAndTarget[currTrial][0] === 2) {\n            correctRejection2SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n            correctRejection6SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n            correctRejection12SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n            correctRejection24SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n            correctRejection44SetSizeRtC.push(rt);\n          }\n        } else {\n          // appear\n          // check setsize that hit\n          if (allSetsizeAndTarget[currTrial][0] === 2) {\n            hit2SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n            hit6SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n            hit12SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n            hit24SetSizeRtC.push(rt);\n          } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n            hit44SetSizeRtC.push(rt);\n          }\n        }\n      }\n    } else {\n      losingSound();\n      thatRight = 'wrong';\n      trackRecord = 0;\n      checkAns.push(thatRight);\n      incorrectCount++;\n    }\n    trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n    trialIsOver();\n  }\n  function trialIsOver() {\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    if (trackRecord >= NupNdown) {\n      if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n        // currSS = currSS + 2;\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        if (levelUpCount === 5) {\n          levelUpCount = 5;\n        } else {\n          levelUpCount++;\n        }\n      } else {\n        ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n        timeLimit = timeLimit - timeLimitDeclineStep;\n      }\n    }\n    if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n      // currSS = currSS - 2;\n      timeLimit = timeLimit + timeLimitInclineStep;\n      if (timeLimit > ceilingTimeLimit) {\n        timeLimit = ceilingTimeLimit;\n      }\n    }\n    currTrial = currTrial + 1;\n    if (currTrial >= trialNumber) {\n      summarySetSize();\n      summaryScore();\n      Done();\n    } else {\n      trialConclude();\n    }\n  }\n  function trialConclude() {\n    setDisabledButton(true);\n    vismem.erase(canvasContext);\n    vismem.clear();\n    makeBackground(backgroundColor);\n    vismem.drawObjects(canvasContext, vismem.objects);\n    let textHeight = 0;\n    if (thatRight === 'wrong') {\n      responseText = \"ผิด\";\n      textHeight = 36;\n    } else {\n      responseText = \"ถูก\";\n      textHeight = 20;\n    }\n    canvasContext.font = \"120px Sarabun\";\n    let textWidth = canvasContext.measureText(responseText).width;\n    timeoutList.push(setTimeout(function () {\n      let text = vismem.makeText('t', centerX - textWidth / 2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n      vismem.drawText(canvasContext, text);\n    }, 100), setTimeout(function () {\n      vismem.erase(canvasContext);\n      vismem.clear();\n      makeBackground(backgroundColor);\n      vismem.drawObjects(canvasContext, vismem.objects);\n    }, 600), setTimeout(function () {\n      switchSearchMode();\n    }, 900));\n  }\n  function summarySetSize() {\n    let sumHit2SetSizeRtF;\n    let sumHit6SetSizeRtF;\n    let sumHit12SetSizeRtF;\n    let sumHit24SetSizeRtF;\n    let sumHit44SetSizeRtF;\n    let sumCorrectRejection2SetSizeRtF;\n    let sumCorrectRejection6SetSizeRtF;\n    let sumCorrectRejection12SetSizeRtF;\n    let sumCorrectRejection24SetSizeRtF;\n    let sumCorrectRejection44SetSizeRtF;\n    let sumHit2SetSizeRtC;\n    let sumHit6SetSizeRtC;\n    let sumHit12SetSizeRtC;\n    let sumHit24SetSizeRtC;\n    let sumHit44SetSizeRtC;\n    let sumCorrectRejection2SetSizeRtC;\n    let sumCorrectRejection6SetSizeRtC;\n    let sumCorrectRejection12SetSizeRtC;\n    let sumCorrectRejection24SetSizeRtC;\n    let sumCorrectRejection44SetSizeRtC;\n    let featureOrConjunctionCondition = 2; // feature or conjunction\n    let appearOrDisappearCondition = 2; // appear or disappear\n    let setSizeCondition = 5; // [2, 6, 12, 24, 44] setsize\n    let trialNumberPerCondition = allSetsizeAndTarget.length / (featureOrConjunctionCondition * appearOrDisappearCondition * setSizeCondition);\n\n    // feature section\n    // 2 setsize section\n    hitAccuracy2SetSizeF = hit2SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (hit2SetSizeRtF.length !== 0) {\n      sumHit2SetSizeRtF = hit2SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit2SetSizeRtF.push(0);\n      sumHit2SetSizeRtF = hit2SetSizeRtF;\n    }\n    avgHit2SetSizeRtF = sumHit2SetSizeRtF / 1000 / hit2SetSizeRtF.length;\n    correctRejectionAccuracy2SetSizeF = correctRejection2SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (correctRejection2SetSizeRtF.length !== 0) {\n      sumCorrectRejection2SetSizeRtF = correctRejection2SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection2SetSizeRtF.push(0);\n      sumCorrectRejection2SetSizeRtF = correctRejection2SetSizeRtF;\n    }\n    avgCorrectRejection2SetSizeRtF = sumCorrectRejection2SetSizeRtF / 1000 / correctRejection2SetSizeRtF.length;\n\n    // 6 setsize section\n    hitAccuracy6SetSizeF = hit6SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (hit6SetSizeRtF.length !== 0) {\n      sumHit6SetSizeRtF = hit6SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit6SetSizeRtF.push(0);\n      sumHit6SetSizeRtF = hit6SetSizeRtF;\n    }\n    avgHit6SetSizeRtF = sumHit6SetSizeRtF / 1000 / hit6SetSizeRtF.length;\n    correctRejectionAccuracy6SetSizeF = correctRejection6SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (correctRejection6SetSizeRtF.length !== 0) {\n      sumCorrectRejection6SetSizeRtF = correctRejection6SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection6SetSizeRtF.push(0);\n      sumCorrectRejection6SetSizeRtF = correctRejection6SetSizeRtF;\n    }\n    avgCorrectRejection6SetSizeRtF = sumCorrectRejection6SetSizeRtF / 1000 / correctRejection6SetSizeRtF.length;\n\n    // 12 setsize section\n    hitAccuracy12SetSizeF = hit12SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (hit12SetSizeRtF.length !== 0) {\n      sumHit12SetSizeRtF = hit12SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit12SetSizeRtF.push(0);\n      sumHit12SetSizeRtF = hit2SetSizeRtF;\n    }\n    avgHit12SetSizeRtF = sumHit12SetSizeRtF / 1000 / hit12SetSizeRtF.length;\n    correctRejectionAccuracy12SetSizeF = correctRejection12SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (correctRejection12SetSizeRtF.length !== 0) {\n      sumCorrectRejection12SetSizeRtF = correctRejection12SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection12SetSizeRtF.push(0);\n      sumCorrectRejection12SetSizeRtF = correctRejection12SetSizeRtF;\n    }\n    avgCorrectRejection12SetSizeRtF = sumCorrectRejection12SetSizeRtF / 1000 / correctRejection12SetSizeRtF.length;\n\n    // 24 setsize section\n    hitAccuracy24SetSizeF = hit24SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (hit24SetSizeRtF.length !== 0) {\n      sumHit24SetSizeRtF = hit24SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit24SetSizeRtF.push(0);\n      sumHit24SetSizeRtF = hit24SetSizeRtF;\n    }\n    avgHit24SetSizeRtF = sumHit24SetSizeRtF / 1000 / hit24SetSizeRtF.length;\n    correctRejectionAccuracy24SetSizeF = correctRejection24SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (correctRejection24SetSizeRtF.length !== 0) {\n      sumCorrectRejection24SetSizeRtF = correctRejection24SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection24SetSizeRtF.push(0);\n      sumCorrectRejection24SetSizeRtF = correctRejection24SetSizeRtF;\n    }\n    avgCorrectRejection24SetSizeRtF = sumCorrectRejection24SetSizeRtF / 1000 / correctRejection24SetSizeRtF.length;\n\n    // 44 setsize section\n    hitAccuracy44SetSizeF = hit44SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (hit44SetSizeRtF.length !== 0) {\n      sumHit44SetSizeRtF = hit44SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit44SetSizeRtF.push(0);\n      sumHit44SetSizeRtF = hit44SetSizeRtF;\n    }\n    avgHit44SetSizeRtF = sumHit44SetSizeRtF / 1000 / hit44SetSizeRtF.length;\n    correctRejectionAccuracy44SetSizeF = correctRejection44SetSizeRtF.length / trialNumberPerCondition * 100;\n    if (correctRejection44SetSizeRtF.length !== 0) {\n      sumCorrectRejection44SetSizeRtF = correctRejection44SetSizeRtF.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection44SetSizeRtF.push(0);\n      sumCorrectRejection44SetSizeRtF = correctRejection44SetSizeRtF;\n    }\n    avgCorrectRejection44SetSizeRtF = sumCorrectRejection44SetSizeRtF / 1000 / correctRejection44SetSizeRtF.length;\n\n    // conjunction section\n    // 2 setsize section\n    hitAccuracy2SetSizeC = hit2SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (hit2SetSizeRtC.length !== 0) {\n      sumHit2SetSizeRtC = hit2SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit2SetSizeRtC.push(0);\n      sumHit2SetSizeRtC = hit2SetSizeRtC;\n    }\n    avgHit2SetSizeRtC = sumHit2SetSizeRtC / 1000 / hit2SetSizeRtC.length;\n    correctRejectionAccuracy2SetSizeC = correctRejection2SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (correctRejection2SetSizeRtC.length !== 0) {\n      sumCorrectRejection2SetSizeRtC = correctRejection2SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection2SetSizeRtC.push(0);\n      sumCorrectRejection2SetSizeRtC = correctRejection2SetSizeRtC;\n    }\n    avgCorrectRejection2SetSizeRtC = sumCorrectRejection2SetSizeRtC / 1000 / correctRejection2SetSizeRtC.length;\n\n    // 6 setsize section\n    hitAccuracy6SetSizeC = hit6SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (hit6SetSizeRtC.length !== 0) {\n      sumHit6SetSizeRtC = hit6SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit6SetSizeRtC.push(0);\n      sumHit6SetSizeRtC = hit6SetSizeRtC;\n    }\n    avgHit6SetSizeRtC = sumHit6SetSizeRtC / 1000 / hit6SetSizeRtC.length;\n    correctRejectionAccuracy6SetSizeC = correctRejection6SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (correctRejection6SetSizeRtC.length !== 0) {\n      sumCorrectRejection6SetSizeRtC = correctRejection6SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection6SetSizeRtC.push(0);\n      sumCorrectRejection6SetSizeRtC = correctRejection6SetSizeRtC;\n    }\n    avgCorrectRejection6SetSizeRtC = sumCorrectRejection6SetSizeRtC / 1000 / correctRejection6SetSizeRtC.length;\n\n    // 12 setsize section\n    hitAccuracy12SetSizeC = hit12SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (hit12SetSizeRtC.length !== 0) {\n      sumHit12SetSizeRtC = hit12SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit12SetSizeRtC.push(0);\n      sumHit12SetSizeRtC = hit2SetSizeRtC;\n    }\n    avgHit12SetSizeRtC = sumHit12SetSizeRtC / 1000 / hit12SetSizeRtC.length;\n    correctRejectionAccuracy12SetSizeC = correctRejection12SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (correctRejection12SetSizeRtC.length !== 0) {\n      sumCorrectRejection12SetSizeRtC = correctRejection12SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection12SetSizeRtC.push(0);\n      sumCorrectRejection12SetSizeRtC = correctRejection12SetSizeRtC;\n    }\n    avgCorrectRejection12SetSizeRtC = sumCorrectRejection12SetSizeRtC / 1000 / correctRejection12SetSizeRtC.length;\n\n    // 24 setsize section\n    hitAccuracy24SetSizeC = hit24SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (hit24SetSizeRtC.length !== 0) {\n      sumHit24SetSizeRtC = hit24SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit24SetSizeRtC.push(0);\n      sumHit24SetSizeRtC = hit24SetSizeRtC;\n    }\n    avgHit24SetSizeRtC = sumHit24SetSizeRtC / 1000 / hit24SetSizeRtC.length;\n    correctRejectionAccuracy24SetSizeC = correctRejection24SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (correctRejection24SetSizeRtC.length !== 0) {\n      sumCorrectRejection24SetSizeRtC = correctRejection24SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection24SetSizeRtC.push(0);\n      sumCorrectRejection24SetSizeRtC = correctRejection24SetSizeRtC;\n    }\n    avgCorrectRejection24SetSizeRtC = sumCorrectRejection24SetSizeRtC / 1000 / correctRejection24SetSizeRtC.length;\n\n    // 44 setsize section\n    hitAccuracy44SetSizeC = hit44SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (hit44SetSizeRtC.length !== 0) {\n      sumHit44SetSizeRtC = hit44SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hit44SetSizeRtC.push(0);\n      sumHit44SetSizeRtC = hit44SetSizeRtC;\n    }\n    avgHit44SetSizeRtC = sumHit44SetSizeRtC / 1000 / hit44SetSizeRtC.length;\n    correctRejectionAccuracy44SetSizeC = correctRejection44SetSizeRtC.length / trialNumberPerCondition * 100;\n    if (correctRejection44SetSizeRtC.length !== 0) {\n      sumCorrectRejection44SetSizeRtC = correctRejection44SetSizeRtC.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      correctRejection44SetSizeRtC.push(0);\n      sumCorrectRejection44SetSizeRtC = correctRejection44SetSizeRtC;\n    }\n    avgCorrectRejection44SetSizeRtC = sumCorrectRejection44SetSizeRtC / 1000 / correctRejection44SetSizeRtC.length;\n  }\n  function summaryScore() {\n    for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n      latestHitRtIndex = correctIndex;\n      let rtScore = rtBound - hitRt[correctIndex];\n      let comboMultiplier = 0;\n      if (comboCount[correctIndex] === 0) {\n        comboMultiplier = 1;\n      } else if (comboCount[correctIndex] === 1) {\n        comboMultiplier = 1.05;\n      } else if (comboCount[correctIndex] === 2) {\n        comboMultiplier = 1.10;\n      } else if (comboCount[correctIndex] === 3) {\n        comboMultiplier = 1.20;\n      } else if (comboCount[correctIndex] === 4) {\n        comboMultiplier = 1.50;\n      } else if (comboCount[correctIndex] === 5) {\n        comboMultiplier = 2.00;\n      }\n      rtScore *= comboMultiplier;\n      scorePerTrial.push(rtScore);\n    }\n    sumScores = scorePerTrial.reduce((sum, score) => {\n      return sum + score;\n    });\n    sumRt = allRt.reduce((sum, scores) => {\n      return sum + scores;\n    });\n    if (hitRt.length !== 0) {\n      sumHitRt = hitRt.reduce((sum, score) => {\n        return sum + score;\n      });\n    } else {\n      hitRt.push(0);\n      sumHitRt = hitRt;\n    }\n    avgHitRt = sumHitRt / 1000 / hitRt.length;\n    if (avgHitRt < 1) {\n      swiftness = \"เร็วมาก\";\n    } else if (avgHitRt < 2) {\n      swiftness = \"เร็ว\";\n    } else {\n      swiftness = \"ปานกลาง\";\n    }\n    total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n    return total;\n  }\n  function Done() {\n    setIsItDone(true);\n    score = total;\n    hightestSetSizeCheck(checkAns, setSizeRecord);\n    scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n    metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n    postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n    axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult).then(function (postEntryResult) {\n      console.log(postEntryResult);\n    }).catch(function (error) {\n      console.log('error');\n    });\n    saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_visualsearch_hard_session${props.userSession}_${thisTime().toString()}`);\n  }\n  function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total) {\n    scoringDataResult = [{\n      \"scoringModel\": {\n        \"scoringName\": \"default\",\n        \"parameters\": {\n          \"rtBound\": {\n            \"value\": rtBound,\n            \"unit\": null,\n            \"description\": \"rtBound - hitRt = rtScore\"\n          },\n          \"incorrectMultiplier\": {\n            \"value\": incorrectMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for incorrectCount\"\n          },\n          \"lateMultiplier\": {\n            \"value\": lateMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for correctButLateCount\"\n          },\n          \"scoresMultiplier\": {\n            \"value\": scoresMultiplier,\n            \"unit\": null,\n            \"description\": \"Multiplier for total score\"\n          },\n          \"trialNumber\": {\n            \"value\": trialNumber,\n            \"unit\": null,\n            \"description\": \"Total number of trials\"\n          }\n        },\n        \"description\": `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n      },\n      \"score\": total\n    }];\n    return scoringDataResult;\n  }\n  function hightestSetSizeCheck(checkAns, setSizeRecord) {\n    for (let i = 0; i < checkAns.length; i++) {\n      if (checkAns[i] === 'right' || checkAns[i] === 'late') {\n        setSizeInCorrectAns.push(setSizeRecord[i]);\n      }\n    }\n    setSizeInCorrectAns.sort((a, b) => a - b);\n    return setSizeInCorrectAns;\n  }\n  function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness) {\n    timeLimitRecord.sort((a, b) => a - b);\n    hitRt.sort((a, b) => a - b);\n    let metricName = ['correctCount', 'incorrectCount', 'correctButLateCount', 'highestSetSize', 'lowestTimeLimit', 'fastestHitReactionTime', 'averageHitReactionTime', 'swiftness', 'hitAccuracyFeature2SS', 'avgHitReactionTimeFeature2SS', 'hitAccuracyFeature6SS', 'avgHitReactionTimeFeature6SS', 'hitAccuracyFeature12SS', 'avgHitReactionTimeFeature12SS', 'hitAccuracyFeature24SS', 'avgHitReactionTimeFeature24SS', 'hitAccuracyFeature44SS', 'avgHitReactionTimeFeature44SS', 'correctRejectionAccuracyFeature2SS', 'avgCorrectRejectionTimeFeature2SS', 'correctRejectionAccuracyFeature6SS', 'avgCorrectRejectionTimeFeature6SS', 'correctRejectionAccuracyFeature12SS', 'avgCorrectRejectionTimeFeature12SS', 'correctRejectionAccuracyFeature24SS', 'avgCorrectRejectionTimeFeature24SS', 'correctRejectionAccuracyFeature44SS', 'avgCorrectRejectionTimeFeature44SS', 'hitAccuracyConjunction2SS', 'avgHitReactionTimeConjunction2SS', 'hitAccuracyConjunction6SS', 'avgHitReactionTimeConjunction6SS', 'hitAccuracyConjunction12SS', 'avgHitReactionTimeConjunction12SS', 'hitAccuracyConjunction24SS', 'avgHitReactionTimeConjunction24SS', 'hitAccuracyConjunction44SS', 'avgHitReactionTimeConjunction44SS', 'correctRejectionAccuracyConjunction2SS', 'avgCorrectRejectionTimeConjunction2SS', 'correctRejectionAccuracyConjunction6SS', 'avgCorrectRejectionTimeConjunction6SS', 'correctRejectionAccuracyConjunction12SS', 'avgCorrectRejectionTimeConjunction12SS', 'correctRejectionAccuracyConjunction24SS', 'avgCorrectRejectionTimeConjunction24SS', 'correctRejectionAccuracyConjunction44SS', 'avgCorrectRejectionTimeConjunction44SS'];\n    let metricValue = [trialNumber - incorrectCount, incorrectCount, correctButLateCount, setSizeInCorrectAns[setSizeInCorrectAns.length - 1], timeLimitRecord[1], hitRt[0], avgHitRt, swiftness, hitAccuracy2SetSizeF, avgHit2SetSizeRtF, hitAccuracy6SetSizeF, avgHit6SetSizeRtF, hitAccuracy12SetSizeF, avgHit12SetSizeRtF, hitAccuracy24SetSizeF, avgHit24SetSizeRtF, hitAccuracy44SetSizeF, avgHit44SetSizeRtF, correctRejectionAccuracy2SetSizeF, avgCorrectRejection2SetSizeRtF, correctRejectionAccuracy6SetSizeF, avgCorrectRejection6SetSizeRtF, correctRejectionAccuracy12SetSizeF, avgCorrectRejection12SetSizeRtF, correctRejectionAccuracy24SetSizeF, avgCorrectRejection24SetSizeRtF, correctRejectionAccuracy44SetSizeF, avgCorrectRejection44SetSizeRtF, hitAccuracy2SetSizeC, avgHit2SetSizeRtC, hitAccuracy6SetSizeC, avgHit6SetSizeRtC, hitAccuracy12SetSizeC, avgHit12SetSizeRtC, hitAccuracy24SetSizeC, avgHit24SetSizeRtC, hitAccuracy44SetSizeC, avgHit44SetSizeRtC, correctRejectionAccuracy2SetSizeC, avgCorrectRejection2SetSizeRtC, correctRejectionAccuracy6SetSizeC, avgCorrectRejection6SetSizeRtC, correctRejectionAccuracy12SetSizeC, avgCorrectRejection12SetSizeRtC, correctRejectionAccuracy24SetSizeC, avgCorrectRejection24SetSizeRtC, correctRejectionAccuracy44SetSizeC, avgCorrectRejection44SetSizeRtC];\n    let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null, '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's'];\n    let metricDescription = ['Total number of correct trials', 'Total number of incorrect trials', 'Total number of correct but late trials', 'The highest set size that user reached', 'The lowest time limit for trials that user reached', 'The fastest hit reaction time that user reached', 'The average of all hit reaction time', 'The quality of all hit reaction time', 'The accuracy of 2 setsize hit in feature mode', 'The average reaction time of all 2 setsize hit in feature mode', 'The accuracy of 6 setsize hit in feature mode', 'The average reaction time of all 6 setsize hit in feature mode', 'The accuracy of 12 setsize hit in feature mode', 'The average reaction time of all 12 setsize hit in feature mode', 'The accuracy of 24 setsize hit in feature mode', 'The average reaction time of all 24 setsize hit in feature mode', 'The accuracy of 44 setsize hit in feature mode', 'The average reaction time of all 44 setsize hit in feature mode', 'The accuracy of 2 setsize correct rejection in feature mode', 'The average reaction time of all 2 setsize correct rejection in feature mode', 'The accuracy of 6 setsize correct rejection in feature mode', 'The average reaction time of all 6 setsize correct rejection in feature mode', 'The accuracy of 12 setsize correct rejection in feature mode', 'The average reaction time of all 12 setsize correct rejection in feature mode', 'The accuracy of 24 setsize correct rejection in feature mode', 'The average reaction time of all 24 setsize correct rejection in feature mode', 'The accuracy of 44 setsize correct rejection in feature mode', 'The average reaction time of all 44 setsize correct rejection in feature mode', 'The accuracy of 2 setsize hit in conjunction mode', 'The average reaction time of all 2 setsize hit in conjunction mode', 'The accuracy of 6 setsize hit in conjunction mode', 'The average reaction time of all 6 setsize hit in conjunction mode', 'The accuracy of 12 setsize hit in conjunction mode', 'The average reaction time of all 12 setsize hit in conjunction mode', 'The accuracy of 24 setsize hit in conjunction mode', 'The average reaction time of all 24 setsize hit in conjunction mode', 'The accuracy of 44 setsize hit in conjunction mode', 'The average reaction time of all 44 setsize hit in conjunction mode', 'The accuracy of 2 setsize correct rejection in conjunction mode', 'The average reaction time of all 2 setsize correct rejection in conjunction mode', 'The accuracy of 6 setsize correct rejection in conjunction mode', 'The average reaction time of all 6 setsize correct rejection in conjunction mode', 'The accuracy of 12 setsize correct rejection in conjunction mode', 'The average reaction time of all 12 setsize correct rejection in conjunction mode', 'The accuracy of 24 setsize correct rejection in conjunction mode', 'The average reaction time of all 24 setsize correct rejection in conjunction mode', 'The accuracy of 44 setsize correct rejection in conjunction mode', 'The average reaction time of all 44 setsize correct rejection in conjunction mode'];\n    for (let i = 0; i < metricName.length; i++) {\n      let obj_to_append;\n      obj_to_append = {\n        \"metricName\": metricName[i],\n        \"value\": metricValue[i],\n        \"unit\": metricUnit[i],\n        \"description\": metricDescription[i]\n      };\n      metricDataResult.push(obj_to_append);\n    }\n    return metricDataResult;\n  }\n  function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult) {\n    postEntryResult = {\n      \"date\": `${thisTime().toString()}`,\n      \"userId\": props.userId,\n      \"userPhone\": props.userPhone,\n      \"userSession\": props.userSession,\n      \"data\": {\n        \"rawData\": {\n          \"target\": targetDataResult,\n          \"trialData\": trialDataResult\n        },\n        \"gameLogicScheme\": gameLogicSchemeResult,\n        \"scoringData\": scoringDataResult,\n        \"metricData\": metricDataResult\n      }\n    };\n    return postEntryResult;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full bg-slate-50 flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center flex-grow p-5\",\n      children: [/*#__PURE__*/_jsxDEV(CJSWindow, {\n        searchTarget: searchTarget,\n        searchTargetList: searchTargetList,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(CJSButton, {\n        searchTarget: searchTarget,\n        disabledButton: disabledButton,\n        checkResp: checkResp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1447,\n    columnNumber: 9\n  }, this);\n}\n_s(CJSGame, \"mitMalo+NDGvY9VzlvZtdQKk24Q=\", false, function () {\n  return [useNavigate, useSound, useSound, useSound];\n});\n_c = CJSGame;\nexport default CJSGame;\nfunction endTime() {\n  let d = new Date();\n  return d.getTime();\n}\nfunction thisTime() {\n  let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n  return thisTime;\n}\nvar _c;\n$RefreshReg$(_c, \"CJSGame\");","map":{"version":3,"names":["useEffect","useState","useNavigate","CJSWindow","useSound","clickSoundSrc","combo2SoundSrc","losingSoundSrc","moment","Shuffle","vismem","CJSButton","saveJSONDataToClientDevice","axios","jsxDEV","_jsxDEV","myCanvas","canvasContext","trialNumber","currTrial","backgroundColor","stimulusColor","searchTargetList","description","color","shape","canvasWidth","canvasHeight","squareWidth","squareHeight","radius","positionJitter","centerX","centerY","Xspan","Yspan","XblockNumber","YblockNumber","Xblock","Yblock","X","Y","Xs","Ys","Xtemps","Ytemps","posId","maxSS","Math","floor","ceilingSS","currSS","initialSetSize","allSetsizeAndTarget","change","NaN","shapeRand","ori","col","oris","cols","ceilingTimeLimit","timeLimit","timeLimitDeclineStep","timeLimitInclineStep","checkAns","thatRight","responseText","timeoutList","count","NupNdown","trackRecord","levelUpCount","STT","ET","sumRt","allRt","sumHitRt","hitRt","hit2SetSizeRtF","hit6SetSizeRtF","hit12SetSizeRtF","hit24SetSizeRtF","hit44SetSizeRtF","correctRejection2SetSizeRtF","correctRejection6SetSizeRtF","correctRejection12SetSizeRtF","correctRejection24SetSizeRtF","correctRejection44SetSizeRtF","hit2SetSizeRtC","hit6SetSizeRtC","hit12SetSizeRtC","hit24SetSizeRtC","hit44SetSizeRtC","correctRejection2SetSizeRtC","correctRejection6SetSizeRtC","correctRejection12SetSizeRtC","correctRejection24SetSizeRtC","correctRejection44SetSizeRtC","latestHitRtIndex","correctButLateCount","lateMultiplier","incorrectCount","incorrectMultiplier","scorePerTrial","sumScores","scoresMultiplier","comboCount","rtBound","avgHitRt","avgHit2SetSizeRtF","avgHit6SetSizeRtF","avgHit12SetSizeRtF","avgHit24SetSizeRtF","avgHit44SetSizeRtF","avgCorrectRejection2SetSizeRtF","avgCorrectRejection6SetSizeRtF","avgCorrectRejection12SetSizeRtF","avgCorrectRejection24SetSizeRtF","avgCorrectRejection44SetSizeRtF","hitAccuracy2SetSizeF","hitAccuracy6SetSizeF","hitAccuracy12SetSizeF","hitAccuracy24SetSizeF","hitAccuracy44SetSizeF","correctRejectionAccuracy2SetSizeF","correctRejectionAccuracy6SetSizeF","correctRejectionAccuracy12SetSizeF","correctRejectionAccuracy24SetSizeF","correctRejectionAccuracy44SetSizeF","avgHit2SetSizeRtC","avgHit6SetSizeRtC","avgHit12SetSizeRtC","avgHit24SetSizeRtC","avgHit44SetSizeRtC","avgCorrectRejection2SetSizeRtC","avgCorrectRejection6SetSizeRtC","avgCorrectRejection12SetSizeRtC","avgCorrectRejection24SetSizeRtC","avgCorrectRejection44SetSizeRtC","hitAccuracy2SetSizeC","hitAccuracy6SetSizeC","hitAccuracy12SetSizeC","hitAccuracy24SetSizeC","hitAccuracy44SetSizeC","correctRejectionAccuracy2SetSizeC","correctRejectionAccuracy6SetSizeC","correctRejectionAccuracy12SetSizeC","correctRejectionAccuracy24SetSizeC","correctRejectionAccuracy44SetSizeC","swiftness","total","score","targetMatch","allStartTime","allClickTime","allCurrSS","gameLogicSchemeResult","trialDataResult","stimulusDataResult","targetDataResult","scoringDataResult","timeLimitRecord","setSizeRecord","setSizeInCorrectAns","metricDataResult","allSearchMode","postEntryResult","CJSGame","props","_s","navigate","clickSound","combo2Sound","losingSound","searchTarget","setSearchTarget","progressValue","setProgressValue","disabledButton","setDisabledButton","isItDone","setIsItDone","colorSet","setColorSet","userId","initiateData","createStimuli","createPseudorandomStimuli","gameLogicScheme","forEach","tm","clearTimeout","switchSearchMode","console","log","window","location","href","includes","allDistractorRange","trialsPerSetsize","allSetsizeRange","targetCondition","searchMode","trialsPerCondition","iSetsize","length","iRep","iTarget","iMode","push","shuffleWithCondition","conditionUnsatisfied","allMode","reShuffle","i","j","k","createCanvas","initialT","document","getElementById","getContext","width","height","ix","round","iy","hidden","_waittime","SS","erase","clear","shuffleSS","targetData","makeBackground","makeSearchArray","stimulusData","realX","realY","drawObjects","objects","dT","Date","getTime","thisTime","setSize","makeRectangle","numarrayX","numarrayY","orienVec","colorVec","makeCircle","random","find","x","id","thisShape","thisParameterName","thisValue","obj_in_trial","obj_to_append","y","type","trialData","thisAns","checkResp","foo","dT2","rt","trialIsOver","summarySetSize","summaryScore","Done","trialConclude","textHeight","font","textWidth","measureText","setTimeout","text","makeText","drawText","sumHit2SetSizeRtF","sumHit6SetSizeRtF","sumHit12SetSizeRtF","sumHit24SetSizeRtF","sumHit44SetSizeRtF","sumCorrectRejection2SetSizeRtF","sumCorrectRejection6SetSizeRtF","sumCorrectRejection12SetSizeRtF","sumCorrectRejection24SetSizeRtF","sumCorrectRejection44SetSizeRtF","sumHit2SetSizeRtC","sumHit6SetSizeRtC","sumHit12SetSizeRtC","sumHit24SetSizeRtC","sumHit44SetSizeRtC","sumCorrectRejection2SetSizeRtC","sumCorrectRejection6SetSizeRtC","sumCorrectRejection12SetSizeRtC","sumCorrectRejection24SetSizeRtC","sumCorrectRejection44SetSizeRtC","featureOrConjunctionCondition","appearOrDisappearCondition","setSizeCondition","trialNumberPerCondition","reduce","sum","correctIndex","rtScore","comboMultiplier","scores","max","hightestSetSizeCheck","scoringData","metricData","postEntry","post","then","catch","error","userSession","toString","sort","a","b","metricName","metricValue","metricUnit","metricDescription","userPhone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","endTime","d","format","$RefreshReg$"],"sources":["/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/cjsGame/CJSGame.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CJSGame.css';\nimport BreadCrumb from '../../../components/breadcrumbs/breadCrumb';\nimport CJSWindow from '../../../components/gameWindow/cjsWindow/CJSWindow';\nimport ScoreSummaryOverlay from '../../../components/scoreSummaryOverlay/ScoreSummaryOverlay';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../../scripts/shuffle';\nimport * as vismem from '../../../scripts/vismemCC_simon';\nimport CJSButton from '../../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport { saveJSONDataToClientDevice } from '../../../uitls/offline';\nimport axios from 'axios';\n\nlet myCanvas: HTMLCanvasElement;\nlet canvasContext: CanvasRenderingContext2D;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B']; \nlet searchTargetList: any[][] = [\n    [\n        {description: 'สี่เหลี่ยมสีม่วง', color: '#9370DB', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีฟ้า', color: '#3CB4C6', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีเขียว', color: '#B2D33D', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีส้ม', color: '#F67E4B', shape: 'square'},\n    ],\n    [\n        {description: 'วงกลมสีม่วง', color: '#9370DB', shape: 'circle'},\n        {description: 'วงกลมสีฟ้า', color: '#3CB4C6', shape: 'circle'},\n        {description: 'วงกลมสีเขียว', color: '#B2D33D', shape: 'circle'},\n        {description: 'วงกลมสีส้ม', color: '#F67E4B', shape: 'circle'}\n    ],\n    \n]\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX: number;\nlet centerY: number;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X: number[]\nlet Y: number[]\nlet Xs: number[] = [];\nlet Ys: number[] = [];\nlet Xtemps: number[] = [];\nlet Ytemps: number[] = [];\nlet posId: number[] = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet ceilingSS = 0;\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet allSetsizeAndTarget: number[][] = [];\nlet change = NaN;\nlet shapeRand: number[] = [];\nlet ori: number[]\nlet col: string[]\nlet oris: number[] = [];\nlet cols: number[] = [];\nlet ceilingTimeLimit = 10 * 1000;\nlet timeLimit = 10 * 1000;\nlet timeLimitDeclineStep = 1000;\nlet timeLimitInclineStep = 500;\nlet checkAns: string[] = [];\nlet thatRight: string = '';\nlet responseText: string = '';\nlet timeoutList: any[] = []; \nlet count = 0;\nlet NupNdown = 5;\nlet trackRecord = 0;\nlet levelUpCount = 0;\nlet STT;\nlet ET;\nlet sumRt = 0;\nlet allRt: number[] = [];\nlet sumHitRt;\nlet hitRt: number[] = [];\nlet hit2SetSizeRtF: number[] = [];\nlet hit6SetSizeRtF: number[] = [];\nlet hit12SetSizeRtF: number[] = [];\nlet hit24SetSizeRtF: number[] = [];\nlet hit44SetSizeRtF: number[] = [];\nlet correctRejection2SetSizeRtF: number[] = [];\nlet correctRejection6SetSizeRtF: number[] = [];\nlet correctRejection12SetSizeRtF: number[] = [];\nlet correctRejection24SetSizeRtF: number[] = [];\nlet correctRejection44SetSizeRtF: number[] = [];\nlet hit2SetSizeRtC: number[] = [];\nlet hit6SetSizeRtC: number[] = [];\nlet hit12SetSizeRtC: number[] = [];\nlet hit24SetSizeRtC: number[] = [];\nlet hit44SetSizeRtC: number[] = [];\nlet correctRejection2SetSizeRtC: number[] = [];\nlet correctRejection6SetSizeRtC: number[] = [];\nlet correctRejection12SetSizeRtC: number[] = [];\nlet correctRejection24SetSizeRtC: number[] = [];\nlet correctRejection44SetSizeRtC: number[] = [];\nlet latestHitRtIndex = 0;\nlet correctButLateCount = 0;\nlet lateMultiplier = 10000;\nlet incorrectCount = 0;\nlet incorrectMultiplier = 20000;\nlet scorePerTrial = [0];\nlet sumScores = 0;\nlet scoresMultiplier = 10;\nlet comboCount: number[] = [];\nlet rtBound = 10000;\nlet avgHitRt;\nlet avgHit2SetSizeRtF;\nlet avgHit6SetSizeRtF;\nlet avgHit12SetSizeRtF;\nlet avgHit24SetSizeRtF;\nlet avgHit44SetSizeRtF;\nlet avgCorrectRejection2SetSizeRtF;\nlet avgCorrectRejection6SetSizeRtF;\nlet avgCorrectRejection12SetSizeRtF;\nlet avgCorrectRejection24SetSizeRtF;\nlet avgCorrectRejection44SetSizeRtF;\nlet hitAccuracy2SetSizeF;\nlet hitAccuracy6SetSizeF;\nlet hitAccuracy12SetSizeF;\nlet hitAccuracy24SetSizeF;\nlet hitAccuracy44SetSizeF;\nlet correctRejectionAccuracy2SetSizeF;\nlet correctRejectionAccuracy6SetSizeF;\nlet correctRejectionAccuracy12SetSizeF;\nlet correctRejectionAccuracy24SetSizeF;\nlet correctRejectionAccuracy44SetSizeF;\nlet avgHit2SetSizeRtC;\nlet avgHit6SetSizeRtC;\nlet avgHit12SetSizeRtC;\nlet avgHit24SetSizeRtC;\nlet avgHit44SetSizeRtC;\nlet avgCorrectRejection2SetSizeRtC;\nlet avgCorrectRejection6SetSizeRtC;\nlet avgCorrectRejection12SetSizeRtC;\nlet avgCorrectRejection24SetSizeRtC;\nlet avgCorrectRejection44SetSizeRtC;\nlet hitAccuracy2SetSizeC;\nlet hitAccuracy6SetSizeC;\nlet hitAccuracy12SetSizeC;\nlet hitAccuracy24SetSizeC;\nlet hitAccuracy44SetSizeC;\nlet correctRejectionAccuracy2SetSizeC;\nlet correctRejectionAccuracy6SetSizeC;\nlet correctRejectionAccuracy12SetSizeC;\nlet correctRejectionAccuracy24SetSizeC;\nlet correctRejectionAccuracy44SetSizeC;\nlet swiftness: string = '';\nlet total: number = 0;\nlet score: number;\nlet targetMatch: boolean[] = [];\nlet allStartTime: string[] = [];\nlet allClickTime: string[] = [];\nlet allCurrSS: number[] = [];\nlet gameLogicSchemeResult;\nlet trialDataResult: any[] = [];\nlet stimulusDataResult: any[] = [];\nlet targetDataResult;\nlet scoringDataResult: any[] = [];\nlet timeLimitRecord: any[] = [];\nlet setSizeRecord: any[] = [];\nlet setSizeInCorrectAns: any[] = [];\nlet metricDataResult: any[] = [];\nlet allSearchMode: string[] = [];\nlet postEntryResult;\n\nfunction CJSGame(props): any {\n    const navigate = useNavigate();\n    const [clickSound] = useSound(clickSoundSrc);\n    const [combo2Sound] = useSound(combo2SoundSrc);\n    const [losingSound] = useSound(losingSoundSrc);\n    const [searchTarget, setSearchTarget] = useState<{ shape: number, col: number }>();\n    const [progressValue, setProgressValue] = useState(0);\n    const [disabledButton, setDisabledButton] = useState(false);\n    const [isItDone, setIsItDone] = useState(false);\n    const [colorSet, setColorSet] = useState(props.userId % 4);\n\n        useEffect(() => {\n            initiateData();\n            // have to set search target before switchSearchMode() & createTargetCanvas() \n            createStimuli();\n            createPseudorandomStimuli();\n            gameLogicSchemeResult = gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize);\n            // setSearchTarget({ shape: (Math.random() > 0.5 ? 1 : 0), col: (Math.random() > 0.5 ? 1 : 0) });\n            return() => {\n                timeoutList.forEach(tm => {\n                    clearTimeout(tm);\n                })\n            };\n        }, [])\n\n        useEffect(() => {\n            switchSearchMode();\n        }, [searchTarget])\n\n    function gameLogicScheme(trialNumber, backgroundColor, squareWidth, radius, stimulusColor, positionJitter, XblockNumber, YblockNumber, ceilingTimeLimit, timeLimitDeclineStep, timeLimitInclineStep, canvasHeight, canvasWidth, initialSetSize){\n        gameLogicSchemeResult = {\n            \"game\" : \"face-in-the-crowd \",\n            \"schemeName\" : \"default\",\n            \"version\" : \"1.0\",\n            \"variant\" : \"main\",\n            \"parameters\" : {\n                \"trialNumber\": {\n                    \"value\" : trialNumber,\n                    \"unit\" : null,\n                    \"description\" : \"Total number of trials\"\n                },\n                \"backgroundColor\": {\n                    \"value\": backgroundColor,\n                    \"unit\": null,\n                    \"description\" : \"Background color of test canvas\"\n                },\n                \"stimulusShape\" : {\n                    \"value\" : [\n                        {\n                            \"shapeName\": \"square\",\n                            \"parameters\": {\n                                \"squareWidth\" : {\n                                    \"value\": squareWidth,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Square stimulus width\"\n                                }\n                            },\n                            \"description\" : \"Square stimulus\"\n                        }, \n                        {\n                            \"shapeName\": \"circle\",\n                            \"parameters\": {\n                                \"radius\" : {\n                                    \"value\": radius,\n                                    \"unit\": \"px\",\n                                    \"description\" : \"Circle stimulus radius\"\n                                }\n                            },\n                            \"description\" : \"Circle stimulus\"\n                        }\n                    ],\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus shape\"\n                },\n                \"stimulusColor\": {\n                    \"value\" : stimulusColor,\n                    \"unit\" : null,\n                    \"description\" : \"Set of possible stimulus color\"\n                },\n                \"positionJitter\" : {\n                    \"value\": positionJitter,\n                    \"unit\": \"px\",\n                    \"description\": \"Amplitude of spatial jittering in each axis\"\n                },\n                \"XblockNumber\": {\n                    \"value\": XblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of horizontal blocks composing the canvas\"\n                },\n                \"YblockNumber\": {\n                    \"value\": YblockNumber,\n                    \"unit\": null,\n                    \"description\": \"Number of vertical blocks composing the canvas\"\n                },\n                \"canvasProperty\" : {\n                    \"canvasHeight\" : {\n                        \"value\" : canvasHeight,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Height of canvas\"\n                    },\n                    \"canvasWidth\" : {\n                        \"value\" : canvasWidth,\n                        \"unit\" : \"px\",\n                        \"description\" : \"Width of canvas\"\n                    }\n                },\n                \"initialSetSize\" : {\n                    \"value\": initialSetSize,\n                    \"unit\": null,\n                    \"description\" : \"Initial set size\"\n                }\n            },\n            \"description\" : \"Conjunction search default scheme\"\n        }\n        return gameLogicSchemeResult;\n    }\n\n    function initiateData() {\n        hitRt = [];\n        allRt = [];\n        currSS = 2;\n        ceilingSS = 0;\n        latestHitRtIndex = 0;\n        comboCount = [];\n        correctButLateCount = 0;\n        incorrectCount = 0;\n        count = 0;\n        currTrial = 0;\n        Xtemps = [];\n        Xs = [];\n        Ytemps = [];\n        Ys = [];\n        posId = [];\n        hit2SetSizeRtF = [];\n        hit6SetSizeRtF = [];\n        hit12SetSizeRtF = [];\n        hit24SetSizeRtF = [];\n        hit44SetSizeRtF = [];\n        correctRejection2SetSizeRtF = [];\n        correctRejection6SetSizeRtF = [];\n        correctRejection12SetSizeRtF = [];\n        correctRejection24SetSizeRtF = [];\n        correctRejection44SetSizeRtF = [];\n        hit2SetSizeRtC = [];\n        hit6SetSizeRtC = [];\n        hit12SetSizeRtC = [];\n        hit24SetSizeRtC = [];\n        hit44SetSizeRtC = [];\n        correctRejection2SetSizeRtC = [];\n        correctRejection6SetSizeRtC = [];\n        correctRejection12SetSizeRtC = [];\n        correctRejection24SetSizeRtC = [];\n        correctRejection44SetSizeRtC = [];\n    }\n\n    function createStimuli(){\n        console.log(colorSet)\n        if (props.userId % 2 === 0){ // ถ้า userId เป็นเลขคู่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 0, col: colorSet });\n                \n            } else {\n                setSearchTarget({ shape: 1, col: colorSet });\n        \n            }\n            \n        } else { // ถ้า userId เป็นเลขคี่\n            if (window.location.href.includes('face-in-the-crowd-A')){\n                setSearchTarget({ shape: 1, col: colorSet });\n            } else {\n                setSearchTarget({ shape: 0, col: colorSet });\n            }\n        }\n        let allDistractorRange = 31;\n        let trialsPerSetsize = 60;\n\n    }\n    function createPseudorandomStimuli() {\n        allSetsizeAndTarget = [];\n        let allSetsizeRange = [31];\n        let trialsPerSetsize = 60; \n        let targetCondition = 2; // target appear or disappear\n        let searchMode = 2; // feature or conjunction \n        let trialsPerCondition = trialsPerSetsize / targetCondition; \n\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n            for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n                for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n                    for (let iMode = 0; iMode < searchMode; iMode++) {\n                        allSetsizeAndTarget.push([allSetsizeRange[iSetsize],iTarget,iMode]);\n                    }\n                }\n            }\n        }\n\n        Shuffle(allSetsizeAndTarget); \n        // shuffleWithCondition();\n        trialNumber = trialsPerSetsize * allSetsizeRange.length * searchMode;\n    }\n\n    function shuffleWithCondition() { \n        // condition: prevent repetition 4 times in the row in every modes\n        let conditionUnsatisfied: boolean = true;\n        \n        // this while loop will be continue till the conditionUnsatisfied turns to false\n        while (conditionUnsatisfied) { \n            let allMode: number[] = [];\n            let reShuffle: boolean = false;\n            Shuffle(allSetsizeAndTarget); \n\n            for (let i = 0; i < allSetsizeAndTarget.length; i++){\n                // push only search mode into allMode array\n                allMode.push(allSetsizeAndTarget[i][2]); \n                        \n                // check this array for mode value(0 or 1) 4 times repetition in the row \n                if (allMode[i] === allMode[i - 1] && \n                    allMode[i] === allMode[i - 2] && \n                    allMode[i] === allMode[i - 3]){\n                    // when the loop found 4 times repetition, change the reShuffle = true\n                    reShuffle = true;\n                } \n            }\n            \n            // didn't find any 4 times repetition, reShuffle still 'false' from the beginning of the while loop\n            if (reShuffle === false) {\n                // change conditionUnsatisfied = false to end the while loop\n                conditionUnsatisfied = false;\n            }\n        }\n    }\n\n    function switchSearchMode() {\n        if (searchTarget) {\n            oris = [];\n            cols = [];\n            if (allSetsizeAndTarget[currTrial][2] === 0) {\n                // feature search\n                allSearchMode.push('feature search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(0)};\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } else {\n                    shapeRand = [0];\n                }\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n                }\n                // if (searchTarget.col === 1) {\n                //     for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(0)};\n                // } else {\n                //     for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(1)};\n                // } \n            } else {\n                // conjunction search\n                allSearchMode.push('conjunction search');\n                for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(1)};\n                if (searchTarget.col === 0) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(2)};\n                } else if (searchTarget.col === 1) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(3)};\n                } else if (searchTarget.col === 2) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(0)};\n                } else if (searchTarget.col === 3) {\n                    for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(1)};\n                }\n                if (searchTarget.shape === 1) {\n                    shapeRand = [1];\n                } \n                else {\n                    shapeRand = [0];\n                }\n                // if (searchTarget.col === 1) {\n                //     for (let k = 0; k < cols.length; k++) { cols[k] = 1 - cols[k] };\n                // } \n            }\n            // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n            if (currTrial === 0){ \n                // create only one time when the game started\n                createCanvas();\n            }\n            initialT(0, allSetsizeAndTarget[currTrial][0]);\n        }\n    }\n    \n    function createCanvas() {\n        myCanvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n        canvasContext = myCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        centerX = myCanvas.width / 2;\n        centerY = myCanvas.height / 2;\n\n        for (var ix = 0; ix < XblockNumber; ix++) {\n            Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n        }\n\n        for (var iy = 0; iy < YblockNumber; iy++) {\n            Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n        }\n\n        for (ix = 0; ix < XblockNumber; ix++) {\n            for (iy = 0; iy < YblockNumber; iy++) {\n                Xs.push(Xtemps[ix]);\n                Ys.push(Ytemps[iy]);\n                posId.push(count);\n                count++;\n            }\n        }\n        myCanvas.hidden = false;\n    }\n\n    function initialT(_waittime, SS) {\n        setDisabledButton(false);\n        setSizeRecord.push(SS);\n        timeLimitRecord.push(timeLimit);\n        if (!ceilingSS) {\n            ceilingSS = SS + 1;\n        };\n        vismem.erase(canvasContext);\n        vismem.clear();\n        allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n        shuffleSS(SS);\n        targetData(squareWidth, ori, col);\n        makeBackground(backgroundColor);\n        makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n        stimulusData(realX, realY, squareWidth, ori, col);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        let dT = new Date();\n        STT = dT.getTime();\n        allStartTime.push(thisTime());\n    }\n\n    function shuffleSS(setSize) {\n        Shuffle(posId);\n        X = []; for (let ix = 0; ix < setSize + 1; ix++) { X.push(Xs[posId[ix]]) };\n        Y = []; for (let iy = 0; iy < setSize + 1; iy++) { Y.push(Ys[posId[iy]]) };\n        ori = []; for (let j = 0; j < setSize; j++) { ori.push(oris[j]) };\n        col = []; for (let j = 0; j < setSize; j++) { col.push(stimulusColor[cols[j]]) };\n\n        // check if this trial is feature or conjunction search\n        if (allSetsizeAndTarget[currTrial][2] === 0) {\n            // feature search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                ori.push(1 - oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            }\n        } else {\n            // conjunction search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                ori.push(1 - oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            }\n        }\n    }\n\n    function makeBackground(backgroundColor) {\n        // Fill background\n        vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n    }\n\n    let realX: number[] = [];\n    let realY: number[] = [];\n    function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n        for (let i = 0; i < orienVec.length; i++) {\n            if (orienVec[i] === shapeRand[0]) {\n                vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n            } else {\n                vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n            }\n            realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n            realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n        }\n        if (searchTarget) {\n            // Find Target from Object\n            let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col])\n            change = find ? 1 : 0\n            targetMatch.push(find ? true : false);\n        }\n    }\n    \n    function targetData(width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        let obj_to_append;\n        if (shapeRand[0] === 1) {\n            thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n\n            if (searchTarget) {\n                obj_to_append = {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : stimulusColor[searchTarget.col]\n                }\n                obj_in_trial.push(obj_to_append);\n            }\n        targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n        return targetDataResult;\n    }\n\n    function stimulusData(x, y, width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        \n        for (let i = 0; i < col.length; i++){\n            let obj_to_append;\n            if (ori[i] === shapeRand[0]) {\n                thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n                obj_to_append = {\n                \"type\" : \"distractor\",\n                \"display\" : {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : col[i]\n                },\n                \"position\" : {\n                    \"x\" : {\n                        \"value\" : x[i],\n                        \"unit\" : \"px\"\n                    },\n                    \"y\" : {\n                        \"value\" : y[i],\n                        \"unit\" : \"px\"\n                    }\n                }\n            }   \n            obj_in_trial.push(obj_to_append);\n        }\n        obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n        stimulusDataResult.push(obj_in_trial);\n        return stimulusDataResult;\n    }\n\n    function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode){\n        let thisAns;\n        let obj_in_trial: any[] = [];\n        for (let i = 0; i < targetMatch.length; i++){\n            let obj_to_append;\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                thisAns = true;\n            } else {\n                thisAns = false;\n            }\n            obj_to_append = {\n                \"hasTarget\" : targetMatch[i],\n                \"startTime\" : allStartTime[i],\n                \"setSize\" : allCurrSS[i],\n                \"answerTime\" : allClickTime[i],\n                \"hasTargetAnswerBool\" : thisAns,\n                \"stimulusData\" : stimulusDataResult[i],\n                \"mode\" : allSearchMode[i]\n            }\n            obj_in_trial.push(obj_to_append);\n        }\n        trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n        return trialDataResult;\n    }\n    \n    function checkResp(foo) {\n        setProgressValue(progressValue + 1);\n        clickSound();\n        let dT2 = new Date();\n        ET = dT2.getTime();\n        allClickTime.push(thisTime());\n        let rt = ET - STT;\n        allRt.push(rt);\n        if (change === foo) {\n            combo2Sound();\n            if (rt < timeLimit) {\n                trackRecord = trackRecord + 1;\n                thatRight = 'right';\n                checkAns.push(thatRight);\n                hitRt.push(rt);\n                if (levelUpCount === 0) {\n                    comboCount.push(0);\n                } else if (levelUpCount === 1) {\n                    comboCount.push(1);\n                } else if (levelUpCount === 2) {\n                    comboCount.push(2);\n                } else if (levelUpCount === 3) {\n                    comboCount.push(3);\n                } else if (levelUpCount === 4) {\n                    comboCount.push(4);\n                } else if (levelUpCount === 5) {\n                    comboCount.push(5);\n                }\n            } else {\n                combo2Sound();\n                thatRight = 'late';\n                trackRecord = 0;\n                checkAns.push(thatRight);\n                correctButLateCount++;\n            }\n\n            // check if feature or conjunction mode\n            if (allSetsizeAndTarget[currTrial][2] === 0){\n                // feature\n                // check if target appear or disappear\n                if (allSetsizeAndTarget[currTrial][1] === 0){\n                    // disappear\n                    // check setsize that correct rejection\n                    if (allSetsizeAndTarget[currTrial][0] === 2){\n                        correctRejection2SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n                        correctRejection6SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n                        correctRejection12SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n                        correctRejection24SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n                        correctRejection44SetSizeRtF.push(rt);\n                    }\n                } else {\n                    // appear\n                    // check setsize that hit\n                    if (allSetsizeAndTarget[currTrial][0] === 2){\n                        hit2SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n                        hit6SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n                        hit12SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n                        hit24SetSizeRtF.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n                        hit44SetSizeRtF.push(rt);\n                    }\n                }\n            } else {\n                // conjunction\n                // check if target appear or disappear\n                if (allSetsizeAndTarget[currTrial][1] === 0){\n                    // disappear\n                    // check setsize that correct rejection\n                    if (allSetsizeAndTarget[currTrial][0] === 2){\n                        correctRejection2SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n                        correctRejection6SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n                        correctRejection12SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n                        correctRejection24SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n                        correctRejection44SetSizeRtC.push(rt);\n                    }\n                } else {\n                    // appear\n                    // check setsize that hit\n                    if (allSetsizeAndTarget[currTrial][0] === 2){\n                        hit2SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 6) {\n                        hit6SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 12) {\n                        hit12SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 24) {\n                        hit24SetSizeRtC.push(rt);\n                    } else if (allSetsizeAndTarget[currTrial][0] === 44) {\n                        hit44SetSizeRtC.push(rt);\n                    }\n                }\n            }\n        } else {\n            losingSound();\n            thatRight = 'wrong';\n            trackRecord = 0;\n            checkAns.push(thatRight);\n            incorrectCount++;\n        }\n        trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n        trialIsOver();\n    }\n\n    function trialIsOver() {\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor)\n        vismem.drawObjects(canvasContext, vismem.objects);\n        if (trackRecord >= NupNdown) {\n            if (allSetsizeAndTarget[currTrial][0] < maxSS * 2 - 2) {\n                // currSS = currSS + 2;\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                if (levelUpCount === 5) {\n                    levelUpCount = 5;\n                } else {\n                    levelUpCount++\n                }\n            } else {\n                ceilingSS = allSetsizeAndTarget[currTrial][0] + 1;\n                timeLimit = timeLimit - timeLimitDeclineStep;\n            }\n        }\n\n        if (trackRecord === 0 && allSetsizeAndTarget[currTrial][0] > 4) {\n            // currSS = currSS - 2;\n            timeLimit = timeLimit + timeLimitInclineStep;\n            if (timeLimit > ceilingTimeLimit) {\n                timeLimit = ceilingTimeLimit;\n            }\n        }\n        currTrial = currTrial + 1;\n        if (currTrial >= trialNumber) {\n            summarySetSize();\n            summaryScore();\n            Done();\n        } else {\n            trialConclude();\n        }\n    }\n    \n    function trialConclude() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        let textHeight = 0;\n        if (thatRight === 'wrong'){\n            responseText = \"ผิด\";\n            textHeight = 36;\n        } else {\n            responseText = \"ถูก\";\n            textHeight = 20;\n        }\n\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(responseText).width;\n        timeoutList.push(\n            setTimeout(function() {\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 100),\n\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 600),\n\n            setTimeout(function() {\n                switchSearchMode();\n            }, 900)\n        )\n    }\n\n    function summarySetSize() {\n        let sumHit2SetSizeRtF;\n        let sumHit6SetSizeRtF;\n        let sumHit12SetSizeRtF;\n        let sumHit24SetSizeRtF;\n        let sumHit44SetSizeRtF;\n        let sumCorrectRejection2SetSizeRtF;\n        let sumCorrectRejection6SetSizeRtF;\n        let sumCorrectRejection12SetSizeRtF;\n        let sumCorrectRejection24SetSizeRtF;\n        let sumCorrectRejection44SetSizeRtF;\n        let sumHit2SetSizeRtC;\n        let sumHit6SetSizeRtC;\n        let sumHit12SetSizeRtC;\n        let sumHit24SetSizeRtC;\n        let sumHit44SetSizeRtC;\n        let sumCorrectRejection2SetSizeRtC;\n        let sumCorrectRejection6SetSizeRtC;\n        let sumCorrectRejection12SetSizeRtC;\n        let sumCorrectRejection24SetSizeRtC;\n        let sumCorrectRejection44SetSizeRtC;\n        let featureOrConjunctionCondition = 2; // feature or conjunction\n        let appearOrDisappearCondition = 2; // appear or disappear\n        let setSizeCondition = 5; // [2, 6, 12, 24, 44] setsize\n        let trialNumberPerCondition = allSetsizeAndTarget.length / (featureOrConjunctionCondition * appearOrDisappearCondition * setSizeCondition);\n\n        // feature section\n        // 2 setsize section\n        hitAccuracy2SetSizeF = hit2SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (hit2SetSizeRtF.length !== 0){\n            sumHit2SetSizeRtF = hit2SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit2SetSizeRtF.push(0);\n            sumHit2SetSizeRtF = hit2SetSizeRtF;\n        }\n\n        avgHit2SetSizeRtF = sumHit2SetSizeRtF / 1000 / hit2SetSizeRtF.length;\n\n        correctRejectionAccuracy2SetSizeF = correctRejection2SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (correctRejection2SetSizeRtF.length !== 0){\n            sumCorrectRejection2SetSizeRtF = correctRejection2SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection2SetSizeRtF.push(0);\n            sumCorrectRejection2SetSizeRtF = correctRejection2SetSizeRtF;\n        }\n\n        avgCorrectRejection2SetSizeRtF = sumCorrectRejection2SetSizeRtF / 1000 / correctRejection2SetSizeRtF.length;\n\n        // 6 setsize section\n        hitAccuracy6SetSizeF = hit6SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (hit6SetSizeRtF.length !== 0){\n            sumHit6SetSizeRtF = hit6SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit6SetSizeRtF.push(0);\n            sumHit6SetSizeRtF = hit6SetSizeRtF;\n        }\n\n        avgHit6SetSizeRtF = sumHit6SetSizeRtF / 1000 / hit6SetSizeRtF.length;\n\n        correctRejectionAccuracy6SetSizeF = correctRejection6SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (correctRejection6SetSizeRtF.length !== 0){\n            sumCorrectRejection6SetSizeRtF = correctRejection6SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection6SetSizeRtF.push(0);\n            sumCorrectRejection6SetSizeRtF = correctRejection6SetSizeRtF;\n        }\n\n        avgCorrectRejection6SetSizeRtF = sumCorrectRejection6SetSizeRtF / 1000 / correctRejection6SetSizeRtF.length;\n\n        // 12 setsize section\n        hitAccuracy12SetSizeF = hit12SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (hit12SetSizeRtF.length !== 0){\n            sumHit12SetSizeRtF = hit12SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit12SetSizeRtF.push(0);\n            sumHit12SetSizeRtF = hit2SetSizeRtF;\n        }\n\n        avgHit12SetSizeRtF = sumHit12SetSizeRtF / 1000 / hit12SetSizeRtF.length;\n\n        correctRejectionAccuracy12SetSizeF = correctRejection12SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (correctRejection12SetSizeRtF.length !== 0){\n            sumCorrectRejection12SetSizeRtF = correctRejection12SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection12SetSizeRtF.push(0);\n            sumCorrectRejection12SetSizeRtF = correctRejection12SetSizeRtF;\n        }\n\n        avgCorrectRejection12SetSizeRtF = sumCorrectRejection12SetSizeRtF / 1000 / correctRejection12SetSizeRtF.length;\n\n        // 24 setsize section\n        hitAccuracy24SetSizeF = hit24SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (hit24SetSizeRtF.length !== 0){\n            sumHit24SetSizeRtF = hit24SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit24SetSizeRtF.push(0);\n            sumHit24SetSizeRtF = hit24SetSizeRtF;\n        }\n\n        avgHit24SetSizeRtF = sumHit24SetSizeRtF / 1000 / hit24SetSizeRtF.length;\n\n        correctRejectionAccuracy24SetSizeF = correctRejection24SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (correctRejection24SetSizeRtF.length !== 0){\n            sumCorrectRejection24SetSizeRtF = correctRejection24SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection24SetSizeRtF.push(0);\n            sumCorrectRejection24SetSizeRtF = correctRejection24SetSizeRtF;\n        }\n\n        avgCorrectRejection24SetSizeRtF = sumCorrectRejection24SetSizeRtF / 1000 / correctRejection24SetSizeRtF.length;\n\n        // 44 setsize section\n        hitAccuracy44SetSizeF = hit44SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (hit44SetSizeRtF.length !== 0){\n            sumHit44SetSizeRtF = hit44SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit44SetSizeRtF.push(0);\n            sumHit44SetSizeRtF = hit44SetSizeRtF;\n        }\n\n        avgHit44SetSizeRtF = sumHit44SetSizeRtF / 1000 / hit44SetSizeRtF.length;\n\n        correctRejectionAccuracy44SetSizeF = correctRejection44SetSizeRtF.length / trialNumberPerCondition * 100;\n        if (correctRejection44SetSizeRtF.length !== 0){\n            sumCorrectRejection44SetSizeRtF = correctRejection44SetSizeRtF.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection44SetSizeRtF.push(0);\n            sumCorrectRejection44SetSizeRtF = correctRejection44SetSizeRtF;\n        }\n\n        avgCorrectRejection44SetSizeRtF = sumCorrectRejection44SetSizeRtF / 1000 / correctRejection44SetSizeRtF.length;\n\n        // conjunction section\n        // 2 setsize section\n        hitAccuracy2SetSizeC = hit2SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (hit2SetSizeRtC.length !== 0){\n            sumHit2SetSizeRtC = hit2SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit2SetSizeRtC.push(0);\n            sumHit2SetSizeRtC = hit2SetSizeRtC;\n        }\n\n        avgHit2SetSizeRtC = sumHit2SetSizeRtC / 1000 / hit2SetSizeRtC.length;\n\n        correctRejectionAccuracy2SetSizeC = correctRejection2SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (correctRejection2SetSizeRtC.length !== 0){\n            sumCorrectRejection2SetSizeRtC = correctRejection2SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection2SetSizeRtC.push(0);\n            sumCorrectRejection2SetSizeRtC = correctRejection2SetSizeRtC;\n        }\n\n        avgCorrectRejection2SetSizeRtC = sumCorrectRejection2SetSizeRtC / 1000 / correctRejection2SetSizeRtC.length;\n\n        // 6 setsize section\n        hitAccuracy6SetSizeC = hit6SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (hit6SetSizeRtC.length !== 0){\n            sumHit6SetSizeRtC = hit6SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit6SetSizeRtC.push(0);\n            sumHit6SetSizeRtC = hit6SetSizeRtC;\n        }\n\n        avgHit6SetSizeRtC = sumHit6SetSizeRtC / 1000 / hit6SetSizeRtC.length;\n\n        correctRejectionAccuracy6SetSizeC = correctRejection6SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (correctRejection6SetSizeRtC.length !== 0){\n            sumCorrectRejection6SetSizeRtC = correctRejection6SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection6SetSizeRtC.push(0);\n            sumCorrectRejection6SetSizeRtC = correctRejection6SetSizeRtC;\n        }\n\n        avgCorrectRejection6SetSizeRtC = sumCorrectRejection6SetSizeRtC / 1000 / correctRejection6SetSizeRtC.length;\n\n        // 12 setsize section\n        hitAccuracy12SetSizeC = hit12SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (hit12SetSizeRtC.length !== 0){\n            sumHit12SetSizeRtC = hit12SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit12SetSizeRtC.push(0);\n            sumHit12SetSizeRtC = hit2SetSizeRtC;\n        }\n\n        avgHit12SetSizeRtC = sumHit12SetSizeRtC / 1000 / hit12SetSizeRtC.length;\n\n        correctRejectionAccuracy12SetSizeC = correctRejection12SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (correctRejection12SetSizeRtC.length !== 0){\n            sumCorrectRejection12SetSizeRtC = correctRejection12SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection12SetSizeRtC.push(0);\n            sumCorrectRejection12SetSizeRtC = correctRejection12SetSizeRtC;\n        }\n\n        avgCorrectRejection12SetSizeRtC = sumCorrectRejection12SetSizeRtC / 1000 / correctRejection12SetSizeRtC.length;\n\n        // 24 setsize section\n        hitAccuracy24SetSizeC = hit24SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (hit24SetSizeRtC.length !== 0){\n            sumHit24SetSizeRtC = hit24SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit24SetSizeRtC.push(0);\n            sumHit24SetSizeRtC = hit24SetSizeRtC;\n        }\n\n        avgHit24SetSizeRtC = sumHit24SetSizeRtC / 1000 / hit24SetSizeRtC.length;\n\n        correctRejectionAccuracy24SetSizeC = correctRejection24SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (correctRejection24SetSizeRtC.length !== 0){\n            sumCorrectRejection24SetSizeRtC = correctRejection24SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection24SetSizeRtC.push(0);\n            sumCorrectRejection24SetSizeRtC = correctRejection24SetSizeRtC;\n        }\n\n        avgCorrectRejection24SetSizeRtC = sumCorrectRejection24SetSizeRtC / 1000 / correctRejection24SetSizeRtC.length;\n\n        // 44 setsize section\n        hitAccuracy44SetSizeC = hit44SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (hit44SetSizeRtC.length !== 0){\n            sumHit44SetSizeRtC = hit44SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hit44SetSizeRtC.push(0);\n            sumHit44SetSizeRtC = hit44SetSizeRtC;\n        }\n\n        avgHit44SetSizeRtC = sumHit44SetSizeRtC / 1000 / hit44SetSizeRtC.length;\n\n        correctRejectionAccuracy44SetSizeC = correctRejection44SetSizeRtC.length / trialNumberPerCondition * 100;\n        if (correctRejection44SetSizeRtC.length !== 0){\n            sumCorrectRejection44SetSizeRtC = correctRejection44SetSizeRtC.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            correctRejection44SetSizeRtC.push(0);\n            sumCorrectRejection44SetSizeRtC = correctRejection44SetSizeRtC;\n        }\n\n        avgCorrectRejection44SetSizeRtC = sumCorrectRejection44SetSizeRtC / 1000 / correctRejection44SetSizeRtC.length;\n    }\n\n    function summaryScore() {\n        for (let correctIndex = latestHitRtIndex; correctIndex < comboCount.length; correctIndex++) {\n            latestHitRtIndex = correctIndex;\n            let rtScore = rtBound - hitRt[correctIndex];\n            let comboMultiplier = 0;\n            if (comboCount[correctIndex] === 0) {\n                comboMultiplier = 1;\n            } else if (comboCount[correctIndex] === 1) {\n                comboMultiplier = 1.05;\n            } else if (comboCount[correctIndex] === 2) {\n                comboMultiplier = 1.10;\n            } else if (comboCount[correctIndex] === 3) {\n                comboMultiplier = 1.20;\n            } else if (comboCount[correctIndex] === 4) {\n                comboMultiplier = 1.50;\n            } else if (comboCount[correctIndex] === 5) {\n                comboMultiplier = 2.00;\n            }\n            rtScore *= comboMultiplier;\n            scorePerTrial.push(rtScore);\n        }\n        sumScores = scorePerTrial.reduce((sum, score) => {\n            return sum + score;\n        });\n\n        sumRt = allRt.reduce((sum, scores) => {\n            return sum + scores;\n        });\n\n        if (hitRt.length !== 0){\n            sumHitRt = hitRt.reduce((sum, score) => {\n                return sum + score;\n            });\n        } else {\n            hitRt.push(0);\n            sumHitRt = hitRt;\n        }\n\n        avgHitRt = sumHitRt / 1000 / hitRt.length;\n        if (avgHitRt < 1) {\n            swiftness = \"เร็วมาก\";\n        }\n        else if (avgHitRt < 2) {\n            swiftness = \"เร็ว\";\n        }\n        else {\n            swiftness = \"ปานกลาง\";\n        }\n\n        total = Math.max(10000, Math.round((sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber));\n\n        return total;\n    }\n\n    function Done() {\n        setIsItDone(true);\n        score = total;\n        hightestSetSizeCheck(checkAns, setSizeRecord);\n        scoringDataResult = scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total);\n        metricDataResult = metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness);\n        postEntryResult = postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult);\n        axios.post('https://exercise-vercel-svelte-backend.vercel.app/api/hard/conjunction_search', postEntryResult)\n            .then(function (postEntryResult) {\n                console.log(postEntryResult)\n            })\n            .catch(function (error) {\n                console.log('error')\n            });\n        saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_visualsearch_hard_session${props.userSession}_${thisTime().toString()}`);\n    }\n\n    function scoringData(rtBound, incorrectMultiplier, lateMultiplier, scoresMultiplier, trialNumber, total){\n        scoringDataResult = [{\n            \"scoringModel\" : {\n                \"scoringName\" : \"default\",\n                \"parameters\" : {\n                    \"rtBound\" : {\n                        \"value\" : rtBound,\n                        \"unit\" : null,\n                        \"description\" : \"rtBound - hitRt = rtScore\"\n                    },\n                    \"incorrectMultiplier\" : {\n                        \"value\" : incorrectMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for incorrectCount\"\n                    },\n                    \"lateMultiplier\" : {\n                        \"value\" : lateMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for correctButLateCount\"\n                    },\n                    \"scoresMultiplier\" : {\n                        \"value\" : scoresMultiplier,\n                        \"unit\" : null,\n                        \"description\" : \"Multiplier for total score\"\n                    },\n                    \"trialNumber\" : {\n                        \"value\" : trialNumber,\n                        \"unit\" : null,\n                        \"description\" : \"Total number of trials\"\n                    }\n                },\n                \"description\" : `score = (sumScores - (incorrectCount * incorrectMultiplier + correctButLateCount * lateMultiplier)) * scoresMultiplier / trialNumber; comboMultiplier depends on comboCount if comboCount = [0, 1, 2, 3, 4, 5] -> comboMultiplier = [1, 1.05, 1.10, 1.20, 1.50, 2]`\n            },\n            \"score\" : total\n        }]\n        return scoringDataResult;\n    }\n\n    function hightestSetSizeCheck(checkAns, setSizeRecord){\n        for (let i = 0; i < checkAns.length; i++){\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                setSizeInCorrectAns.push(setSizeRecord[i])\n            } \n        }\n        setSizeInCorrectAns.sort((a,b) => a-b);\n        return setSizeInCorrectAns;\n    }\n\n    function metricData(trialNumber, incorrectCount, correctButLateCount, setSizeInCorrectAns, timeLimitRecord, hitRt, avgHitRt, swiftness){\n        timeLimitRecord.sort((a,b) => a-b);\n        hitRt.sort((a,b) => a-b);\n        let metricName \n            = ['correctCount', \n               'incorrectCount', \n               'correctButLateCount', \n               'highestSetSize', \n               'lowestTimeLimit', \n               'fastestHitReactionTime', \n               'averageHitReactionTime', \n               'swiftness',\n               'hitAccuracyFeature2SS',\n               'avgHitReactionTimeFeature2SS',\n               'hitAccuracyFeature6SS',\n               'avgHitReactionTimeFeature6SS',\n               'hitAccuracyFeature12SS',\n               'avgHitReactionTimeFeature12SS',\n               'hitAccuracyFeature24SS',\n               'avgHitReactionTimeFeature24SS',\n               'hitAccuracyFeature44SS',\n               'avgHitReactionTimeFeature44SS',\n               'correctRejectionAccuracyFeature2SS',\n               'avgCorrectRejectionTimeFeature2SS',\n               'correctRejectionAccuracyFeature6SS',\n               'avgCorrectRejectionTimeFeature6SS',\n               'correctRejectionAccuracyFeature12SS',\n               'avgCorrectRejectionTimeFeature12SS',\n               'correctRejectionAccuracyFeature24SS',\n               'avgCorrectRejectionTimeFeature24SS',\n               'correctRejectionAccuracyFeature44SS',\n               'avgCorrectRejectionTimeFeature44SS',\n               'hitAccuracyConjunction2SS',\n               'avgHitReactionTimeConjunction2SS',\n               'hitAccuracyConjunction6SS',\n               'avgHitReactionTimeConjunction6SS',\n               'hitAccuracyConjunction12SS',\n               'avgHitReactionTimeConjunction12SS',\n               'hitAccuracyConjunction24SS',\n               'avgHitReactionTimeConjunction24SS',\n               'hitAccuracyConjunction44SS',\n               'avgHitReactionTimeConjunction44SS',\n               'correctRejectionAccuracyConjunction2SS',\n               'avgCorrectRejectionTimeConjunction2SS',\n               'correctRejectionAccuracyConjunction6SS',\n               'avgCorrectRejectionTimeConjunction6SS',\n               'correctRejectionAccuracyConjunction12SS',\n               'avgCorrectRejectionTimeConjunction12SS',\n               'correctRejectionAccuracyConjunction24SS',\n               'avgCorrectRejectionTimeConjunction24SS',\n               'correctRejectionAccuracyConjunction44SS',\n               'avgCorrectRejectionTimeConjunction44SS',];\n        let metricValue \n            = [trialNumber - incorrectCount, \n               incorrectCount, \n               correctButLateCount, \n               setSizeInCorrectAns[setSizeInCorrectAns.length - 1], \n               timeLimitRecord[1], \n               hitRt[0], \n               avgHitRt, \n               swiftness,\n               hitAccuracy2SetSizeF,\n               avgHit2SetSizeRtF,\n               hitAccuracy6SetSizeF,\n               avgHit6SetSizeRtF,\n               hitAccuracy12SetSizeF,\n               avgHit12SetSizeRtF,\n               hitAccuracy24SetSizeF,\n               avgHit24SetSizeRtF,\n               hitAccuracy44SetSizeF,\n               avgHit44SetSizeRtF,\n               correctRejectionAccuracy2SetSizeF,\n               avgCorrectRejection2SetSizeRtF,\n               correctRejectionAccuracy6SetSizeF,\n               avgCorrectRejection6SetSizeRtF,\n               correctRejectionAccuracy12SetSizeF,\n               avgCorrectRejection12SetSizeRtF,\n               correctRejectionAccuracy24SetSizeF,\n               avgCorrectRejection24SetSizeRtF,\n               correctRejectionAccuracy44SetSizeF,\n               avgCorrectRejection44SetSizeRtF,\n               hitAccuracy2SetSizeC,\n               avgHit2SetSizeRtC,\n               hitAccuracy6SetSizeC,\n               avgHit6SetSizeRtC,\n               hitAccuracy12SetSizeC,\n               avgHit12SetSizeRtC,\n               hitAccuracy24SetSizeC,\n               avgHit24SetSizeRtC,\n               hitAccuracy44SetSizeC,\n               avgHit44SetSizeRtC,\n               correctRejectionAccuracy2SetSizeC,\n               avgCorrectRejection2SetSizeRtC,\n               correctRejectionAccuracy6SetSizeC,\n               avgCorrectRejection6SetSizeRtC,\n               correctRejectionAccuracy12SetSizeC,\n               avgCorrectRejection12SetSizeRtC,\n               correctRejectionAccuracy24SetSizeC,\n               avgCorrectRejection24SetSizeRtC,\n               correctRejectionAccuracy44SetSizeC,\n               avgCorrectRejection44SetSizeRtC,];\n        let metricUnit = [null, null, null, null, 'ms', 'ms', 's', null, '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's'];\n        let metricDescription \n            = ['Total number of correct trials', \n               'Total number of incorrect trials', \n               'Total number of correct but late trials', \n               'The highest set size that user reached', \n               'The lowest time limit for trials that user reached', \n               'The fastest hit reaction time that user reached', \n               'The average of all hit reaction time', \n               'The quality of all hit reaction time',\n               'The accuracy of 2 setsize hit in feature mode',\n               'The average reaction time of all 2 setsize hit in feature mode',\n               'The accuracy of 6 setsize hit in feature mode',\n               'The average reaction time of all 6 setsize hit in feature mode',\n               'The accuracy of 12 setsize hit in feature mode',\n               'The average reaction time of all 12 setsize hit in feature mode',\n               'The accuracy of 24 setsize hit in feature mode',\n               'The average reaction time of all 24 setsize hit in feature mode',\n               'The accuracy of 44 setsize hit in feature mode',\n               'The average reaction time of all 44 setsize hit in feature mode',\n               'The accuracy of 2 setsize correct rejection in feature mode',\n               'The average reaction time of all 2 setsize correct rejection in feature mode',\n               'The accuracy of 6 setsize correct rejection in feature mode',\n               'The average reaction time of all 6 setsize correct rejection in feature mode',\n               'The accuracy of 12 setsize correct rejection in feature mode',\n               'The average reaction time of all 12 setsize correct rejection in feature mode',\n               'The accuracy of 24 setsize correct rejection in feature mode',\n               'The average reaction time of all 24 setsize correct rejection in feature mode',\n               'The accuracy of 44 setsize correct rejection in feature mode',\n               'The average reaction time of all 44 setsize correct rejection in feature mode',\n               'The accuracy of 2 setsize hit in conjunction mode',\n               'The average reaction time of all 2 setsize hit in conjunction mode',\n               'The accuracy of 6 setsize hit in conjunction mode',\n               'The average reaction time of all 6 setsize hit in conjunction mode',\n               'The accuracy of 12 setsize hit in conjunction mode',\n               'The average reaction time of all 12 setsize hit in conjunction mode',\n               'The accuracy of 24 setsize hit in conjunction mode',\n               'The average reaction time of all 24 setsize hit in conjunction mode',\n               'The accuracy of 44 setsize hit in conjunction mode',\n               'The average reaction time of all 44 setsize hit in conjunction mode',\n               'The accuracy of 2 setsize correct rejection in conjunction mode',\n               'The average reaction time of all 2 setsize correct rejection in conjunction mode',\n               'The accuracy of 6 setsize correct rejection in conjunction mode',\n               'The average reaction time of all 6 setsize correct rejection in conjunction mode',\n               'The accuracy of 12 setsize correct rejection in conjunction mode',\n               'The average reaction time of all 12 setsize correct rejection in conjunction mode',\n               'The accuracy of 24 setsize correct rejection in conjunction mode',\n               'The average reaction time of all 24 setsize correct rejection in conjunction mode',\n               'The accuracy of 44 setsize correct rejection in conjunction mode',\n               'The average reaction time of all 44 setsize correct rejection in conjunction mode',];\n        for (let i = 0; i < metricName.length; i++){\n            let obj_to_append\n            obj_to_append = {\n                \"metricName\" : metricName[i],\n                \"value\" : metricValue[i],\n                \"unit\" : metricUnit[i],\n                \"description\" : metricDescription[i]\n            }\n            metricDataResult.push(obj_to_append);\n        }    \n        return metricDataResult;\n    }\n\n    function postEntry(targetDataResult, trialDataResult, gameLogicSchemeResult, scoringDataResult, metricDataResult){\n        postEntryResult = {\n            \"date\" : `${thisTime().toString()}`,\n            \"userId\" : props.userId,\n            \"userPhone\" : props.userPhone,\n            \"userSession\" : props.userSession,\n            \"data\" : {\n                \"rawData\" : {\n                    \"target\" : targetDataResult,\n                    \"trialData\" : trialDataResult\n                },\n                \"gameLogicScheme\" : gameLogicSchemeResult,\n                \"scoringData\" : scoringDataResult,\n                \"metricData\" : metricDataResult\n            }\n        }\n        return postEntryResult;\n    }\n\n    return (\n        <div className='h-screen w-full bg-slate-50 flex flex-col'>\n            <div className='flex justify-center items-center flex-grow p-5'>\n                {<CJSWindow searchTarget={searchTarget} searchTargetList={searchTargetList} canvasWidth={canvasWidth} canvasHeight={canvasHeight} />}\n                {<CJSButton searchTarget={searchTarget} disabledButton={disabledButton} checkResp={checkResp}/>}\n            </div>\n        </div>\n    )\n}\n\n\nexport default CJSGame;\n\nfunction endTime() { \n    let d = new Date();\n    return d.getTime();\n}\n\nfunction thisTime() {\n    let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n    return thisTime;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}