[{"/Users/pavlov/Documents/GitHub/vss-visual-search/src/index.tsx":"1","/Users/pavlov/Documents/GitHub/vss-visual-search/src/reportWebVitals.ts":"2","/Users/pavlov/Documents/GitHub/vss-visual-search/src/App.tsx":"3","/Users/pavlov/Documents/GitHub/vss-visual-search/src/uitls/offline.ts":"4","/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/participantForm/participantForm.tsx":"5","/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/landingPage/LandingPage.tsx":"6","/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/FITC2.tsx":"7","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/loadingSpinner/LoadingSpinner.tsx":"8","/Users/pavlov/Documents/GitHub/vss-visual-search/src/scripts/shuffle.ts":"9","/Users/pavlov/Documents/GitHub/vss-visual-search/src/scripts/vismemCC_simon.ts":"10","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/breadcrumbs/breadCrumb.tsx":"11","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameSelectionCard/gameSelectionCard.tsx":"12","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameWindow/cjsWindow/CJSWindow.tsx":"13","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameWindow/cjsWindow/cjsButton/CJSButton.tsx":"14"},{"size":572,"mtime":1733261736009,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1733261736012,"results":"17","hashOfConfig":"16"},{"size":3482,"mtime":1733268016556,"results":"18","hashOfConfig":"16"},{"size":4867,"mtime":1733261736013,"results":"19","hashOfConfig":"16"},{"size":5591,"mtime":1733261736011,"results":"20","hashOfConfig":"16"},{"size":1722,"mtime":1733261736011,"results":"21","hashOfConfig":"16"},{"size":25948,"mtime":1733261736010,"results":"22","hashOfConfig":"16"},{"size":1333,"mtime":1733261736009,"results":"23","hashOfConfig":"16"},{"size":204,"mtime":1733261736012,"results":"24","hashOfConfig":"16"},{"size":13194,"mtime":1733261736012,"results":"25","hashOfConfig":"16"},{"size":3742,"mtime":1733261736007,"results":"26","hashOfConfig":"16"},{"size":1999,"mtime":1733261736008,"results":"27","hashOfConfig":"16"},{"size":2452,"mtime":1733261736008,"results":"28","hashOfConfig":"16"},{"size":2275,"mtime":1733261736008,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"veomqw",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"/Users/pavlov/Documents/GitHub/vss-visual-search/src/index.tsx",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/reportWebVitals.ts",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/App.tsx",["77","78","79"],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/uitls/offline.ts",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/participantForm/participantForm.tsx",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/landingPage/LandingPage.tsx",["80"],[],"import './LandingPage.css';\nimport GameSelectionCard from '../../components/gameSelectionCard/gameSelectionCard';\nimport BreadCrumb from '../.././components/breadcrumbs/breadCrumb';\nimport CJSImage from  '../../assets/png/conjs-img.png'\nimport LoadingSpinner from '../../components/loadingSpinner/LoadingSpinner';\nimport { useEffect } from 'react';\n\nconst gameInfos = [\n  // {\n  //   name: 'Face In The Crowd A',\n  //   title: 'หาเธอในฝูงชน A',\n  //   domain: 'Track A',\n  //   gameUri: 'face-in-the-crowd-A',\n  //   image: `${CJSImage}`,\n  // },\n  // {\n  //   name: 'Face In The Crowd B',\n  //   title: 'หาเธอในฝูงชน B',\n  //   domain: 'Track B',\n  //   gameUri: 'face-in-the-crowd-B',\n  //   image: `${CJSImage}`,\n  // },\n  {\n    name: 'Face In The Crowd 2.0',\n    title: 'หาเธอในฝูงชน',\n    domain: 'Visual Search',\n    gameUri: 'face-in-the-crowd-2.0',\n    image: `${CJSImage}`,\n  },\n]\n\nfunction LandingPage() {\n\n  useEffect(() => {\n    const hasReloaded = sessionStorage.getItem('hasReloaded'); // ตรวจสอบใน sessionStorage\n\n    // ถ้ายังไม่เคยรีโหลด\n    if (!hasReloaded) {\n      sessionStorage.setItem('hasReloaded', 'true'); // ตั้งค่าใน sessionStorage\n      window.location.reload(); // ทำการรีโหลดหน้าเว็บ\n    }\n  }, []);;\n\n  return (\n    <div className='h-screen w-full bg-slate-50'>\n      <div className=\"row\">\n            {<BreadCrumb />}\n        <div className='w-full px-6 sm:px-24 py-6 sm:py-36'>\n              {<GameSelectionCard games={gameInfos} />}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage","/Users/pavlov/Documents/GitHub/vss-visual-search/src/pages/game/FITC2.tsx",["81","82","83","84","85","86","87","88","89"],[],"import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CJSWindow from '../../components/gameWindow/cjsWindow/CJSWindow';\nimport useSound from 'use-sound';\nimport clickSoundSrc from '../../assets/sound/click.mp3';\nimport combo2SoundSrc from '../../assets/sound/combo2.mp3';\nimport losingSoundSrc from '../../assets/sound/losingStreak.mp3';\nimport moment from 'moment';\nimport { Shuffle } from '../../scripts/shuffle';\nimport * as vismem from '../../scripts/vismemCC_simon';\nimport CJSButton from '../../components/gameWindow/cjsWindow/cjsButton/CJSButton';\nimport {saveJSONDataToClientDevice } from '../../uitls/offline';\n\nlet myCanvas: HTMLCanvasElement;\nlet canvasContext: CanvasRenderingContext2D;\nlet trialNumber;\nlet currTrial = 0;\nlet backgroundColor = '#E5E5E5';\nlet stimulusColor = ['#9370DB', '#3CB4C6', '#B2D33D', '#F67E4B']; \nlet searchTargetList: any[][] = [\n    [\n        {description: 'สี่เหลี่ยมสีม่วง', color: '#9370DB', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีฟ้า', color: '#3CB4C6', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีเขียว', color: '#B2D33D', shape: 'square'},\n        {description: 'สี่เหลี่ยมสีส้ม', color: '#F67E4B', shape: 'square'},\n    ],\n    [\n        {description: 'วงกลมสีม่วง', color: '#9370DB', shape: 'circle'},\n        {description: 'วงกลมสีฟ้า', color: '#3CB4C6', shape: 'circle'},\n        {description: 'วงกลมสีเขียว', color: '#B2D33D', shape: 'circle'},\n        {description: 'วงกลมสีส้ม', color: '#F67E4B', shape: 'circle'}\n    ],\n    \n]\nlet canvasWidth = 600;\nlet canvasHeight = 600;\nlet squareWidth = 45;\nlet squareHeight = 45;\nlet radius = squareWidth / 2;\nlet positionJitter = 8;\nlet centerX: number;\nlet centerY: number;\nlet Xspan = canvasWidth / 2;\nlet Yspan = canvasHeight / 2;\nlet XblockNumber = 8;\nlet YblockNumber = 6;\nlet Xblock = Xspan * 2 / XblockNumber;\nlet Yblock = Yspan * 2 / YblockNumber;\nlet X: number[]\nlet Y: number[]\nlet Xs: number[] = [];\nlet Ys: number[] = [];\nlet Xtemps: number[] = [];\nlet Ytemps: number[] = [];\nlet posId: number[] = [];\nlet maxSS = Math.floor((XblockNumber * YblockNumber - 1) / 2);\nlet currSS = 2;\nlet initialSetSize = 2; // must have same value as currSS\nlet baselineSetsizeAndTarget: number[][] = [];\nlet allTrialPerBlock: number[][] = [];\nlet testSetsizeAndTarget: number[][] = [];\nlet allSetsizeAndTarget: number[][] = [];\nlet change = NaN;\nlet shapeRand: number[] = [];\nlet ori: number[]\nlet col: string[]\nlet oris: number[] = [];\nlet cols: number[] = [];\nlet checkAns: string[] = [];\nlet thatRight: string = '';\nlet responseText: string = '';\nlet countdownText: string = '0';\nlet timeoutList: any[] = []; \nlet count = 0;\nlet STT;\nlet ET;\nlet allRt: number[] = [];\nlet hitRt: number[] = [];\nlet correctCount = 0;\nlet incorrectCount = 0;\nlet targetMatch: boolean[] = [];\nlet allStartTime: string[] = [];\nlet allClickTime: string[] = [];\nlet allCurrSS: number[] = [];\nlet trialDataResult: any[] = [];\nlet stimulusDataResult: any[] = [];\nlet targetDataResult: any[] = [];\nlet setSizeRecord: any[] = [];\nlet allSearchMode: string[] = [];\nlet version = 'FITC2';\nlet postEntryResult;\n\nfunction FITC2(props): any {\n    const navigate = useNavigate();\n    const [clickSound] = useSound(clickSoundSrc);\n    const [combo2Sound] = useSound(combo2SoundSrc);\n    const [losingSound] = useSound(losingSoundSrc);\n    const [searchTarget, setSearchTarget] = useState<{ shape: number, col: number }>();\n    const [progressValue, setProgressValue] = useState(0);\n    const [disabledButton, setDisabledButton] = useState(false);\n    const [isItDone, setIsItDone] = useState(false);\n\n        useEffect(() => {\n            initiateData();\n            createPseudorandomStimuli();\n            return() => {\n                timeoutList.forEach(tm => {\n                    clearTimeout(tm);\n                })\n            };\n        }, [])\n\n        useEffect(() => {\n            switchSearchMode();\n        }, [searchTarget])\n\n    function initiateData() {\n        hitRt = [];\n        allRt = [];\n        currSS = 2;\n        correctCount = 0;\n        incorrectCount = 0;\n        count = 0;\n        currTrial = 0;\n        Xtemps = [];\n        Xs = [];\n        Ytemps = [];\n        Ys = [];\n        posId = [];\n        trialDataResult = [];\n    }\n\n    function checkStimuliColorSet(){\n        const colorSet = props.userId % 4; \n        if (props.userId % 2 === 0){ // ถ้า userId เป็นเลขคู่\n            if (allSetsizeAndTarget[currTrial][3] ===  0) {\n                setSearchTarget({ shape: 0, col: colorSet });\n            } else {\n                setSearchTarget({ shape: 1, col: (colorSet + 1) % 4 });\n            }\n            \n        } else { // ถ้า userId เป็นเลขคี่\n            if (allSetsizeAndTarget[currTrial][3] ===  1) {\n                setSearchTarget({ shape: 1, col: (colorSet + 1) % 4 });\n            } else {\n                setSearchTarget({ shape: 0, col: colorSet });\n            }\n        }\n    }\n\n    function createPseudorandomStimuli() {\n        baselineSetsizeAndTarget = [];\n        testSetsizeAndTarget = [];\n        allSetsizeAndTarget = [];\n        let allSetsizeRange = [31];\n        let trialsPerSetsize = 80; \n        let targetCondition = 2; // target appear or disappear\n        let trialsPerCondition = trialsPerSetsize / targetCondition; \n        let miniBlocks = 5; // in test blocks \n        let trialsPerBlock = trialsPerSetsize / miniBlocks; // จำนวน trials ต่อ mini-block\n        let probabilities = [0.9, 0.7, 0.5, 0.3, 0.1]; // โอกาสการปรากฏของ 1 ในแต่ละ mini-block\n\n        // conjunction search pre-test\n        for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n            for (let iRep = 0; iRep < trialsPerCondition; iRep++) {\n                for (let iTarget = 0; iTarget < targetCondition; iTarget++) {\n                    // baselineSetsizeAndTarget[0][3] คือชุดของสีที่จะใช้\n                    baselineSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1, 0]);\n                    baselineSetsizeAndTarget.push([allSetsizeRange[iSetsize], iTarget, 1, 1]);\n                }\n            }\n        }\n        Shuffle(baselineSetsizeAndTarget); \n\n        // ใส่ baselineSetsizeAndTarget เข้าไปใน allSetsSizeAndTarget\n        allSetsizeAndTarget = [...baselineSetsizeAndTarget];\n\n        // conjunction search 5 mini-blocks \n        // ก่อนจะใส่ testSetsizeAndTarget เช็คให้ชัวร์ก่อนว่า allSetsizeAndTarget ไม่ว่างเปล่า\n        if (allSetsizeAndTarget.length === baselineSetsizeAndTarget.length) {\n            // Block 1 (first 5 mini-blocks)\n            probabilities.slice(0, miniBlocks).forEach(probability => {\n                allTrialPerBlock = [];\n                const targetAppear: number = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n                const targetAbsent: number = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n                \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ ExArray\n                const ExArray: number[] = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n                \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ GFArray\n                const GFArray: number[] = Array(targetAppear).fill(0).concat(Array(targetAbsent).fill(1));\n                \n                for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n                    for (let iTarget = 0; iTarget < ExArray.length; iTarget++) {\n                        allTrialPerBlock.push([allSetsizeRange[iSetsize], ExArray[iTarget], 1, 0])\n                        allTrialPerBlock.push([allSetsizeRange[iSetsize], GFArray[iTarget], 1, 1])\n                    }\n                }\n\n                // สุ่มให้คละกัน\n                Shuffle(allTrialPerBlock);\n                testSetsizeAndTarget.push(...allTrialPerBlock);\n            });\n            \n            // Block 2 (next 5 mini-blocks)\n            probabilities.slice(0, miniBlocks).forEach(probability => {\n                allTrialPerBlock = [];\n                const targetAppear: number = Math.round(trialsPerBlock * probability); // จำนวนครั้งที่ต้อง push 1\n                const targetAbsent: number = trialsPerBlock - targetAppear; // ที่เหลือเป็น 0\n\n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ ExArray\n                const ExArray: number[] = Array(targetAppear).fill(0).concat(Array(targetAbsent).fill(1));\n    \n                // สร้าง array ที่มี 1 และ 0 ตามจำนวนที่คำนวณ ของ GFArray\n                const GFArray: number[] = Array(targetAppear).fill(1).concat(Array(targetAbsent).fill(0));\n    \n                for (let iSetsize = 0; iSetsize < allSetsizeRange.length; iSetsize++) {\n                    for (let iTarget = 0; iTarget < ExArray.length; iTarget++) {\n                        allTrialPerBlock.push([allSetsizeRange[iSetsize], ExArray[iTarget], 1, 0])\n                        allTrialPerBlock.push([allSetsizeRange[iSetsize], GFArray[iTarget], 1, 1])\n                    }\n                }\n\n                // สุ่มให้คละกัน\n                Shuffle(allTrialPerBlock);\n                testSetsizeAndTarget.push(...allTrialPerBlock);\n            });\n            \n            // ต่อ testSetsizeAndTarget จาก baselineSetsizeAndTarget ใน allSetsizeAndTarget\n            allSetsizeAndTarget.splice(allSetsizeAndTarget.length, 0, ...testSetsizeAndTarget);\n        }\n\n        // กำหนดค่า trialNumber ให้เท่ากับจำนวนข้อทั้งหมด\n        trialNumber = allSetsizeAndTarget.length;\n        checkStimuliColorSet();\n        console.log(allSetsizeAndTarget)\n    }\n\n    function switchSearchMode() {\n        if (searchTarget) {\n            oris = [];\n            cols = [];\n            // conjunction search\n            allSearchMode.push('conjunction search');\n            for (let j = 0; j < maxSS; j++) { oris.push(0); oris.push(1)};\n            if (searchTarget.col === 0) {\n                for (let k = 0; k < maxSS; k++) { cols.push(0); cols.push(2)};\n            } else if (searchTarget.col === 1) {\n                for (let k = 0; k < maxSS; k++) { cols.push(1); cols.push(3)};\n            } else if (searchTarget.col === 2) {\n                for (let k = 0; k < maxSS; k++) { cols.push(2); cols.push(0)};\n            } else if (searchTarget.col === 3) {\n                for (let k = 0; k < maxSS; k++) { cols.push(3); cols.push(1)};\n            }\n            if (searchTarget.shape === 1) {\n                shapeRand = [1];\n            } else {\n                shapeRand = [0];\n            }\n\n            // if createCanvas() runs before switchSearchMode() the target and distractors position might be overlapped\n            if (currTrial === 0){ \n                // create only one time when the game started\n                createCanvas();\n            } else if (currTrial === (trialNumber / 3)){\n                timeIntervalPerBlock();   \n            } else {\n                initialT(0, allSetsizeAndTarget[currTrial][0]);\n            }\n\n        }\n    }\n    \n    function createCanvas() {\n        myCanvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n        canvasContext = myCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        centerX = myCanvas.width / 2;\n        centerY = myCanvas.height / 2;\n\n        for (var ix = 0; ix < XblockNumber; ix++) {\n            Xtemps.push(Math.round(Xblock / 2) + Xblock * ix - Xspan + centerX);\n        }\n\n        for (var iy = 0; iy < YblockNumber; iy++) {\n            Ytemps.push(Math.round(Yblock / 2) + Yblock * iy - Yspan + centerY);\n        }\n\n        for (ix = 0; ix < XblockNumber; ix++) {\n            for (iy = 0; iy < YblockNumber; iy++) {\n                Xs.push(Xtemps[ix]);\n                Ys.push(Ytemps[iy]);\n                posId.push(count);\n                count++;\n            }\n        }\n        myCanvas.hidden = false;\n        timeIntervalPerBlock();\n    }\n\n    function initialT(_waittime, SS) {\n        setDisabledButton(false);\n        setSizeRecord.push(SS);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        allCurrSS.push(allSetsizeAndTarget[currTrial][0]);\n        shuffleSS(SS);\n        targetData(squareWidth, ori, col);\n        makeBackground(backgroundColor);\n        makeSearchArray(X, Y, squareWidth, squareHeight, ori, col);\n        stimulusData(realX, realY, squareWidth, ori, col);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        let dT = new Date();\n        STT = dT.getTime();\n        allStartTime.push(thisTime());\n    }\n\n    function shuffleSS(setSize) {\n        Shuffle(posId);\n        X = []; for (let ix = 0; ix < setSize + 1; ix++) { X.push(Xs[posId[ix]]) };\n        Y = []; for (let iy = 0; iy < setSize + 1; iy++) { Y.push(Ys[posId[iy]]) };\n        ori = []; for (let j = 0; j < setSize; j++) { ori.push(oris[j]) };\n        col = []; for (let j = 0; j < setSize; j++) { col.push(stimulusColor[cols[j]]) };\n\n            // conjunction search\n            // check if the target appears or disappears\n            if (allSetsizeAndTarget[currTrial][1] === 0) {\n                // disappears\n                ori.push(oris[setSize]);\n                col.push(stimulusColor[cols[setSize]]);\n            } else {\n                // appears\n                if (oris[setSize] === 0) {\n                    ori.push(1);\n                } else {\n                    ori.push(1);\n                }\n\n                if (cols[setSize] === 0) {\n                    col.push(stimulusColor[2]);\n                } else if (cols[setSize] === 1) {\n                    col.push(stimulusColor[3]);\n                } else if (cols[setSize] === 2) {\n                    col.push(stimulusColor[0]);\n                } else if (cols[setSize] === 3) {\n                    col.push(stimulusColor[1]);\n                }\n            }\n    }\n\n    function makeBackground(backgroundColor) {\n        // Fill background\n        vismem.makeRectangle('bg', centerX, centerY, canvasWidth, canvasHeight, false, backgroundColor, backgroundColor);\n    }\n\n    let realX: number[] = [];\n    let realY: number[] = [];\n    function makeSearchArray(numarrayX, numarrayY, squareWidth, squareHeight, orienVec, colorVec) {\n        for (let i = 0; i < orienVec.length; i++) {\n            if (orienVec[i] === shapeRand[0]) {\n                vismem.makeCircle('c', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, radius, false, colorVec[i], colorVec[i]);\n            } else {\n                vismem.makeRectangle('s', numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter, numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter, squareHeight, squareWidth, false, colorVec[i], colorVec[i], 0, 0);\n            }\n            realX.push(numarrayX[i] + (Math.random() - 0.5) * 2 * positionJitter);\n            realY.push(numarrayY[i] + (Math.random() - 0.5) * 2 * positionJitter);\n        }\n        if (searchTarget) {\n            // Find Target from Object\n            let find = vismem.objects.find(x => x.id === (searchTarget.shape === 0 ? 's' : 'c') && x.color === stimulusColor[searchTarget.col])\n            change = find ? 1 : 0\n            targetMatch.push(find ? true : false);\n        }\n    }\n    \n    function targetData(width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        let obj_to_append;\n        if (shapeRand[0] === 1) {\n            thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n\n            if (searchTarget) {\n                obj_to_append = {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : stimulusColor[searchTarget.col]\n                }\n                obj_in_trial.push(obj_to_append);\n            }\n        targetDataResult = obj_in_trial[obj_in_trial.length - 1];\n        return targetDataResult;\n    }\n\n    function stimulusData(x, y, width, ori, col) {\n        let thisShape = \"\";\n        let thisParameterName = \"\";\n        let thisValue = 0;\n        let obj_in_trial: any[] = [];\n        \n        for (let i = 0; i < col.length; i++){\n            let obj_to_append;\n            if (ori[i] === shapeRand[0]) {\n                thisShape = \"circle\";\n                thisParameterName = \"radius\";\n                thisValue = radius;\n            } else {\n                thisShape = \"square\";\n                thisParameterName = \"width\";\n                thisValue = width;\n            }\n                obj_to_append = {\n                \"type\" : \"distractor\",\n                \"display\" : {\n                    \"shape\" : thisShape,\n                    \"shapeParams\" : {\n                        \"parameterName\" : thisParameterName,\n                        \"value\" : thisValue,\n                        \"unit\" : \"px\"\n                    },\n                    \"color\" : col[i]\n                },\n                \"position\" : {\n                    \"x\" : {\n                        \"value\" : x[i],\n                        \"unit\" : \"px\"\n                    },\n                    \"y\" : {\n                        \"value\" : y[i],\n                        \"unit\" : \"px\"\n                    }\n                }\n            }   \n            obj_in_trial.push(obj_to_append);\n        }\n        obj_in_trial[obj_in_trial.length - 1].type = \"target\";\n        stimulusDataResult.push(obj_in_trial);\n        return stimulusDataResult;\n    }\n\n    function trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode){\n        let thisAns;\n        let obj_in_trial: any[] = [];\n        for (let i = 0; i < targetMatch.length; i++){\n            let obj_to_append;\n            if (checkAns[i] === 'right' || checkAns[i] === 'late'){\n                thisAns = true;\n            } else {\n                thisAns = false;\n            }\n            obj_to_append = {\n                \"hasTarget\" : targetMatch[i],\n                \"startTime\" : allStartTime[i],\n                \"setSize\" : allCurrSS[i] + 1,\n                \"answerTime\" : allClickTime[i],\n                \"AnswerBool\" : thisAns,\n                \"stimulusData\" : stimulusDataResult[i],\n                \"mode\" : allSearchMode[i]\n            }\n            obj_in_trial.push(obj_to_append);\n        }\n        trialDataResult.push(obj_in_trial[obj_in_trial.length - 1]);\n        return trialDataResult;\n    }\n    \n    function checkResp(foo) {\n        clickSound();\n        let dT2 = new Date();\n        ET = dT2.getTime();\n        allClickTime.push(thisTime());\n        let rt = ET - STT;\n        allRt.push(rt);\n        if (change === foo) {\n            combo2Sound();\n            thatRight = 'right';\n            checkAns.push(thatRight);\n            hitRt.push(rt);\n            correctCount++;\n        } else {\n            losingSound();\n            thatRight = 'wrong';\n            checkAns.push(thatRight);\n            incorrectCount++;\n        }\n        trialDataResult = trialData(targetMatch, allStartTime, allCurrSS, allClickTime, checkAns, stimulusDataResult, allSearchMode);\n        trialIsOver();\n    }\n\n    function trialIsOver() {\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor)\n        vismem.drawObjects(canvasContext, vismem.objects);\n\n        currTrial = currTrial + 1;\n        if (currTrial >= trialNumber) {\n            Done();\n        } else {\n            trialConclude();\n        }\n    }\n    \n    function trialConclude() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        let textHeight = 0;\n        if (thatRight === 'wrong'){\n            responseText = \"ผิด\";\n            textHeight = 36;\n        } else {\n            responseText = \"ถูก\";\n            textHeight = 20;\n        }\n\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(responseText).width;\n        timeoutList.push(\n            setTimeout(function() {\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, responseText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 100),\n\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 600),\n\n            setTimeout(function() {\n                checkStimuliColorSet();\n            }, 900)\n        )\n    }\n\n    function timeIntervalPerBlock() {\n        setDisabledButton(true);\n        vismem.erase(canvasContext);\n        vismem.clear();\n        makeBackground(backgroundColor);\n        vismem.drawObjects(canvasContext, vismem.objects);\n        \n        // ทำเพื่อให้ textWidth คำนวนค่าได้ก่อนที่ 3 2 1 จะขึ้น\n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '0';\n            }, 100) \n        )\n\n        let textHeight = 36;\n        canvasContext.font = \"120px Sarabun\"\n        let textWidth = canvasContext.measureText(countdownText).width;\n        \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '3';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 200) \n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '2';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 1200)\n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 1900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                countdownText = '1';\n                let text = vismem.makeText('t', centerX - textWidth/2, centerY + textHeight, countdownText, \"Black\", canvasContext.font);\n                vismem.drawText(canvasContext, text);\n            }, 2200)\n        )\n\n        timeoutList.push(\n            setTimeout(function() {\n                vismem.erase(canvasContext);\n                vismem.clear();\n                makeBackground(backgroundColor);\n                vismem.drawObjects(canvasContext, vismem.objects);\n            }, 2900)\n        )\n    \n        timeoutList.push(\n            setTimeout(function() {\n                initialT(0, allSetsizeAndTarget[currTrial][0]);\n            }, 3200) \n        )\n    }\n\n    function Done() {\n        setIsItDone(true);\n        postEntryResult = postEntry();\n        console.log(postEntryResult)\n        saveJSONDataToClientDevice(postEntryResult, `Subject${props.userId}_${version}_${thisTime().toString()}`);\n        backToLanding();\n    }\n\n    function postEntry(){\n        postEntryResult = {\n            \"date\" : `${thisTime().toString()}`,\n            \"userId\" : props.userId,\n            \"userSession\" : version,\n            \"target\" : targetDataResult,\n            \"trialData\" : trialDataResult,\n            \"stimuliData\": stimulusDataResult,\n        }\n        return postEntryResult;\n    }\n\n    function backToLanding() {\n        navigate('/landing');\n    }\n\n    return (\n        <div className='h-screen w-full bg-slate-50 flex flex-col'>\n            <div className='flex justify-center items-center flex-grow p-5'>\n                {<CJSWindow searchTarget={searchTarget} searchTargetList={searchTargetList} canvasWidth={canvasWidth} canvasHeight={canvasHeight} />}\n                {<CJSButton searchTarget={searchTarget} disabledButton={disabledButton} checkResp={checkResp}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default FITC2;\n\nfunction thisTime() {\n    let thisTime = moment().format('YYYY-MM-DDTkk:mm:ss.SSSSSS');\n    return thisTime;\n}","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/loadingSpinner/LoadingSpinner.tsx",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/scripts/shuffle.ts",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/scripts/vismemCC_simon.ts",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/breadcrumbs/breadCrumb.tsx",["90","91","92","93","94"],[],"import { HomeIcon } from '@heroicons/react/20/solid'\nimport { ArrowRightOnRectangleIcon } from \"@heroicons/react/24/outline\";\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './breadCrumb.css'\nimport { getDataFromLocalStorage } from '../../uitls/offline';\n\nexport default function BreadCrumb() {\n  const [headerText, setHeaderText] = useState('');\n  const [gameButtonLink, setGameButtonLink] = useState('#/landing');\n  const [disableHomeButton, setDisableHomeButton] = useState('');\n  const [disableGameButton, setDisableGameButton] = useState('');\n  const [hideUserId, setHideUserId] = useState(false);\n  const location = useLocation();\n  const pathName = location.pathname;\n  const id = getDataFromLocalStorage('userId');\n  \n  let CJSHeaderText = 'หาเธอในฝูงชน';\n  let pages = [\n    { name: headerText, href: gameButtonLink, current: false },\n  ]\n  \n  useEffect(() => {\n    if (pathName === '/landing') {\n      setHeaderText('หน้าหลัก');\n    } else {\n      setHideUserId(true);\n      if (pathName.includes('/spatial-span')) {\n        // setHeaderText(SSHeaderText);\n        setGameButtonLink('#/spatial-span');\n      } else if (pathName.includes('/face-in-the-crowd')) {\n        setHeaderText(CJSHeaderText);\n        setGameButtonLink('#/face-in-the-crowd');\n      } else if (pathName.includes('/go-nogo')) {\n        // setHeaderText(GNGHeaderText);\n        setGameButtonLink('#/go-nogo');\n      }\n    }\n\n    if (pathName.includes('/instruction') || pathName.includes('/trial')) {\n      setDisableHomeButton(' disabled')\n      setDisableGameButton(' disabled');\n    } \n  }, [])\n  \n  return (\n    <div className='py-4 px-12 sm:py-3 w-full bg-pink-400 shadow-md'>    \n      <nav className=\"flex h-fit justify-between\" aria-label=\"Breadcrumb\">\n        <ol role=\"list\" className=\"flex items-center space-x-4\">\n          <li>\n            <div>\n              <a href={'#/landing'} className={`text-stone-100 hover:text-stone-200 + ${disableHomeButton}`}>\n                <HomeIcon className=\"h-5 w-5 sm:h-8 sm:w-8 flex-shrink-0\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">Home</span>\n              </a>\n            </div>\n          </li>\n          {pages.map((page) => (\n            <li key={page.name}>\n              <div className=\"flex items-center\">\n                <svg\n                  className=\"h-5 w-5 sm:h-8 sm:w-8 flex-shrink-0 text-stone-100\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  aria-hidden=\"true\"\n                >\n                  <path d=\"M5.555 17.776l8-16 .894.448-8 16-.894-.448z\" />\n                </svg>\n                <a\n                  href={page.href}\n                  className={`ml-4 text-sm sm:text-xl font-bold sm:font-bold text-stone-100 + ${disableGameButton}`}\n                  aria-current={page.current ? 'page' : undefined}\n                >\n                  {page.name}\n                </a>\n              </div>\n            </li>\n          ))}\n        </ol>\n        {hideUserId ? null : \n          <ol role=\"list\" className=\"flex items-center space-x-4\">\n            <li>\n              <a\n                className={`ml-4 text-sm sm:text-xl font-bold sm:font-bold text-stone-100 + ${disableGameButton}`}\n              >\n                {`Subject ID : ` + id}\n              </a>\n            </li>\n            <li>\n              <div>\n                <a href={''} className={`text-stone-100 hover:text-stone-200 + ${disableHomeButton}`}>\n                <ArrowRightOnRectangleIcon className=\"h-8 w-8 text-stone-100\" />\n                </a>\n              </div>\n            </li>\n          </ol>\n        }\n      </nav>\n    </div>\n  )\n}","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameSelectionCard/gameSelectionCard.tsx",["95"],[],"import { PlayIcon } from '@heroicons/react/20/solid'\n\ninterface IGameInfo {\n    name: string;\n    title: string;\n    domain: string;\n    gameUri: string;\n    image: string;\n}\n\nexport default function GameSelectionCards(props: {games: IGameInfo[]}) {\n  return (\n    <ul role=\"list\" className=\"grid grid-cols-1 gap-24 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2\">\n      {props.games.map((game) => (\n        <li\n          key={game.title}\n          className=\"col-span-1 flex flex-col divide-y divide-gray-200 rounded-lg bg-white text-center shadow-lg py-1\"\n        >\n          <div className=\"flex flex-1 flex-col p-8\">\n            <img className=\"mx-auto h-32 w-32 flex-shrink-0\" src={game.image} alt=\"\" />\n            <h3 className=\"mt-6 text-sm font-bold text-gray-900\">{game.name}</h3>\n            <dl className=\"mt-1 flex flex-grow flex-col justify-between\">\n              <dt className=\"sr-only\">Title</dt>\n              <dd className=\"text-sm text-gray-600\">{game.title}</dd>\n              <dt className=\"sr-only\">Role</dt>\n              <dd className=\"mt-3\">\n                <span className=\"inline-flex items-center rounded-full bg-amber-50 px-2 py-1 text-xs font-bold text-amber-500 ring-1 ring-inset ring-amber-500/20\">\n                  {game.domain}\n                </span>\n              </dd>\n            </dl>\n          </div>\n          <div>\n            <div className=\"-mt-px flex divide-x divide-gray-200\">\n              <div className=\"-ml-px flex w-0 flex-1\">\n                <a\n                  href={`#/${game.gameUri}`}\n                  className=\"relative inline-flex w-0 flex-1 items-center justify-center gap-x-3 rounded-br-lg border border-transparent py-4 text-sm font-semibold text-gray-900\"\n                >\n                  <PlayIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  เริ่มการทดสอบ\n                </a>\n              </div>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  )\n}","/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameWindow/cjsWindow/CJSWindow.tsx",[],[],"/Users/pavlov/Documents/GitHub/vss-visual-search/src/components/gameWindow/cjsWindow/cjsButton/CJSButton.tsx",["96"],[],"import React, { useEffect } from 'react';\nimport './CJSButton.scss';\n\nfunction CJSButton(props) {\n  useEffect(() => {\n    // ฟังก์ชันตรวจจับการกดแป้นพิมพ์\n    function handleKeyDown(event) {\n      // ตรวจสอบว่าเป็นปุ่ม Shift ซ้ายหรือขวา และตรวจสอบว่า disabledButton เป็น false\n      if (!props.disabledButton) {\n        if (event.code === 'ShiftLeft') {\n          // กด Shift ซ้าย -> ทำงานเหมือนคลิกปุ่ม \"ไม่มี\"\n          props.checkResp(0);  // เมื่อกด Shift ซ้าย\n        } else if (event.code === 'ShiftRight') {\n          // กด Shift ขวา -> ทำงานเหมือนคลิกปุ่ม \"มี\"\n          props.checkResp(1);  // เมื่อกด Shift ขวา\n        }\n      }\n    }\n\n    // เพิ่ม event listener สำหรับการกดแป้นพิมพ์\n    document.addEventListener('keydown', handleKeyDown);\n\n    // ทำความสะอาดเมื่อคอมโพเนนต์ถูกทำลาย\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [props.checkResp, props.disabledButton]);\n\n  return (\n    <div>\n      {/* ปุ่มจะสามารถกดได้ก็ต่อเมื่อ disabledButton เป็น false */}\n      {/* {props.searchTarget && !props.disabledButton ? (\n        <div className=\"btnContainer\">\n          <button\n            id=\"no-btn\"\n            disabled={props.disabledButton}\n            className=\"btn no-btn circle lg\"\n            onMouseDown={() => props.checkResp(0)}  // เมื่อคลิกปุ่ม \"ไม่มี\"\n          >\n            ไม่มี\n          </button>\n\n          <button\n            id=\"yes-btn\"\n            disabled={props.disabledButton}\n            className=\"btn yes-btn circle lg\"\n            onMouseDown={() => props.checkResp(1)}  // เมื่อคลิกปุ่ม \"มี\"\n          >\n            มี\n          </button>\n        </div>\n      ) : null} */}\n    </div>\n  );\n}\n\nexport default CJSButton;\n",{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":22},{"ruleId":"97","severity":1,"message":"102","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":15},{"ruleId":"97","severity":1,"message":"103","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":22},{"ruleId":"97","severity":1,"message":"104","line":57,"column":5,"nodeType":"99","messageId":"100","endLine":57,"endColumn":11},{"ruleId":"97","severity":1,"message":"105","line":58,"column":5,"nodeType":"99","messageId":"100","endLine":58,"endColumn":19},{"ruleId":"97","severity":1,"message":"106","line":79,"column":5,"nodeType":"99","messageId":"100","endLine":79,"endColumn":17},{"ruleId":"97","severity":1,"message":"107","line":80,"column":5,"nodeType":"99","messageId":"100","endLine":80,"endColumn":19},{"ruleId":"97","severity":1,"message":"108","line":99,"column":12,"nodeType":"99","messageId":"100","endLine":99,"endColumn":25},{"ruleId":"97","severity":1,"message":"109","line":99,"column":27,"nodeType":"99","messageId":"100","endLine":99,"endColumn":43},{"ruleId":"97","severity":1,"message":"110","line":101,"column":12,"nodeType":"99","messageId":"100","endLine":101,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":111,"column":12,"nodeType":"113","endLine":111,"endColumn":14,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":115,"column":12,"nodeType":"113","endLine":115,"endColumn":26,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":44,"column":6,"nodeType":"113","endLine":44,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":49,"column":9,"nodeType":"121","endLine":49,"endColumn":65},{"ruleId":"119","severity":1,"message":"120","line":81,"column":11,"nodeType":"121","endLine":81,"endColumn":67},{"ruleId":"122","severity":1,"message":"123","line":83,"column":15,"nodeType":"121","endLine":85,"endColumn":16},{"ruleId":"122","severity":1,"message":"124","line":91,"column":17,"nodeType":"121","endLine":91,"endColumn":103},{"ruleId":"119","severity":1,"message":"125","line":13,"column":5,"nodeType":"121","endLine":13,"endColumn":102},{"ruleId":"111","severity":1,"message":"126","line":27,"column":6,"nodeType":"113","endLine":27,"endColumn":45,"suggestions":"127"},"@typescript-eslint/no-unused-vars","'CJSLanding' is defined but never used.","Identifier","unusedVar","'CJSInstruction' is defined but never used.","'CJSGame' is defined but never used.","'LoadingSpinner' is defined but never used.","'currSS' is assigned a value but never used.","'initialSetSize' is assigned a value but never used.","'correctCount' is assigned a value but never used.","'incorrectCount' is assigned a value but never used.","'progressValue' is assigned a value but never used.","'setProgressValue' is assigned a value but never used.","'isItDone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createPseudorandomStimuli'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'switchSearchMode'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has missing dependencies: 'CJSHeaderText' and 'pathName'. Either include them or remove the dependency array.",["130"],"jsx-a11y/no-redundant-roles","The element ol has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["131"],{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [createPseudorandomStimuli]",{"range":"140","text":"141"},"Update the dependencies array to be: [searchTarget, switchSearchMode]",{"range":"142","text":"143"},"Update the dependencies array to be: [CJSHeaderText, pathName]",{"range":"144","text":"145"},"Update the dependencies array to be: [props, props.checkResp, props.disabledButton]",{"range":"146","text":"147"},[3874,3876],"[createPseudorandomStimuli]",[3948,3962],"[searchTarget, switchSearchMode]",[1628,1630],"[CJSHeaderText, pathName]",[888,927],"[props, props.checkResp, props.disabledButton]"]